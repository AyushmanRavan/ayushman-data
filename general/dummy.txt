{
	"swagger": "2.0",
	"info": {
		"description": "Api Documentation",
		"version": "1.0",
		"title": "Api Documentation",
		"termsOfService": "urn:tos",
		"contact": {},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0"
		}
	},
	"host": "localhost",
	"basePath": "/",
	"tags": [{
			"name": "Address Entity",
			"description": "$ Proxy 239"
		},
		{
			"name": "utm-parameter-controller",
			"description": "Utm Parameter Controller"
		},
		{
			"name": "Advice Entity",
			"description": "$ Proxy 246"
		},
		{
			"name": "AfterOrderPaidStatus Entity",
			"description": "$ Proxy 300"
		},
		{
			"name": "Allergy Entity",
			"description": "$ Proxy 252"
		},
		{
			"name": "AllergyType Entity",
			"description": "$ Proxy 282"
		},
		{
			"name": "AppVersionInfo Entity",
			"description": "$ Proxy 233"
		},
		{
			"name": "Area Entity",
			"description": "$ Proxy 267"
		},
		{
			"name": "Batch Entity",
			"description": "$ Proxy 299"
		},
		{
			"name": "Brand Entity",
			"description": "$ Proxy 251"
		},
		{
			"name": "CentreCode Entity",
			"description": "$ Proxy 253"
		},
		{
			"name": "City Entity",
			"description": "Simple Jpa Repository"
		},
		{
			"name": "Clinic Entity",
			"description": "$ Proxy 180"
		},
		{
			"name": "ClinicConsumable Entity",
			"description": "$ Proxy 297"
		},
		{
			"name": "ClinicDiagnosticTypeConfiguration Entity",
			"description": "$ Proxy 231"
		},
		{
			"name": "ClosedTimeSlot Entity",
			"description": "$ Proxy 261"
		},
		{
			"name": "Cluster Entity",
			"description": "$ Proxy 265"
		},
		{
			"name": "ClusterAndDiagnosticLab Entity",
			"description": "$ Proxy 289"
		},
		{
			"name": "Comment Entity",
			"description": "$ Proxy 240"
		},
		{
			"name": "CommentOnDocument Entity",
			"description": "$ Proxy 222"
		},
		{
			"name": "Consultation Entity",
			"description": "$ Proxy 198"
		},
		{
			"name": "ConsultationAndDoxper Entity",
			"description": "$ Proxy 212"
		},
		{
			"name": "ConsultationHistory Entity",
			"description": "$ Proxy 203"
		},
		{
			"name": "ConsultationReason Entity",
			"description": "$ Proxy 259"
		},
		{
			"name": "Consumable Entity",
			"description": "$ Proxy 229"
		},
		{
			"name": "DeclineReason Entity",
			"description": "$ Proxy 257"
		},
		{
			"name": "Department Entity",
			"description": "$ Proxy 301"
		},
		{
			"name": "Diagnosis Entity",
			"description": "$ Proxy 215"
		},
		{
			"name": "DiagnosisType Entity",
			"description": "$ Proxy 283"
		},
		{
			"name": "Diagnostic Entity",
			"description": "$ Proxy 177"
		},
		{
			"name": "DiagnosticAndDocument Entity",
			"description": "$ Proxy 303"
		},
		{
			"name": "DiagnosticAndPatientHistory Entity",
			"description": "$ Proxy 216"
		},
		{
			"name": "DiagnosticLab Entity",
			"description": "$ Proxy 181"
		},
		{
			"name": "DiagnosticLabsAndZipcode Entity",
			"description": "$ Proxy 302"
		},
		{
			"name": "DiagnosticReportValue Entity",
			"description": "$ Proxy 295"
		},
		{
			"name": "DiagnosticStatusFlow Entity",
			"description": "$ Proxy 179"
		},
		{
			"name": "DiagnosticType Entity",
			"description": "$ Proxy 280"
		},
		{
			"name": "DiagnosticTypeConsumable Entity",
			"description": "$ Proxy 241"
		},
		{
			"name": "DiagnosticTypeInLab Entity",
			"description": "$ Proxy 276"
		},
		{
			"name": "DiagnosticTypeItem Entity",
			"description": "$ Proxy 236"
		},
		{
			"name": "DiagnosticTypePrecaution Entity",
			"description": "$ Proxy 296"
		},
		{
			"name": "DiagnosticTypeResult Entity",
			"description": "$ Proxy 294"
		},
		{
			"name": "DiagnosticTypeSpecimenType Entity",
			"description": "$ Proxy 258"
		},
		{
			"name": "DiagnosticTypeStructure Entity",
			"description": "$ Proxy 237"
		},
		{
			"name": "Doctor Entity",
			"description": "$ Proxy 196"
		},
		{
			"name": "DoctorAdviceTag Entity",
			"description": "$ Proxy 292"
		},
		{
			"name": "DoctorInClinic Entity",
			"description": "$ Proxy 209"
		},
		{
			"name": "DoctorInClinicClosedTimeSlot Entity",
			"description": "$ Proxy 230"
		},
		{
			"name": "DoctorInClinicConfiguration Entity",
			"description": "$ Proxy 284"
		},
		{
			"name": "DoctorMessage Entity",
			"description": "$ Proxy 254"
		},
		{
			"name": "DoctorMessageAndDoctorInClinic Entity",
			"description": "$ Proxy 263"
		},
		{
			"name": "DoctorTagType Entity",
			"description": "$ Proxy 293"
		},
		{
			"name": "DoctorTags Entity",
			"description": "$ Proxy 274"
		},
		{
			"name": "ESAdvice Entity",
			"description": "Number Keyed Repository"
		},
		{
			"name": "ESDiagnosisType Entity",
			"description": "Number Keyed Repository"
		},
		{
			"name": "ESDiagnosticType Entity",
			"description": "Number Keyed Repository"
		},
		{
			"name": "ESMedicine Entity",
			"description": "Number Keyed Repository"
		},
		{
			"name": "ESProcedureType Entity",
			"description": "Number Keyed Repository"
		},
		{
			"name": "ESSymptomType Entity",
			"description": "Number Keyed Repository"
		},
		{
			"name": "ExistingCondition Entity",
			"description": "$ Proxy 277"
		},
		{
			"name": "ExistingConditionType Entity",
			"description": "$ Proxy 272"
		},
		{
			"name": "Family Entity",
			"description": "$ Proxy 189"
		},
		{
			"name": "Feedback Entity",
			"description": "$ Proxy 238"
		},
		{
			"name": "FeedbackParameter Entity",
			"description": "$ Proxy 245"
		},
		{
			"name": "Followup Entity",
			"description": "$ Proxy 213"
		},
		{
			"name": "HealthProblemTagsForDoctor Entity",
			"description": "$ Proxy 275"
		},
		{
			"name": "HealthProblemTagsForSpeciality Entity",
			"description": "$ Proxy 298"
		},
		{
			"name": "Issue Entity",
			"description": "$ Proxy 225"
		},
		{
			"name": "Manufacturer Entity",
			"description": "$ Proxy 287"
		},
		{
			"name": "MedicalProcedure Entity",
			"description": "$ Proxy 285"
		},
		{
			"name": "MedicationDate Entity",
			"description": "Simple Jpa Repository"
		},
		{
			"name": "Medicine Entity",
			"description": "$ Proxy 262"
		},
		{
			"name": "MedicineGeneral Entity",
			"description": "$ Proxy 260"
		},
		{
			"name": "MedicineInClinic Entity",
			"description": "$ Proxy 273"
		},
		{
			"name": "MedicineInventory Entity",
			"description": "$ Proxy 250"
		},
		{
			"name": "MedicineSalt Entity",
			"description": "Simple Jpa Repository"
		},
		{
			"name": "NetPromoterScore Entity",
			"description": "$ Proxy 266"
		},
		{
			"name": "Patient Entity",
			"description": "$ Proxy 190"
		},
		{
			"name": "PatientHistory Entity",
			"description": "$ Proxy 183"
		},
		{
			"name": "PatientPreviousDocument Entity",
			"description": "$ Proxy 223"
		},
		{
			"name": "PatientSymptom Entity",
			"description": "$ Proxy 234"
		},
		{
			"name": "Precaution Entity",
			"description": "$ Proxy 268"
		},
		{
			"name": "Prescription Entity",
			"description": "$ Proxy 200"
		},
		{
			"name": "PrescriptionByDate Entity",
			"description": "$ Proxy 214"
		},
		{
			"name": "PrescriptionDescription Entity",
			"description": "$ Proxy 201"
		},
		{
			"name": "ProcedureType Entity",
			"description": "$ Proxy 264"
		},
		{
			"name": "Referral Entity",
			"description": "$ Proxy 232"
		},
		{
			"name": "Salt Entity",
			"description": "$ Proxy 242"
		},
		{
			"name": "Scribble Entity",
			"description": "$ Proxy 218"
		},
		{
			"name": "SecondaryMedicine Entity",
			"description": "$ Proxy 270"
		},
		{
			"name": "Speciality Entity",
			"description": "$ Proxy 271"
		},
		{
			"name": "SpecialityDiagnosisType Entity",
			"description": "$ Proxy 290"
		},
		{
			"name": "SpecialityVitalType Entity",
			"description": "$ Proxy 247"
		},
		{
			"name": "SpecimenType Entity",
			"description": "$ Proxy 235"
		},
		{
			"name": "SpecimenTypeAndDiagnosticLab Entity",
			"description": "$ Proxy 269"
		},
		{
			"name": "SpecimenTypeAndVendorSample Entity",
			"description": "$ Proxy 288"
		},
		{
			"name": "State Entity",
			"description": "Simple Jpa Repository"
		},
		{
			"name": "Symptom Entity",
			"description": "$ Proxy 279"
		},
		{
			"name": "SymptomType Entity",
			"description": "$ Proxy 248"
		},
		{
			"name": "TakenMedicine Entity",
			"description": "$ Proxy 243"
		},
		{
			"name": "Taxes Entity",
			"description": "$ Proxy 244"
		},
		{
			"name": "TestParameterMaster Entity",
			"description": "$ Proxy 278"
		},
		{
			"name": "TimeSlot Entity",
			"description": "$ Proxy 202"
		},
		{
			"name": "TimeSlotGroup Entity",
			"description": "$ Proxy 255"
		},
		{
			"name": "Transcription Entity",
			"description": "$ Proxy 286"
		},
		{
			"name": "TranscriptionIssue Entity",
			"description": "$ Proxy 281"
		},
		{
			"name": "TranscriptionStateFlow Entity",
			"description": "$ Proxy 249"
		},
		{
			"name": "VisitType Entity",
			"description": "$ Proxy 217"
		},
		{
			"name": "Vital Entity",
			"description": "$ Proxy 256"
		},
		{
			"name": "VitalType Entity",
			"description": "$ Proxy 227"
		},
		{
			"name": "analysis-report-dashboard",
			"description": "Analysis Report Dashboard"
		},
		{
			"name": "approval-controller",
			"description": "Approval Controller"
		},
		{
			"name": "area-controller",
			"description": "Area Controller"
		},
		{
			"name": "basic-error-controller",
			"description": "Basic Error Controller"
		},
		{
			"name": "bucket-controller",
			"description": "Bucket Controller"
		},
		{
			"name": "bulk-upload-controller",
			"description": "Bulk Upload Controller"
		},
		{
			"name": "camp-controller",
			"description": "Camp Controller"
		},
		{
			"name": "clinic-consumable-controller",
			"description": "Clinic Consumable Controller"
		},
		{
			"name": "clinic-controller",
			"description": "Clinic Controller"
		},
		{
			"name": "cluster-and-diagnostic-lab-controller",
			"description": "Cluster And Diagnostic Lab Controller"
		},
		{
			"name": "cluster-controller",
			"description": "Cluster Controller"
		},
		{
			"name": "code-controller",
			"description": "Code Controller"
		},
		{
			"name": "comment-for-patient-history-controller",
			"description": "Comment For Patient History Controller"
		},
		{
			"name": "common-symptom-controller",
			"description": "Common Symptom Controller"
		},
		{
			"name": "consultation-and-doxper-controller",
			"description": "Consultation And Doxper Controller"
		},
		{
			"name": "consultation-controller",
			"description": "Consultation Controller"
		},
		{
			"name": "consultation-reason-controller",
			"description": "Consultation Reason Controller"
		},
		{
			"name": "consumable-controller",
			"description": "Consumable Controller"
		},
		{
			"name": "converter-controller",
			"description": "Converter Controller"
		},
		{
			"name": "dashboard-summary-controller",
			"description": "Dashboard Summary Controller"
		},
		{
			"name": "diagnosis-type-controller",
			"description": "Diagnosis Type Controller"
		},
		{
			"name": "diagnostic-controller",
			"description": "Diagnostic Controller"
		},
		{
			"name": "diagnostic-and-document-controller",
			"description": "DiagnosticAndDocument Controller"
		},
		{
			"name": "diagnostic-labs-and-zipcode-controller",
			"description": "Diagnostic Labs And Zipcode Controller"
		},
		{
			"name": "diagnostic-report-controller",
			"description": "Diagnostic Report Controller"
		},
		{
			"name": "diagnostic-revamp-controller",
			"description": "Diagnostic Revamp Controller"
		},
		{
			"name": "diagnostic-type-and-specimen-type-controller",
			"description": "Diagnostic Type And Specimen Type Controller"
		},
		{
			"name": "diagnostic-type-in-lab-controller",
			"description": "Diagnostic Type In Lab Controller"
		},
		{
			"name": "doctor-and-clinic-controller",
			"description": "Doctor And Clinic Controller"
		},
		{
			"name": "doctor-controller",
			"description": "Doctor Controller"
		},
		{
			"name": "doctor-dashboard-controller",
			"description": "Doctor Dashboard Controller"
		},
		{
			"name": "doctor-in-clinic-configuration-controller",
			"description": "Doctor In Clinic Configuration Controller"
		},
		{
			"name": "doctor-message-and-doctor-in-clinic-controller",
			"description": "Doctor Message And Doctor In Clinic Controller"
		},
		{
			"name": "doctor-message-controller",
			"description": "Doctor Message Controller"
		},
		{
			"name": "doctor-rating-controller",
			"description": "Doctor Rating Controller"
		},
		{
			"name": "doctors-appointment-dashboard-controller",
			"description": "Doctors Appointment Dashboard Controller"
		},
		{
			"name": "doctors-assistant-dashboard-controller",
			"description": "Doctors Assistant Dashboard Controller"
		},
		{
			"name": "elasticsearch-controller",
			"description": "Elasticsearch Controller"
		},
		{
			"name": "family-controller",
			"description": "Family Controller"
		},
		{
			"name": "follow-up-controller",
			"description": "Follow Up Controller"
		},
		{
			"name": "location-details-controller",
			"description": "Location Details Controller"
		},
		{
			"name": "meddo-lite-controller",
			"description": "Meddo Lite Controller"
		},
		{
			"name": "medication-reminder-controller",
			"description": "Medication Reminder Controller"
		},
		{
			"name": "medicine-controller",
			"description": "Medicine Controller"
		},
		{
			"name": "medicine-revamp-controller",
			"description": "Medicine Revamp Controller"
		},
		{
			"name": "operation-handler",
			"description": "Operation Handler"
		},
		{
			"name": "order-controller",
			"description": "Order Controller"
		},
		{
			"name": "order-swagger-controller",
			"description": "Order Swagger Controller"
		},
		{
			"name": "patient-and-order-controller",
			"description": "Patient And Order Controller"
		},
		{
			"name": "patient-app-consolidate-controller",
			"description": "Patient App Consolidate Controller"
		},
		{
			"name": "patient-app-controller",
			"description": "Patient App Controller"
		},
		{
			"name": "patient-app-my-care-controller",
			"description": "Patient App My Care Controller"
		},
		{
			"name": "patient-history-search-controller",
			"description": "Patient History Search Controller"
		},
		{
			"name": "patient-medical-history-controller",
			"description": "Patient Medical History Controller"
		},
		{
			"name": "patient-open-api-controller",
			"description": "Patient Open Api Controller"
		},
		{
			"name": "patient-repository-controller",
			"description": "Patient Repository Controller"
		},
		{
			"name": "prescription-by-date-controller",
			"description": "Prescription By Date Controller"
		},
		{
			"name": "prescription-controller",
			"description": "Prescription Controller"
		},
		{
			"name": "procedure-type-controller",
			"description": "Procedure Type Controller"
		},
		{
			"name": "profile-controller",
			"description": "Profile Controller"
		},
		{
			"name": "reason-coding-controller",
			"description": "Reason Coding Controller"
		},
		{
			"name": "recommendation-controller",
			"description": "Recommendation Controller"
		},
		{
			"name": "recommendation-pos-controller",
			"description": "Recommendation Pos Controller"
		},
		{
			"name": "scribble-upload-controller",
			"description": "Scribble Upload Controller"
		},
		{
			"name": "subscription-controller",
			"description": "subscription Controller"
		},
		{
			"name": "search-controller",
			"description": "Search Controller"
		},
		{
			"name": "speciality-controller",
			"description": "Speciality Controller"
		},
		{
			"name": "specimen-type-and-diagnostic-lab-controller",
			"description": "Specimen Type And Diagnostic Lab Controller"
		},
		{
			"name": "specimen-type-and-vendor-sample-controller",
			"description": "Specimen Type And Vendor Sample Controller"
		},
		{
			"name": "state-and-city-controller",
			"description": "State And City Controller"
		},
		{
			"name": "swaggergen-controller",
			"description": "Swaggergen Controller"
		},
		{
			"name": "time-slot-controller",
			"description": "Time Slot Controller"
		},
		{
			"name": "transcribe-controller",
			"description": "Transcribe Controller"
		},
		{
			"name": "transcription-revamp-controller",
			"description": "Transcription Revamp Controller"
		},
		{
			"name": "version-controller",
			"description": "Version Controller"
		},
		{
			"name": "web-mvc-links-handler",
			"description": "Web Mvc Links Handler"
		}
	],
	"paths": {
		"/actuator": {
			"get": {
				"tags": [
					"web-mvc-links-handler"
				],
				"summary": "links",
				"operationId": "linksUsingGET",
				"produces": [
					"application/json",
					"application/vnd.spring-boot.actuator.v2+json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "object",
								"additionalProperties": {
									"$ref": "#/definitions/Link"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/actuator/health": {
			"get": {
				"tags": [
					"operation-handler"
				],
				"summary": "handle",
				"operationId": "handleUsingGET_2",
				"produces": [
					"application/json",
					"application/vnd.spring-boot.actuator.v2+json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": false,
					"schema": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/actuator/health/{component}": {
			"get": {
				"tags": [
					"operation-handler"
				],
				"summary": "handle",
				"operationId": "handleUsingGET_1",
				"produces": [
					"application/json",
					"application/vnd.spring-boot.actuator.v2+json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": false,
					"schema": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/actuator/health/{component}/{instance}": {
			"get": {
				"tags": [
					"operation-handler"
				],
				"summary": "handle",
				"operationId": "handleUsingGET",
				"produces": [
					"application/json",
					"application/vnd.spring-boot.actuator.v2+json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": false,
					"schema": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/actuator/info": {
			"get": {
				"tags": [
					"operation-handler"
				],
				"summary": "handle",
				"operationId": "handleUsingGET_3",
				"produces": [
					"application/json",
					"application/vnd.spring-boot.actuator.v2+json"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": false,
					"schema": {
						"type": "object",
						"additionalProperties": {
							"type": "string"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/MedicationDates": {
			"get": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "findAllMedicationDate",
				"operationId": "findAllMedicationDateUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicationDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "saveMedicationDate",
				"operationId": "saveMedicationDateUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicationDate"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicationDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/MedicationDates/search/findByConsumptionDateAndPrescriptionDescriptionId": {
			"get": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "findByConsumptionDateAndPrescriptionDescriptionIdMedicationDate",
				"operationId": "findByConsumptionDateAndPrescriptionDescriptionIdMedicationDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicationDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/MedicationDates/search/findByPrescriptionDescriptionId": {
			"get": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "findByPrescriptionDescriptionIdMedicationDate",
				"operationId": "findByPrescriptionDescriptionIdMedicationDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicationDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/MedicationDates/{id}": {
			"get": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "findByIdMedicationDate",
				"operationId": "findByIdMedicationDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicationDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "saveMedicationDate",
				"operationId": "saveMedicationDateUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicationDate"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicationDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "deleteMedicationDate",
				"operationId": "deleteMedicationDateUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "saveMedicationDate",
				"operationId": "saveMedicationDateUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicationDate"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicationDate»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/MedicationDates/{id}/prescriptionDescription": {
			"get": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "medicationDatePrescriptionDescription",
				"operationId": "medicationDatePrescriptionDescriptionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "medicationDatePrescriptionDescription",
				"operationId": "medicationDatePrescriptionDescriptionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "medicationDatePrescriptionDescription",
				"operationId": "medicationDatePrescriptionDescriptionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "medicationDatePrescriptionDescription",
				"operationId": "medicationDatePrescriptionDescriptionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicationDate Entity"
				],
				"summary": "medicationDatePrescriptionDescription",
				"operationId": "medicationDatePrescriptionDescriptionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/SpecimenTypeAndVendorSamples": {
			"get": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "findAllSpecimenTypeAndVendorSample",
				"operationId": "findAllSpecimenTypeAndVendorSampleUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndVendorSample»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "saveSpecimenTypeAndVendorSample",
				"operationId": "saveSpecimenTypeAndVendorSampleUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SpecimenTypeAndVendorSample"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndVendorSample»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/SpecimenTypeAndVendorSamples/search/findByDiagnosticLabIdAndSpecimenTypeId": {
			"get": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "findByDiagnosticLabIdAndSpecimenTypeIdSpecimenTypeAndVendorSample",
				"operationId": "findByDiagnosticLabIdAndSpecimenTypeIdSpecimenTypeAndVendorSampleUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticLabId",
						"in": "query",
						"description": "diagnosticLabId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specimenTypeId",
						"in": "query",
						"description": "specimenTypeId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndVendorSample»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/SpecimenTypeAndVendorSamples/{id}": {
			"get": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "findByIdSpecimenTypeAndVendorSample",
				"operationId": "findByIdSpecimenTypeAndVendorSampleUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndVendorSample»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "saveSpecimenTypeAndVendorSample",
				"operationId": "saveSpecimenTypeAndVendorSampleUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecimenTypeAndVendorSample"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndVendorSample»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "deleteSpecimenTypeAndVendorSample",
				"operationId": "deleteSpecimenTypeAndVendorSampleUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "saveSpecimenTypeAndVendorSample",
				"operationId": "saveSpecimenTypeAndVendorSampleUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecimenTypeAndVendorSample"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndVendorSample»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/SpecimenTypeAndVendorSamples/{id}/diagnosticLab": {
			"get": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleDiagnosticLab",
				"operationId": "specimenTypeAndVendorSampleDiagnosticLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleDiagnosticLab",
				"operationId": "specimenTypeAndVendorSampleDiagnosticLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleDiagnosticLab",
				"operationId": "specimenTypeAndVendorSampleDiagnosticLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleDiagnosticLab",
				"operationId": "specimenTypeAndVendorSampleDiagnosticLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleDiagnosticLab",
				"operationId": "specimenTypeAndVendorSampleDiagnosticLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/SpecimenTypeAndVendorSamples/{id}/specimenType": {
			"get": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleSpecimenType",
				"operationId": "specimenTypeAndVendorSampleSpecimenTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleSpecimenType",
				"operationId": "specimenTypeAndVendorSampleSpecimenTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleSpecimenType",
				"operationId": "specimenTypeAndVendorSampleSpecimenTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleSpecimenType",
				"operationId": "specimenTypeAndVendorSampleSpecimenTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenTypeAndVendorSample Entity"
				],
				"summary": "specimenTypeAndVendorSampleSpecimenType",
				"operationId": "specimenTypeAndVendorSampleSpecimenTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/address/details": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "fetchAddressDetails",
				"operationId": "fetchAddressDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "addressId",
					"in": "query",
					"description": "addressId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Addresses"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/subscription/partner-offer": {
			"get": {
				"tags": [
					"subscription-controller"
				],
				"summary": "fetchSubscriptionPartnerOfferByPatientSubscriptionId",
				"operationId": "fetchSubscriptionPartnerOfferByPatientSubscriptionIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientSubscriptionId",
					"in": "query",
					"description": "patientSubscriptionId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SubscriptionPartnerOfferForRouterDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/subscription/partner-offer/by-subscription-id": {
			"get": {
				"tags": [
					"subscription-controller"
				],
				"summary": "fetchSubscriptionPartnerOfferBySubscriptionId",
				"operationId": "fetchSubscriptionPartnerOfferBySubscriptionIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "subscriptionId",
					"in": "query",
					"description": "subscriptionId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SubscriptionPartnerOfferForRouterDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},"/api/v1/emr/subscription/patient/validity": {
			"post": {
				"tags": [
					"subscription-controller"
				],
				"summary": "checkValidity",
				"operationId": "checkValidityUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SubscriptionDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SubscriptionResponse"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/subscription/patient/latest/with/dic-details": {
			"get": {
				"tags": [
					"subscription-controller"
				],
				"summary": "fetchPatientSubscriptionWithDicDetails",
				"operationId": "fetchPatientSubscriptionWithDicDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "primaryPatientId",
					"in": "query",
					"description": "primaryPatientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				},{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientSubscriptionWithDicDetails"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "findAllAddress",
				"operationId": "findAllAddressUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Address Entity"
				],
				"summary": "saveAddress",
				"operationId": "saveAddressUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Address"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses/search/fetchActiveAddressesForPatient": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "fetchActiveAddressesForPatientAddress",
				"operationId": "fetchActiveAddressesForPatientAddressUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "fetchDetailsThroughIdAddress",
				"operationId": "fetchDetailsThroughIdAddressUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "addressId",
					"in": "query",
					"description": "addressId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses/search/findByPatientId": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "findByPatientIdAddress",
				"operationId": "findByPatientIdAddressUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses/search/findByPatientIdAndIsActiveTrue": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "findByPatientIdAndIsActiveTrueAddress",
				"operationId": "findByPatientIdAndIsActiveTrueAddressUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses/search/findByPatientIdAndIsActiveTrueOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "findByPatientIdAndIsActiveTrueOrderByCreatedAtDescAddress",
				"operationId": "findByPatientIdAndIsActiveTrueOrderByCreatedAtDescAddressUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses/search/findDetailsThroughId": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "findDetailsThroughIdAddress",
				"operationId": "findDetailsThroughIdAddressUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses/search/getAllCodes": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "getAllCodesAddress",
				"operationId": "getAllCodesAddressUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«string»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/addresses/{id}": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "findByIdAddress",
				"operationId": "findByIdAddressUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Address Entity"
				],
				"summary": "saveAddress",
				"operationId": "saveAddressUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Address"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Address Entity"
				],
				"summary": "deleteAddress",
				"operationId": "deleteAddressUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Address Entity"
				],
				"summary": "saveAddress",
				"operationId": "saveAddressUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Address"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/addresses/{id}/patient": {
			"get": {
				"tags": [
					"Address Entity"
				],
				"summary": "addressPatient",
				"operationId": "addressPatientUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Address Entity"
				],
				"summary": "addressPatient",
				"operationId": "addressPatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Address Entity"
				],
				"summary": "addressPatient",
				"operationId": "addressPatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Address Entity"
				],
				"summary": "addressPatient",
				"operationId": "addressPatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Address Entity"
				],
				"summary": "addressPatient",
				"operationId": "addressPatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/advice-search": {
			"get": {
				"tags": [
					"ESAdvice Entity"
				],
				"summary": "findAllESAdvice",
				"operationId": "findAllESAdviceUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ESAdvice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ESAdvice Entity"
				],
				"summary": "saveESAdvice",
				"operationId": "saveESAdviceUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ESAdvice"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESAdvice»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/advice-search/{id}": {
			"get": {
				"tags": [
					"ESAdvice Entity"
				],
				"summary": "findByIdESAdvice",
				"operationId": "findByIdESAdviceUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESAdvice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ESAdvice Entity"
				],
				"summary": "saveESAdvice",
				"operationId": "saveESAdviceUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESAdvice"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESAdvice»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ESAdvice Entity"
				],
				"summary": "deleteESAdvice",
				"operationId": "deleteESAdviceUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ESAdvice Entity"
				],
				"summary": "saveESAdvice",
				"operationId": "saveESAdviceUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESAdvice"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESAdvice»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/advices": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "findAllAdvice",
				"operationId": "findAllAdviceUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Advice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Advice Entity"
				],
				"summary": "saveAdvice",
				"operationId": "saveAdviceUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Advice"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Advice»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/advices/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "fetchDetailsThroughIdAdvice",
				"operationId": "fetchDetailsThroughIdAdviceUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Advice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/advices/search/findByConsultationId": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "findByConsultationIdAdvice",
				"operationId": "findByConsultationIdAdviceUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Advice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/advices/search/findByDoctorInClinicIn": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "findByDoctorInClinicInAdvice",
				"operationId": "findByDoctorInClinicInAdviceUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dateFrom",
						"in": "query",
						"description": "dateFrom",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dateTill",
						"in": "query",
						"description": "dateTill",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Advice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/advices/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "findByIsActiveTrueAdvice",
				"operationId": "findByIsActiveTrueAdviceUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Advice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/advices/{id}": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "findByIdAdvice",
				"operationId": "findByIdAdviceUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Advice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Advice Entity"
				],
				"summary": "saveAdvice",
				"operationId": "saveAdviceUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Advice"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Advice»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Advice Entity"
				],
				"summary": "deleteAdvice",
				"operationId": "deleteAdviceUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Advice Entity"
				],
				"summary": "saveAdvice",
				"operationId": "saveAdviceUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Advice"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Advice»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/advices/{id}/consultation": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultation",
				"operationId": "adviceConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultation",
				"operationId": "adviceConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultation",
				"operationId": "adviceConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultation",
				"operationId": "adviceConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultation",
				"operationId": "adviceConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/advices/{id}/consultationReason": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultationReason",
				"operationId": "adviceConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultationReason",
				"operationId": "adviceConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultationReason",
				"operationId": "adviceConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultationReason",
				"operationId": "adviceConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceConsultationReason",
				"operationId": "adviceConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/advices/{id}/declineReason": {
			"get": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceDeclineReason",
				"operationId": "adviceDeclineReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceDeclineReason",
				"operationId": "adviceDeclineReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceDeclineReason",
				"operationId": "adviceDeclineReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceDeclineReason",
				"operationId": "adviceDeclineReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Advice Entity"
				],
				"summary": "adviceDeclineReason",
				"operationId": "adviceDeclineReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/afterOrderPaidStatus": {
			"get": {
				"tags": [
					"AfterOrderPaidStatus Entity"
				],
				"summary": "findAllAfterOrderPaidStatus",
				"operationId": "findAllAfterOrderPaidStatusUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AfterOrderPaidStatus»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"AfterOrderPaidStatus Entity"
				],
				"summary": "saveAfterOrderPaidStatus",
				"operationId": "saveAfterOrderPaidStatusUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AfterOrderPaidStatus"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AfterOrderPaidStatus»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/afterOrderPaidStatus/search/findByIdIn": {
			"get": {
				"tags": [
					"AfterOrderPaidStatus Entity"
				],
				"summary": "findByIdInAfterOrderPaidStatus",
				"operationId": "findByIdInAfterOrderPaidStatusUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AfterOrderPaidStatus»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/afterOrderPaidStatus/{id}": {
			"get": {
				"tags": [
					"AfterOrderPaidStatus Entity"
				],
				"summary": "findByIdAfterOrderPaidStatus",
				"operationId": "findByIdAfterOrderPaidStatusUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AfterOrderPaidStatus»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"AfterOrderPaidStatus Entity"
				],
				"summary": "saveAfterOrderPaidStatus",
				"operationId": "saveAfterOrderPaidStatusUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AfterOrderPaidStatus"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AfterOrderPaidStatus»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"AfterOrderPaidStatus Entity"
				],
				"summary": "deleteAfterOrderPaidStatus",
				"operationId": "deleteAfterOrderPaidStatusUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"AfterOrderPaidStatus Entity"
				],
				"summary": "saveAfterOrderPaidStatus",
				"operationId": "saveAfterOrderPaidStatusUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AfterOrderPaidStatus"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AfterOrderPaidStatus»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/all-diagnostic-recommendation": {
			"get": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "allDiagnosticPackages",
				"operationId": "allDiagnosticPackagesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object",
							"additionalProperties": {
								"type": "array",
								"items": {
									"$ref": "#/definitions/DiagnosticType"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/allergies": {
			"get": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "findAllAllergy",
				"operationId": "findAllAllergyUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "saveAllergy",
				"operationId": "saveAllergyUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Allergy"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Allergy»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/allergies/{id}": {
			"get": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "findByIdAllergy",
				"operationId": "findByIdAllergyUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Allergy»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "saveAllergy",
				"operationId": "saveAllergyUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Allergy"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Allergy»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "deleteAllergy",
				"operationId": "deleteAllergyUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "saveAllergy",
				"operationId": "saveAllergyUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Allergy"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Allergy»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/allergies/{id}/allergyType": {
			"get": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyAllergyType",
				"operationId": "allergyAllergyTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AllergyType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyAllergyType",
				"operationId": "allergyAllergyTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AllergyType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyAllergyType",
				"operationId": "allergyAllergyTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AllergyType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyAllergyType",
				"operationId": "allergyAllergyTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyAllergyType",
				"operationId": "allergyAllergyTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AllergyType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/allergies/{id}/consultation": {
			"get": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyConsultation",
				"operationId": "allergyConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyConsultation",
				"operationId": "allergyConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyConsultation",
				"operationId": "allergyConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyConsultation",
				"operationId": "allergyConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Allergy Entity"
				],
				"summary": "allergyConsultation",
				"operationId": "allergyConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/allergiesType": {
			"get": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "findAllAllergyType",
				"operationId": "findAllAllergyTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AllergyType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "saveAllergyType",
				"operationId": "saveAllergyTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AllergyType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AllergyType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/allergiesType/search/findByNameContainingAndIsActiveTrue": {
			"get": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "findByNameContainingAndIsActiveTrueAllergyType",
				"operationId": "findByNameContainingAndIsActiveTrueAllergyTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AllergyType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/allergiesType/{id}": {
			"get": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "findByIdAllergyType",
				"operationId": "findByIdAllergyTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AllergyType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "saveAllergyType",
				"operationId": "saveAllergyTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AllergyType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AllergyType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "deleteAllergyType",
				"operationId": "deleteAllergyTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "saveAllergyType",
				"operationId": "saveAllergyTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AllergyType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AllergyType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/allergiesType/{id}/allergies": {
			"get": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "allergyTypeAllergies",
				"operationId": "allergyTypeAllergiesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "allergyTypeAllergies",
				"operationId": "allergyTypeAllergiesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "allergyTypeAllergies",
				"operationId": "allergyTypeAllergiesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "allergyTypeAllergies",
				"operationId": "allergyTypeAllergiesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "allergyTypeAllergies",
				"operationId": "allergyTypeAllergiesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/allergiesType/{id}/allergies/{allergyId}": {
			"get": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "allergyTypeAllergies",
				"operationId": "allergyTypeAllergiesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "allergyId",
						"in": "path",
						"description": "allergyId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Allergy»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"AllergyType Entity"
				],
				"summary": "allergyTypeAllergies",
				"operationId": "allergyTypeAllergiesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "allergyId",
						"in": "path",
						"description": "allergyId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/approval/edit": {
			"post": {
				"tags": [
					"approval-controller"
				],
				"summary": "markEntriesActive",
				"operationId": "markEntriesActiveUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dtos",
					"description": "dtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ApprovalDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/approval/fetch": {
			"get": {
				"tags": [
					"approval-controller"
				],
				"summary": "displayEntries",
				"operationId": "displayEntriesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "activeStatus",
						"in": "query",
						"description": "activeStatus",
						"required": false,
						"type": "boolean",
						"default": true
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/appversioninfos": {
			"get": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "findAllAppVersionInfo",
				"operationId": "findAllAppVersionInfoUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AppVersionInfo»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "saveAppVersionInfo",
				"operationId": "saveAppVersionInfoUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AppVersionInfo"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AppVersionInfo»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/appversioninfos/{id}": {
			"get": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "findByIdAppVersionInfo",
				"operationId": "findByIdAppVersionInfoUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AppVersionInfo»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "saveAppVersionInfo",
				"operationId": "saveAppVersionInfoUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AppVersionInfo"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AppVersionInfo»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "deleteAppVersionInfo",
				"operationId": "deleteAppVersionInfoUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "saveAppVersionInfo",
				"operationId": "saveAppVersionInfoUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/AppVersionInfo"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«AppVersionInfo»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/appversioninfos/{id}/doctor": {
			"get": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "appVersionInfoDoctor",
				"operationId": "appVersionInfoDoctorUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "appVersionInfoDoctor",
				"operationId": "appVersionInfoDoctorUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "appVersionInfoDoctor",
				"operationId": "appVersionInfoDoctorUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "appVersionInfoDoctor",
				"operationId": "appVersionInfoDoctorUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"AppVersionInfo Entity"
				],
				"summary": "appVersionInfoDoctor",
				"operationId": "appVersionInfoDoctorUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/area/create": {
			"post": {
				"tags": [
					"area-controller"
				],
				"summary": "createAreas",
				"operationId": "createAreasUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dtos",
					"description": "dtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/AreaRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StringBuilder"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/area/exists": {
			"get": {
				"tags": [
					"area-controller"
				],
				"summary": "pincodeExists",
				"operationId": "pincodeExistsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "value",
					"in": "query",
					"description": "value",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/area/fetch-all": {
			"get": {
				"tags": [
					"area-controller"
				],
				"summary": "fetchAreas",
				"operationId": "fetchAreasUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Areas»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/area/fetch/by-pincode": {
			"get": {
				"tags": [
					"area-controller"
				],
				"summary": "fetchAreaByPinCode",
				"operationId": "fetchAreaByPinCodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "pinCode",
					"in": "query",
					"description": "pinCode",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Areas"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/area/search": {
			"get": {
				"tags": [
					"area-controller"
				],
				"summary": "search",
				"operationId": "searchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "value",
					"in": "query",
					"description": "value",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/areas": {
			"get": {
				"tags": [
					"Area Entity"
				],
				"summary": "findAllArea",
				"operationId": "findAllAreaUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Area»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Area Entity"
				],
				"summary": "saveArea",
				"operationId": "saveAreaUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Area"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Area»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/areas/{id}": {
			"get": {
				"tags": [
					"Area Entity"
				],
				"summary": "findByIdArea",
				"operationId": "findByIdAreaUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Area»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Area Entity"
				],
				"summary": "saveArea",
				"operationId": "saveAreaUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Area"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Area»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Area Entity"
				],
				"summary": "deleteByIdArea",
				"operationId": "deleteByIdAreaUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Area Entity"
				],
				"summary": "saveArea",
				"operationId": "saveAreaUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Area"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Area»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/areas/{id}/addresses": {
			"get": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaAddresses",
				"operationId": "areaAddressesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaAddresses",
				"operationId": "areaAddressesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaAddresses",
				"operationId": "areaAddressesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaAddresses",
				"operationId": "areaAddressesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaAddresses",
				"operationId": "areaAddressesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/areas/{id}/addresses/{addressId}": {
			"get": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaAddresses",
				"operationId": "areaAddressesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "addressId",
						"in": "path",
						"description": "addressId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaAddresses",
				"operationId": "areaAddressesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "addressId",
						"in": "path",
						"description": "addressId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/areas/{id}/cluster": {
			"get": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaCluster",
				"operationId": "areaClusterUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Cluster»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaCluster",
				"operationId": "areaClusterUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Cluster»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaCluster",
				"operationId": "areaClusterUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Cluster»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaCluster",
				"operationId": "areaClusterUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Area Entity"
				],
				"summary": "areaCluster",
				"operationId": "areaClusterUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Cluster»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/assistant/visited/patient": {
			"get": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "getVisitedPatientForToday",
				"operationId": "getVisitedPatientForTodayUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinicid",
					"in": "query",
					"description": "doctorinclinicid",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "getVisitedPatientForToday",
				"operationId": "getVisitedPatientForTodayUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinicid",
					"in": "query",
					"description": "doctorinclinicid",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "getVisitedPatientForToday",
				"operationId": "getVisitedPatientForTodayUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinicid",
					"in": "query",
					"description": "doctorinclinicid",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "getVisitedPatientForToday",
				"operationId": "getVisitedPatientForTodayUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinicid",
					"in": "query",
					"description": "doctorinclinicid",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "getVisitedPatientForToday",
				"operationId": "getVisitedPatientForTodayUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinicid",
					"in": "query",
					"description": "doctorinclinicid",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "getVisitedPatientForToday",
				"operationId": "getVisitedPatientForTodayUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinicid",
					"in": "query",
					"description": "doctorinclinicid",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "getVisitedPatientForToday",
				"operationId": "getVisitedPatientForTodayUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinicid",
					"in": "query",
					"description": "doctorinclinicid",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/batch/bulk-post": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postBatch",
				"operationId": "postBatchUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "batchDtos",
					"description": "batchDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineUniverseBulkUploadDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batch/edit": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "editBatchAndAddQuantityV2",
				"operationId": "editBatchAndAddQuantityV2UsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/BatchEditDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batch/edit/v2": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "editBatchAndAddQuantity",
				"operationId": "editBatchAndAddQuantityUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/BatchEditDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/BatchErrorDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batch/single/edit": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "editBatchAndAddQuantityForSingle",
				"operationId": "editBatchAndAddQuantityForSingleUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/BatchEditDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batch/single/edit/v2": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "editBatchAndAddQuantityForSingleV2",
				"operationId": "editBatchAndAddQuantityForSingleV2UsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/BatchEditDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "findAllBatch",
				"operationId": "findAllBatchUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Batch Entity"
				],
				"summary": "saveBatch",
				"operationId": "saveBatchUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Batch"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches/search/existsByBatchNumber": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "existsByBatchNumberBatch",
				"operationId": "existsByBatchNumberBatchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "batchNumber",
					"in": "query",
					"description": "batchNumber",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches/search/findByBarcodeAndIsActiveTrue": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "findByBarcodeAndIsActiveTrueBatch",
				"operationId": "findByBarcodeAndIsActiveTrueBatchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "barcode",
					"in": "query",
					"description": "barcode",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches/search/findByBatchNumberAndMedicineId": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "findByBatchNumberAndMedicineIdBatch",
				"operationId": "findByBatchNumberAndMedicineIdBatchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchNumber",
						"in": "query",
						"description": "batchNumber",
						"required": false,
						"type": "string"
					},
					{
						"name": "medicineId",
						"in": "query",
						"description": "medicineId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches/search/findByBatchNumberAndMedicineIdAndIsActiveTrue": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "findByBatchNumberAndMedicineIdAndIsActiveTrueBatch",
				"operationId": "findByBatchNumberAndMedicineIdAndIsActiveTrueBatchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchNumber",
						"in": "query",
						"description": "batchNumber",
						"required": false,
						"type": "string"
					},
					{
						"name": "medicineId",
						"in": "query",
						"description": "medicineId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches/search/findByBatchNumberContaining": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "findByBatchNumberContainingBatch",
				"operationId": "findByBatchNumberContainingBatchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchNumber",
						"in": "query",
						"description": "batchNumber",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches/search/findByIdAndMedicineId": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "findByIdAndMedicineIdBatch",
				"operationId": "findByIdAndMedicineIdBatchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineId",
						"in": "query",
						"description": "medicineId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches/search/findByIdIn": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "findByIdInBatch",
				"operationId": "findByIdInBatchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/batches/{id}": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "findByIdBatch",
				"operationId": "findByIdBatchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Batch Entity"
				],
				"summary": "saveBatch",
				"operationId": "saveBatchUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Batch"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Batch Entity"
				],
				"summary": "deleteBatch",
				"operationId": "deleteBatchUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Batch Entity"
				],
				"summary": "saveBatch",
				"operationId": "saveBatchUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Batch"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/batches/{id}/medicine": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicine",
				"operationId": "batchMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicine",
				"operationId": "batchMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicine",
				"operationId": "batchMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicine",
				"operationId": "batchMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicine",
				"operationId": "batchMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/batches/{id}/medicineInventories": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicineInventories",
				"operationId": "batchMedicineInventoriesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicineInventories",
				"operationId": "batchMedicineInventoriesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicineInventories",
				"operationId": "batchMedicineInventoriesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicineInventories",
				"operationId": "batchMedicineInventoriesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicineInventories",
				"operationId": "batchMedicineInventoriesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/batches/{id}/medicineInventories/{medicineinventoryId}": {
			"get": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicineInventories",
				"operationId": "batchMedicineInventoriesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineinventoryId",
						"in": "path",
						"description": "medicineinventoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Batch Entity"
				],
				"summary": "batchMedicineInventories",
				"operationId": "batchMedicineInventoriesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineinventoryId",
						"in": "path",
						"description": "medicineinventoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/brand/bulk-post": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postBrand",
				"operationId": "postBrandUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "brandDtos",
					"description": "brandDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineUniverseBulkUploadDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/brands": {
			"get": {
				"tags": [
					"Brand Entity"
				],
				"summary": "findAllBrand",
				"operationId": "findAllBrandUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Brand»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Brand Entity"
				],
				"summary": "saveBrand",
				"operationId": "saveBrandUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Brand"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/brands/{id}": {
			"get": {
				"tags": [
					"Brand Entity"
				],
				"summary": "findByIdBrand",
				"operationId": "findByIdBrandUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Brand Entity"
				],
				"summary": "saveBrand",
				"operationId": "saveBrandUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Brand"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Brand Entity"
				],
				"summary": "deleteBrand",
				"operationId": "deleteBrandUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Brand Entity"
				],
				"summary": "saveBrand",
				"operationId": "saveBrandUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Brand"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/brands/{id}/manufacturer": {
			"get": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandManufacturer",
				"operationId": "brandManufacturerUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Manufacturer»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandManufacturer",
				"operationId": "brandManufacturerUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Manufacturer»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandManufacturer",
				"operationId": "brandManufacturerUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Manufacturer»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandManufacturer",
				"operationId": "brandManufacturerUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandManufacturer",
				"operationId": "brandManufacturerUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Manufacturer»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/brands/{id}/medicines": {
			"get": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandMedicines",
				"operationId": "brandMedicinesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandMedicines",
				"operationId": "brandMedicinesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandMedicines",
				"operationId": "brandMedicinesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandMedicines",
				"operationId": "brandMedicinesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandMedicines",
				"operationId": "brandMedicinesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/brands/{id}/medicines/{medicineId}": {
			"get": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandMedicines",
				"operationId": "brandMedicinesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineId",
						"in": "path",
						"description": "medicineId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Brand Entity"
				],
				"summary": "brandMedicines",
				"operationId": "brandMedicinesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineId",
						"in": "path",
						"description": "medicineId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/bulk-upload/lab-and-zipcode-and-clustername": {
			"post": {
				"tags": [
					"diagnostic-labs-and-zipcode-controller"
				],
				"summary": "bulkUploadDiagnosticLabsAndZipcodeAndClusterName",
				"operationId": "bulkUploadDiagnosticLabsAndZipcodeAndClusterNameUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "zipcodeAndClusterNameDto",
					"description": "zipcodeAndClusterNameDto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ZipcodeAndClusterNameDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticLabsAndZipcodeErrDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/bulk/lab-specimenType": {
			"post": {
				"tags": [
					"specimen-type-and-vendor-sample-controller"
				],
				"summary": "getSampleIdsUsingLabIdAndDiagnosticType",
				"operationId": "getSampleIdsUsingLabIdAndDiagnosticTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "specimenTypeAndVendorSampleDtos",
					"description": "specimenTypeAndVendorSampleDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/SpecimenTypeAndVendorSampleDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/SpecimenTypeAndVendorSampleErrDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/camp/detail": {
			"get": {
				"tags": [
					"camp-controller"
				],
				"summary": "fetchDetailsForCamp",
				"operationId": "fetchDetailsForCampUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsolidatedData"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/camp/detail/doctor": {
			"get": {
				"tags": [
					"camp-controller"
				],
				"summary": "fetchDetailsForCampBasedOnDoctorId",
				"operationId": "fetchDetailsForCampBasedOnDoctorIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorId",
						"in": "query",
						"description": "doctorId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorsForHomepage"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/camp/detail/tests": {
			"get": {
				"tags": [
					"camp-controller"
				],
				"summary": "fetchTestsForCampBasedOnDoctorId",
				"operationId": "fetchTestsForCampBasedOnDoctorIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticTypesForCamp"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/camp/doctor/add": {
			"post": {
				"tags": [
					"camp-controller"
				],
				"summary": "addClinicsForCamp",
				"operationId": "addClinicsForCampUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "active",
						"in": "query",
						"description": "active",
						"required": false,
						"type": "boolean",
						"default": true
					},
					{
						"name": "clinicIds",
						"in": "query",
						"description": "clinicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorId",
						"in": "query",
						"description": "doctorId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "tsIds",
						"in": "query",
						"description": "tsIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/camp/patient/add": {
			"post": {
				"tags": [
					"camp-controller"
				],
				"summary": "addPatientForCamp",
				"operationId": "addPatientForCampUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientAddToQueue"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientsForClinics"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cart/verify": {
			"post": {
				"tags": [
					"order-controller"
				],
				"summary": "verifyCartForOrder",
				"operationId": "verifyCartForOrderUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "orderDto",
					"description": "orderDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OrderDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OrderDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/centrecodes": {
			"get": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "findAllCentreCode",
				"operationId": "findAllCentreCodeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«CentreCode»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "saveCentreCode",
				"operationId": "saveCentreCodeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/CentreCode"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CentreCode»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/centrecodes/{id}": {
			"get": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "findByIdCentreCode",
				"operationId": "findByIdCentreCodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CentreCode»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "saveCentreCode",
				"operationId": "saveCentreCodeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CentreCode"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CentreCode»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "deleteCentreCode",
				"operationId": "deleteCentreCodeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "saveCentreCode",
				"operationId": "saveCentreCodeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CentreCode"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CentreCode»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/centrecodes/{id}/diagnosticLab": {
			"get": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "centreCodeDiagnosticLab",
				"operationId": "centreCodeDiagnosticLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "centreCodeDiagnosticLab",
				"operationId": "centreCodeDiagnosticLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "centreCodeDiagnosticLab",
				"operationId": "centreCodeDiagnosticLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "centreCodeDiagnosticLab",
				"operationId": "centreCodeDiagnosticLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"CentreCode Entity"
				],
				"summary": "centreCodeDiagnosticLab",
				"operationId": "centreCodeDiagnosticLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/cities": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "findAllCity",
				"operationId": "findAllCityUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"City Entity"
				],
				"summary": "saveCity",
				"operationId": "saveCityUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/City"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cities/search/findAllCities": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "findAllCitiesCity",
				"operationId": "findAllCitiesCityUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cities/search/findDistinctByStateId": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "findDistinctByStateIdCity",
				"operationId": "findDistinctByStateIdCityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "stateId",
					"in": "query",
					"description": "stateId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cities/search/findLocalitiesForCity": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "findLocalitiesForCityCity",
				"operationId": "findLocalitiesForCityCityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "cityId",
					"in": "query",
					"description": "cityId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cities/{id}": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "findByIdCity",
				"operationId": "findByIdCityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"City Entity"
				],
				"summary": "saveCity",
				"operationId": "saveCityUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/City"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"City Entity"
				],
				"summary": "deleteCity",
				"operationId": "deleteCityUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"City Entity"
				],
				"summary": "saveCity",
				"operationId": "saveCityUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/City"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/cities/{id}/children": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "cityChildren",
				"operationId": "cityChildrenUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"City Entity"
				],
				"summary": "cityChildren",
				"operationId": "cityChildrenUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"City Entity"
				],
				"summary": "cityChildren",
				"operationId": "cityChildrenUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"City Entity"
				],
				"summary": "cityChildren",
				"operationId": "cityChildrenUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"City Entity"
				],
				"summary": "cityChildren",
				"operationId": "cityChildrenUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/cities/{id}/children/{cityId}": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "cityChildren",
				"operationId": "cityChildrenUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "cityId",
						"in": "path",
						"description": "cityId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"City Entity"
				],
				"summary": "cityChildren",
				"operationId": "cityChildrenUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "cityId",
						"in": "path",
						"description": "cityId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/cities/{id}/parent": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "cityParent",
				"operationId": "cityParentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"City Entity"
				],
				"summary": "cityParent",
				"operationId": "cityParentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"City Entity"
				],
				"summary": "cityParent",
				"operationId": "cityParentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"City Entity"
				],
				"summary": "cityParent",
				"operationId": "cityParentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"City Entity"
				],
				"summary": "cityParent",
				"operationId": "cityParentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/cities/{id}/state": {
			"get": {
				"tags": [
					"City Entity"
				],
				"summary": "cityState",
				"operationId": "cityStateUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«State»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"City Entity"
				],
				"summary": "cityState",
				"operationId": "cityStateUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«State»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"City Entity"
				],
				"summary": "cityState",
				"operationId": "cityStateUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«State»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"City Entity"
				],
				"summary": "cityState",
				"operationId": "cityStateUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"City Entity"
				],
				"summary": "cityState",
				"operationId": "cityStateUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«State»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/city/get": {
			"get": {
				"tags": [
					"state-and-city-controller"
				],
				"summary": "getCities",
				"operationId": "getCitiesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "stateId",
					"in": "query",
					"description": "stateId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/CityResponseDto"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic-consumable/add": {
			"post": {
				"tags": [
					"clinic-consumable-controller"
				],
				"summary": "addClinicConsumables",
				"operationId": "addClinicConsumablesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "addClinicConsumableDto",
					"description": "addClinicConsumableDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AddClinicConsumableDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic-consumable/fetch-all": {
			"get": {
				"tags": [
					"clinic-consumable-controller"
				],
				"summary": "fetchConsumabless",
				"operationId": "fetchConsumablessUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«ClinicConsumablesForPos»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic-consumable/find-by-clinic": {
			"get": {
				"tags": [
					"clinic-consumable-controller"
				],
				"summary": "searchByClinicId",
				"operationId": "searchByClinicIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsumablesByClinic"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic-consumable/search": {
			"get": {
				"tags": [
					"clinic-consumable-controller"
				],
				"summary": "search",
				"operationId": "searchUsingGET_2",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ClinicConsumablesForPos"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic-medicine/csv": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchClinicAndMedicineInfo",
				"operationId": "fetchClinicAndMedicineInfoUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicIds",
					"in": "query",
					"description": "clinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic/by-cluster": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchClinicsForDtil",
				"operationId": "fetchClinicsForDtilUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ClinicByClusterDto"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic/by/ids": {
			"post": {
				"tags": [
					"clinic-controller"
				],
				"summary": "fetchClinicByIds",
				"operationId": "fetchClinicByIdsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "ids",
					"description": "ids",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinics»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic/distinct/by/ids": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "fetchDistinctClinicByIds",
				"operationId": "fetchDistinctClinicByIdsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicForAdminDashboard»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors-from-dic-list": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "fetchDoctorsFromDicList",
				"operationId": "fetchDoctorsFromDicListUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicIds",
					"in": "query",
					"description": "dicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoctorInClinicForOrder"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic/in-dtil": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchClinicsForDtil",
				"operationId": "fetchClinicsForDtilUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dtilId",
					"in": "query",
					"description": "dtilId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ClinicsByCluster"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic/in-lab": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchLabs",
				"operationId": "fetchLabsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ClinicsByCluster"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinic/procedures": {
			"get": {
				"tags": [
					"procedure-type-controller"
				],
				"summary": "proceduresByClinic",
				"operationId": "proceduresByClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcedureTypes"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"procedure-type-controller"
				],
				"summary": "proceduresByClinic",
				"operationId": "proceduresByClinicUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcedureTypes"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"procedure-type-controller"
				],
				"summary": "proceduresByClinic",
				"operationId": "proceduresByClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcedureTypes"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"procedure-type-controller"
				],
				"summary": "proceduresByClinic",
				"operationId": "proceduresByClinicUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcedureTypes"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"procedure-type-controller"
				],
				"summary": "proceduresByClinic",
				"operationId": "proceduresByClinicUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcedureTypes"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"procedure-type-controller"
				],
				"summary": "proceduresByClinic",
				"operationId": "proceduresByClinicUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcedureTypes"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"procedure-type-controller"
				],
				"summary": "proceduresByClinic",
				"operationId": "proceduresByClinicUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ProcedureTypes"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinic/slug/exists": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "isClinicSlugExists",
				"operationId": "isClinicSlugExistsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "slug",
					"in": "query",
					"description": "slug",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinicconsumableRepository": {
			"get": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "findAllClinicConsumable",
				"operationId": "findAllClinicConsumableUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "saveClinicConsumable",
				"operationId": "saveClinicConsumableUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ClinicConsumable"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicConsumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinicconsumableRepository/search/fetchConsumablesByClinicId": {
			"get": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "fetchConsumablesByClinicIdClinicConsumable",
				"operationId": "fetchConsumablesByClinicIdClinicConsumableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinicconsumableRepository/search/fetchConsumablesByClinicIdAndName": {
			"get": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "fetchConsumablesByClinicIdAndNameClinicConsumable",
				"operationId": "fetchConsumablesByClinicIdAndNameClinicConsumableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinicconsumableRepository/search/findByIdIn": {
			"get": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "findByIdInClinicConsumable",
				"operationId": "findByIdInClinicConsumableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinicconsumableRepository/{id}": {
			"get": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "findByIdClinicConsumable",
				"operationId": "findByIdClinicConsumableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "saveClinicConsumable",
				"operationId": "saveClinicConsumableUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ClinicConsumable"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicConsumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "deleteClinicConsumable",
				"operationId": "deleteClinicConsumableUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "saveClinicConsumable",
				"operationId": "saveClinicConsumableUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ClinicConsumable"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicConsumable»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinicconsumableRepository/{id}/clinic": {
			"get": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableClinic",
				"operationId": "clinicConsumableClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableClinic",
				"operationId": "clinicConsumableClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableClinic",
				"operationId": "clinicConsumableClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableClinic",
				"operationId": "clinicConsumableClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableClinic",
				"operationId": "clinicConsumableClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinicconsumableRepository/{id}/consumable": {
			"get": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableConsumable",
				"operationId": "clinicConsumableConsumableUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableConsumable",
				"operationId": "clinicConsumableConsumableUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableConsumable",
				"operationId": "clinicConsumableConsumableUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableConsumable",
				"operationId": "clinicConsumableConsumableUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClinicConsumable Entity"
				],
				"summary": "clinicConsumableConsumable",
				"operationId": "clinicConsumableConsumableUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinicdiagnostictypeconfigurations": {
			"get": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "findAllClinicDiagnosticTypeConfiguration",
				"operationId": "findAllClinicDiagnosticTypeConfigurationUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicDiagnosticTypeConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "saveClinicDiagnosticTypeConfiguration",
				"operationId": "saveClinicDiagnosticTypeConfigurationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ClinicDiagnosticTypeConfiguration"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicDiagnosticTypeConfiguration»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinicdiagnostictypeconfigurations/{id}": {
			"get": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "findByIdClinicDiagnosticTypeConfiguration",
				"operationId": "findByIdClinicDiagnosticTypeConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicDiagnosticTypeConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "saveClinicDiagnosticTypeConfiguration",
				"operationId": "saveClinicDiagnosticTypeConfigurationUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ClinicDiagnosticTypeConfiguration"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicDiagnosticTypeConfiguration»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "deleteClinicDiagnosticTypeConfiguration",
				"operationId": "deleteClinicDiagnosticTypeConfigurationUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "saveClinicDiagnosticTypeConfiguration",
				"operationId": "saveClinicDiagnosticTypeConfigurationUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ClinicDiagnosticTypeConfiguration"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicDiagnosticTypeConfiguration»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinicdiagnostictypeconfigurations/{id}/clinic": {
			"get": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationClinic",
				"operationId": "clinicDiagnosticTypeConfigurationClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationClinic",
				"operationId": "clinicDiagnosticTypeConfigurationClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationClinic",
				"operationId": "clinicDiagnosticTypeConfigurationClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationClinic",
				"operationId": "clinicDiagnosticTypeConfigurationClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationClinic",
				"operationId": "clinicDiagnosticTypeConfigurationClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinicdiagnostictypeconfigurations/{id}/diagnosticLab": {
			"get": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinicdiagnostictypeconfigurations/{id}/diagnosticTypeInLab": {
			"get": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClinicDiagnosticTypeConfiguration Entity"
				],
				"summary": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLab",
				"operationId": "clinicDiagnosticTypeConfigurationDiagnosticTypeInLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinics": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findAllClinic",
				"operationId": "findAllClinicUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "saveClinic",
				"operationId": "saveClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Clinic"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/DoctorInClinicsIdIn": {
			"get": {
				"tags": [
					"doctors-assistant-dashboard-controller"
				],
				"summary": "getDoctorInClinics",
				"operationId": "getDoctorInClinicsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinic",
					"in": "query",
					"description": "doctorinclinic",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicsForAssistantDashboard»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/existsBySlug": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "existsBySlugClinic",
				"operationId": "existsBySlugClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "slug",
					"in": "query",
					"description": "slug",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/fetchAllClinics": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "fetchAllClinicsClinic",
				"operationId": "fetchAllClinicsClinicUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findAllByIdIn": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findAllByIdInClinic",
				"operationId": "findAllByIdInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicIDs",
					"in": "query",
					"description": "clinicIDs",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findByDoctorInClinicsIdIn": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findByDoctorInClinicsIdInClinic",
				"operationId": "findByDoctorInClinicsIdInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinic",
					"in": "query",
					"description": "doctorinclinic",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findByNameContaining": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findByNameContainingClinic",
				"operationId": "findByNameContainingClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findByPincodeAndIsActiveTrue": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findByPincodeAndIsActiveTrueClinic",
				"operationId": "findByPincodeAndIsActiveTrueClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "pincode",
					"in": "query",
					"description": "pincode",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findByPincodeInAndIsActiveTrue": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findByPincodeInAndIsActiveTrueClinic",
				"operationId": "findByPincodeInAndIsActiveTrueClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "pinCodes",
					"in": "query",
					"description": "pinCodes",
					"required": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findBySlug": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findBySlugClinic",
				"operationId": "findBySlugClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "slug",
					"in": "query",
					"description": "slug",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findBySlugContaining": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findBySlugContainingClinic",
				"operationId": "findBySlugContainingClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "slug",
						"in": "query",
						"description": "slug",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findDistinctByDoctorInClinicsIdIn": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findDistinctByDoctorInClinicsIdInClinic",
				"operationId": "findDistinctByDoctorInClinicsIdInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinic",
					"in": "query",
					"description": "doctorinclinic",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/search/findDistinctByDoctorInClinicsIdInAndIdNotNull": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findDistinctByDoctorInClinicsIdInAndIdNotNullClinic",
				"operationId": "findDistinctByDoctorInClinicsIdInAndIdNotNullClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorinclinic",
					"in": "query",
					"description": "doctorinclinic",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clinics/{id}": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "findByIdClinic",
				"operationId": "findByIdClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "saveClinic",
				"operationId": "saveClinicUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Clinic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "deleteClinic",
				"operationId": "deleteClinicUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "saveClinic",
				"operationId": "saveClinicUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Clinic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinics/{id}/doctorInClinics": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "clinicDoctorInClinics",
				"operationId": "clinicDoctorInClinicsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "clinicDoctorInClinics",
				"operationId": "clinicDoctorInClinicsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "clinicDoctorInClinics",
				"operationId": "clinicDoctorInClinicsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "clinicDoctorInClinics",
				"operationId": "clinicDoctorInClinicsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "clinicDoctorInClinics",
				"operationId": "clinicDoctorInClinicsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clinics/{id}/doctorInClinics/{doctorinclinicId}": {
			"get": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "clinicDoctorInClinics",
				"operationId": "clinicDoctorInClinicsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicId",
						"in": "path",
						"description": "doctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Clinic Entity"
				],
				"summary": "clinicDoctorInClinics",
				"operationId": "clinicDoctorInClinicsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicId",
						"in": "path",
						"description": "doctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/closedtimeslots": {
			"get": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "findAllClosedTimeSlot",
				"operationId": "findAllClosedTimeSlotUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "saveClosedTimeSlot",
				"operationId": "saveClosedTimeSlotUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ClosedTimeSlot"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/closedtimeslots/{id}": {
			"get": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "findByIdClosedTimeSlot",
				"operationId": "findByIdClosedTimeSlotUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "saveClosedTimeSlot",
				"operationId": "saveClosedTimeSlotUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ClosedTimeSlot"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "deleteClosedTimeSlot",
				"operationId": "deleteClosedTimeSlotUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "saveClosedTimeSlot",
				"operationId": "saveClosedTimeSlotUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ClosedTimeSlot"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClosedTimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/closedtimeslots/{id}/doctorInClinicClosedTimeSlots": {
			"get": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "closedTimeSlotDoctorInClinicClosedTimeSlots",
				"operationId": "closedTimeSlotDoctorInClinicClosedTimeSlotsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "closedTimeSlotDoctorInClinicClosedTimeSlots",
				"operationId": "closedTimeSlotDoctorInClinicClosedTimeSlotsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "closedTimeSlotDoctorInClinicClosedTimeSlots",
				"operationId": "closedTimeSlotDoctorInClinicClosedTimeSlotsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "closedTimeSlotDoctorInClinicClosedTimeSlots",
				"operationId": "closedTimeSlotDoctorInClinicClosedTimeSlotsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "closedTimeSlotDoctorInClinicClosedTimeSlots",
				"operationId": "closedTimeSlotDoctorInClinicClosedTimeSlotsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/closedtimeslots/{id}/doctorInClinicClosedTimeSlots/{doctorinclinicclosedtimeslotId}": {
			"get": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "closedTimeSlotDoctorInClinicClosedTimeSlots",
				"operationId": "closedTimeSlotDoctorInClinicClosedTimeSlotsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicclosedtimeslotId",
						"in": "path",
						"description": "doctorinclinicclosedtimeslotId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClosedTimeSlot Entity"
				],
				"summary": "closedTimeSlotDoctorInClinicClosedTimeSlots",
				"operationId": "closedTimeSlotDoctorInClinicClosedTimeSlotsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicclosedtimeslotId",
						"in": "path",
						"description": "doctorinclinicclosedtimeslotId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/cluster-diagnosticLab/activate/{id}": {
			"patch": {
				"tags": [
					"cluster-and-diagnostic-lab-controller"
				],
				"summary": "clusterAndDiagnosticLabActivate",
				"operationId": "clusterAndDiagnosticLabActivateUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isActive",
						"in": "query",
						"description": "isActive",
						"required": false,
						"type": "boolean",
						"default": "1"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ClusterAndDiagnosticLabs"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/cluster-diagnosticLab/add": {
			"post": {
				"tags": [
					"cluster-and-diagnostic-lab-controller"
				],
				"summary": "attachedLabInCluster",
				"operationId": "attachedLabInClusterUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "labInClusterDto",
					"description": "labInClusterDto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/LabInClusterDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ClusterAndDiagnosticLabs"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cluster/activate/{id}": {
			"patch": {
				"tags": [
					"cluster-controller"
				],
				"summary": "clustersActivate",
				"operationId": "clustersActivateUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isActive",
						"in": "query",
						"description": "isActive",
						"required": false,
						"type": "boolean",
						"default": "1"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Clusters"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/cluster/create": {
			"post": {
				"tags": [
					"cluster-controller"
				],
				"summary": "createClusters",
				"operationId": "createClustersUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dtos",
					"description": "dtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ClusterRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Clusters"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cluster/fetch-all": {
			"get": {
				"tags": [
					"cluster-controller"
				],
				"summary": "fetchClusters",
				"operationId": "fetchClustersUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Clusters»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cluster/fetch-all/with-lab/clinic": {
			"get": {
				"tags": [
					"cluster-controller"
				],
				"summary": "fetchClustersWithLabAndClinic",
				"operationId": "fetchClustersWithLabAndClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«ClustersWithLabsAndClinics»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/cluster/fetch/{id}": {
			"get": {
				"tags": [
					"cluster-controller"
				],
				"summary": "fetchClusters",
				"operationId": "fetchClustersUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Clusters"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clusters": {
			"get": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "findAllClusterAndDiagnosticLab",
				"operationId": "findAllClusterAndDiagnosticLabUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClusterAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "saveClusterAndDiagnosticLab",
				"operationId": "saveClusterAndDiagnosticLabUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ClusterAndDiagnosticLab"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClusterAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/clusters/{id}": {
			"get": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "findByIdClusterAndDiagnosticLab",
				"operationId": "findByIdClusterAndDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClusterAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "saveClusterAndDiagnosticLab",
				"operationId": "saveClusterAndDiagnosticLabUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ClusterAndDiagnosticLab"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClusterAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "deleteByIdClusterAndDiagnosticLab",
				"operationId": "deleteByIdClusterAndDiagnosticLabUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "saveClusterAndDiagnosticLab",
				"operationId": "saveClusterAndDiagnosticLabUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ClusterAndDiagnosticLab"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClusterAndDiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clusters/{id}/areas": {
			"get": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterAreas",
				"operationId": "clusterAreasUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Area»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterAreas",
				"operationId": "clusterAreasUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Area»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterAreas",
				"operationId": "clusterAreasUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Area»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterAreas",
				"operationId": "clusterAreasUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterAreas",
				"operationId": "clusterAreasUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Area»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clusters/{id}/areas/{areaId}": {
			"get": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterAreas",
				"operationId": "clusterAreasUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "areaId",
						"in": "path",
						"description": "areaId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Area»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterAreas",
				"operationId": "clusterAreasUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "areaId",
						"in": "path",
						"description": "areaId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clusters/{id}/cluster": {
			"get": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabCluster",
				"operationId": "clusterAndDiagnosticLabClusterUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Cluster»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabCluster",
				"operationId": "clusterAndDiagnosticLabClusterUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Cluster»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabCluster",
				"operationId": "clusterAndDiagnosticLabClusterUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Cluster»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabCluster",
				"operationId": "clusterAndDiagnosticLabClusterUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabCluster",
				"operationId": "clusterAndDiagnosticLabClusterUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Cluster»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clusters/{id}/clusterAndDiagnosticLabs": {
			"get": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterClusterAndDiagnosticLabs",
				"operationId": "clusterClusterAndDiagnosticLabsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClusterAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterClusterAndDiagnosticLabs",
				"operationId": "clusterClusterAndDiagnosticLabsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClusterAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterClusterAndDiagnosticLabs",
				"operationId": "clusterClusterAndDiagnosticLabsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClusterAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterClusterAndDiagnosticLabs",
				"operationId": "clusterClusterAndDiagnosticLabsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterClusterAndDiagnosticLabs",
				"operationId": "clusterClusterAndDiagnosticLabsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClusterAndDiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clusters/{id}/clusterAndDiagnosticLabs/{clusteranddiagnosticlabId}": {
			"get": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterClusterAndDiagnosticLabs",
				"operationId": "clusterClusterAndDiagnosticLabsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clusteranddiagnosticlabId",
						"in": "path",
						"description": "clusteranddiagnosticlabId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClusterAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Cluster Entity"
				],
				"summary": "clusterClusterAndDiagnosticLabs",
				"operationId": "clusterClusterAndDiagnosticLabsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clusteranddiagnosticlabId",
						"in": "path",
						"description": "clusteranddiagnosticlabId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/clusters/{id}/diagnosticLab": {
			"get": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabDiagnosticLab",
				"operationId": "clusterAndDiagnosticLabDiagnosticLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabDiagnosticLab",
				"operationId": "clusterAndDiagnosticLabDiagnosticLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabDiagnosticLab",
				"operationId": "clusterAndDiagnosticLabDiagnosticLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabDiagnosticLab",
				"operationId": "clusterAndDiagnosticLabDiagnosticLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ClusterAndDiagnosticLab Entity"
				],
				"summary": "clusterAndDiagnosticLabDiagnosticLab",
				"operationId": "clusterAndDiagnosticLabDiagnosticLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/codes-generate": {
			"get": {
				"tags": [
					"code-controller"
				],
				"summary": "generateFileWithCode",
				"operationId": "generateFileWithCodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "download",
						"in": "query",
						"description": "download",
						"required": false,
						"type": "boolean",
						"default": true
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "integer",
						"default": 100000,
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/comment": {
			"get": {
				"tags": [
					"comment-for-patient-history-controller"
				],
				"summary": "getCommentsByPatient",
				"operationId": "getCommentsByPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentsByPatientDetails»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/comment-rating": {
			"post": {
				"tags": [
					"comment-for-patient-history-controller"
				],
				"summary": "postComment",
				"operationId": "postCommentUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "commentBody",
					"description": "commentBody",
					"required": true,
					"schema": {
						"$ref": "#/definitions/CommentDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Comments"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/commentOnDocuments": {
			"get": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "findAllCommentOnDocument",
				"operationId": "findAllCommentOnDocumentUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«CommentOnDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "saveCommentOnDocument",
				"operationId": "saveCommentOnDocumentUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/CommentOnDocument"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/commentOnDocuments/{id}": {
			"get": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "findByIdCommentOnDocument",
				"operationId": "findByIdCommentOnDocumentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "saveCommentOnDocument",
				"operationId": "saveCommentOnDocumentUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CommentOnDocument"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "deleteCommentOnDocument",
				"operationId": "deleteCommentOnDocumentUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "saveCommentOnDocument",
				"operationId": "saveCommentOnDocumentUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/CommentOnDocument"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/commentOnDocuments/{id}/patient": {
			"get": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatient",
				"operationId": "commentOnDocumentPatientUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatient",
				"operationId": "commentOnDocumentPatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatient",
				"operationId": "commentOnDocumentPatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatient",
				"operationId": "commentOnDocumentPatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatient",
				"operationId": "commentOnDocumentPatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/commentOnDocuments/{id}/patientHistories": {
			"get": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientHistories",
				"operationId": "commentOnDocumentPatientHistoriesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientHistories",
				"operationId": "commentOnDocumentPatientHistoriesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientHistories",
				"operationId": "commentOnDocumentPatientHistoriesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientHistories",
				"operationId": "commentOnDocumentPatientHistoriesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientHistories",
				"operationId": "commentOnDocumentPatientHistoriesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/commentOnDocuments/{id}/patientHistories/{patienthistoryId}": {
			"get": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientHistories",
				"operationId": "commentOnDocumentPatientHistoriesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patienthistoryId",
						"in": "path",
						"description": "patienthistoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientHistories",
				"operationId": "commentOnDocumentPatientHistoriesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patienthistoryId",
						"in": "path",
						"description": "patienthistoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/commentOnDocuments/{id}/patientPreviousDocuments": {
			"get": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientPreviousDocuments",
				"operationId": "commentOnDocumentPatientPreviousDocumentsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientPreviousDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientPreviousDocuments",
				"operationId": "commentOnDocumentPatientPreviousDocumentsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientPreviousDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientPreviousDocuments",
				"operationId": "commentOnDocumentPatientPreviousDocumentsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientPreviousDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientPreviousDocuments",
				"operationId": "commentOnDocumentPatientPreviousDocumentsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientPreviousDocuments",
				"operationId": "commentOnDocumentPatientPreviousDocumentsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientPreviousDocument»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/commentOnDocuments/{id}/patientPreviousDocuments/{patientpreviousdocumentId}": {
			"get": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientPreviousDocuments",
				"operationId": "commentOnDocumentPatientPreviousDocumentsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientpreviousdocumentId",
						"in": "path",
						"description": "patientpreviousdocumentId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientPreviousDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"CommentOnDocument Entity"
				],
				"summary": "commentOnDocumentPatientPreviousDocuments",
				"operationId": "commentOnDocumentPatientPreviousDocumentsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientpreviousdocumentId",
						"in": "path",
						"description": "patientpreviousdocumentId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/comments": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "findAllComment",
				"operationId": "findAllCommentUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Comment Entity"
				],
				"summary": "saveComment",
				"operationId": "saveCommentUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Comment"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/comments/search/countByPatientHistoryForCommentId": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "countByPatientHistoryForCommentIdComment",
				"operationId": "countByPatientHistoryForCommentIdCommentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientHistoryId",
					"in": "query",
					"description": "patientHistoryId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/comments/search/findAllByIdIn": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "findAllByIdInComment",
				"operationId": "findAllByIdInCommentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "commentIds",
					"in": "query",
					"description": "commentIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/comments/search/findByPatientHistoryForCommentId": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "findByPatientHistoryForCommentIdComment",
				"operationId": "findByPatientHistoryForCommentIdCommentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientHistoryId",
					"in": "query",
					"description": "patientHistoryId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/comments/search/findByPatientHistoryForCommentPatientId": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "findByPatientHistoryForCommentPatientIdComment",
				"operationId": "findByPatientHistoryForCommentPatientIdCommentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/comments/{id}": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "findByIdComment",
				"operationId": "findByIdCommentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Comment Entity"
				],
				"summary": "saveComment",
				"operationId": "saveCommentUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Comment"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Comment Entity"
				],
				"summary": "deleteComment",
				"operationId": "deleteCommentUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Comment Entity"
				],
				"summary": "saveComment",
				"operationId": "saveCommentUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Comment"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/comments/{id}/comments": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentComments",
				"operationId": "commentCommentsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentComments",
				"operationId": "commentCommentsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentComments",
				"operationId": "commentCommentsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentComments",
				"operationId": "commentCommentsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentComments",
				"operationId": "commentCommentsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/comments/{id}/comments/{commentId}": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentComments",
				"operationId": "commentCommentsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "commentId",
						"in": "path",
						"description": "commentId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentComments",
				"operationId": "commentCommentsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "commentId",
						"in": "path",
						"description": "commentId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/comments/{id}/parentComment": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentParentComment",
				"operationId": "commentParentCommentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentParentComment",
				"operationId": "commentParentCommentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentParentComment",
				"operationId": "commentParentCommentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentParentComment",
				"operationId": "commentParentCommentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentParentComment",
				"operationId": "commentParentCommentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/comments/{id}/patientHistoryForComment": {
			"get": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentPatientHistoryForComment",
				"operationId": "commentPatientHistoryForCommentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentPatientHistoryForComment",
				"operationId": "commentPatientHistoryForCommentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentPatientHistoryForComment",
				"operationId": "commentPatientHistoryForCommentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentPatientHistoryForComment",
				"operationId": "commentPatientHistoryForCommentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Comment Entity"
				],
				"summary": "commentPatientHistoryForComment",
				"operationId": "commentPatientHistoryForCommentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/configuration/bulk-post": {
			"post": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "configurationBulkPost",
				"operationId": "configurationBulkPostUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorInClinicConfigurationDto",
					"description": "doctorInClinicConfigurationDto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/DoctorInClinicConfigurationDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoctorInClinicConfigurationErrDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/configuration/by/dicId": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationByDicId",
				"operationId": "findConfigurationByDicIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/configuration/bydic/keyname": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActive",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActive",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActive",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActive",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActive",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActive",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActive",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/configuration/bykeyName/value": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByKeyNameAndValueAndActive",
				"operationId": "findConfigurationsByKeyNameAndValueAndActiveUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurations"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByKeyNameAndValueAndActive",
				"operationId": "findConfigurationsByKeyNameAndValueAndActiveUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurations"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByKeyNameAndValueAndActive",
				"operationId": "findConfigurationsByKeyNameAndValueAndActiveUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurations"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByKeyNameAndValueAndActive",
				"operationId": "findConfigurationsByKeyNameAndValueAndActiveUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurations"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByKeyNameAndValueAndActive",
				"operationId": "findConfigurationsByKeyNameAndValueAndActiveUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurations"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByKeyNameAndValueAndActive",
				"operationId": "findConfigurationsByKeyNameAndValueAndActiveUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurations"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsByKeyNameAndValueAndActive",
				"operationId": "findConfigurationsByKeyNameAndValueAndActiveUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurations"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/configuration/fetch/all": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "fetchDistincDicConfiguration",
				"operationId": "fetchDistincDicConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/configuration/lab": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "fetchDoctorInClinicConfigurationForLab",
				"operationId": "fetchDoctorInClinicConfigurationForLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "lab",
						"in": "query",
						"description": "lab",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/configuration/lab/update": {
			"patch": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "fetchDoctorInClinicConfigurationForLab",
				"operationId": "fetchDoctorInClinicConfigurationForLabUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isActive",
						"in": "query",
						"description": "isActive",
						"required": true,
						"type": "boolean"
					},
					{
						"name": "lab",
						"in": "query",
						"description": "lab",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/configuration/list/by/dic": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndActive",
				"operationId": "findConfigurationsListByDicsIDAndActiveUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndActive",
				"operationId": "findConfigurationsListByDicsIDAndActiveUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndActive",
				"operationId": "findConfigurationsListByDicsIDAndActiveUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndActive",
				"operationId": "findConfigurationsListByDicsIDAndActiveUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndActive",
				"operationId": "findConfigurationsListByDicsIDAndActiveUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndActive",
				"operationId": "findConfigurationsListByDicsIDAndActiveUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndActive",
				"operationId": "findConfigurationsListByDicsIDAndActiveUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/configuration/list/by/dic/keyname": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndKeyNameAndActive",
				"operationId": "findConfigurationsListByDicsIDAndKeyNameAndActiveUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndKeyNameAndActive",
				"operationId": "findConfigurationsListByDicsIDAndKeyNameAndActiveUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndKeyNameAndActive",
				"operationId": "findConfigurationsListByDicsIDAndKeyNameAndActiveUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndKeyNameAndActive",
				"operationId": "findConfigurationsListByDicsIDAndKeyNameAndActiveUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndKeyNameAndActive",
				"operationId": "findConfigurationsListByDicsIDAndKeyNameAndActiveUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndKeyNameAndActive",
				"operationId": "findConfigurationsListByDicsIDAndKeyNameAndActiveUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIDAndKeyNameAndActive",
				"operationId": "findConfigurationsListByDicsIDAndKeyNameAndActiveUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/configuration/list/by/dicIds": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIds",
				"operationId": "findConfigurationsListByDicsIdsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIds",
				"operationId": "findConfigurationsListByDicsIdsUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIds",
				"operationId": "findConfigurationsListByDicsIdsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIds",
				"operationId": "findConfigurationsListByDicsIdsUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIds",
				"operationId": "findConfigurationsListByDicsIdsUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIds",
				"operationId": "findConfigurationsListByDicsIdsUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "findConfigurationsListByDicsIds",
				"operationId": "findConfigurationsListByDicsIdsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorInClinicConfigurationsForApp»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/configuration/pad/by/dicId": {
			"get": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "fetchDoctorPadConfiguration",
				"operationId": "fetchDoctorPadConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicPaddindConfigurationDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/configuration/padding-configuration": {
			"post": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "paddingConfiguration",
				"operationId": "paddingConfigurationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorInClinicPaddindConfigurationDto",
					"description": "doctorInClinicPaddindConfigurationDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorInClinicPaddindConfigurationDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoctorInClinicConfigurationErrDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/configuration/update": {
			"post": {
				"tags": [
					"doctor-in-clinic-configuration-controller"
				],
				"summary": "createUpdateDicConfiguration",
				"operationId": "createUpdateDicConfigurationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorInClinicConfigurationListDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation-cart/details": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "fetchConsultationDetailsForCart",
				"operationId": "fetchConsultationDetailsForCartUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationCartDetails"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/find-tele-consultation/prepaid": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "findConsultationForOnlinePaid",
				"operationId": "findConsultationForOnlinePaidUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsultationsForAppointment"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation-for-camp": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationsForCamp",
				"operationId": "fetchConsultationsForCampUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsultationForCamp"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/appointment": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationForAppointment",
				"operationId": "fetchConsultationForAppointmentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "date",
					"in": "query",
					"description": "date",
					"required": false,
					"type": "string",
					"format": "date-time"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsultationAppointmentForMessageRouter"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/appointment/doctorId": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationForAppointmentByDoctorId",
				"operationId": "fetchConsultationForAppointmentByDoctorIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "doctorId",
						"in": "query",
						"description": "doctorId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsultationAppointmentForMessageRouter"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/by/ids": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationForTranscription",
				"operationId": "fetchConsultationForTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsultationForTranscription"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/fee": {
			"post": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationFee",
				"operationId": "fetchConsultationFeeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dtos",
					"description": "dtos",
					"required": true,
					"schema": {
							"$ref": "#/definitions/ConsultationFeeDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationFeeDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/bydoxper/qrcode": {
			"get": {
				"tags": [
					"consultation-and-doxper-controller"
				],
				"summary": "findConsultationByQrcode",
				"operationId": "findConsultationByQrcodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "qrCode",
					"in": "query",
					"description": "qrCode",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationDoxperQrCodeBody»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic-document/add": {
			"post": {
				"tags": [
					"diagnostic-and-document-controller"
				],
				"summary": "addDiagnosticAndDocument",
				"operationId": "addDiagnosticAndDocumentUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticAndDocumentListDto",
					"description": "diagnosticAndDocumentListDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticAndDocumentListDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DiagnosticAndDocumentListDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/complete-order": {
			"post": {
				"tags": [
					"recommendation-pos-controller"
				],
				"summary": "setInfoForConsultationWithoutEPrescription",
				"operationId": "setInfoForConsultationWithoutEPrescriptionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OrderSummaryDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OrderSummaryDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/consultation-doxper-id": {
			"get": {
				"tags": [
					"consultation-and-doxper-controller"
				],
				"summary": "consultationAndDoxperUsingId",
				"operationId": "consultationAndDoxperUsingIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationAndDoxpers"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/consultation-for-notification": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationForAppointmentNotification",
				"operationId": "fetchConsultationForAppointmentNotificationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "date",
					"in": "query",
					"description": "date",
					"required": false,
					"type": "string",
					"format": "date-time"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/NotVisitedConsultations"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/consultation-template": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationsForTemplate",
				"operationId": "fetchConsultationsForTemplateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationForTemplate"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/consultationDetailsById": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultationDetailsById",
				"operationId": "consultationDetailsByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationPatientDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultationDetailsById",
				"operationId": "consultationDetailsByIdUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationPatientDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultationDetailsById",
				"operationId": "consultationDetailsByIdUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationPatientDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultationDetailsById",
				"operationId": "consultationDetailsByIdUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationPatientDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultationDetailsById",
				"operationId": "consultationDetailsByIdUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationPatientDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultationDetailsById",
				"operationId": "consultationDetailsByIdUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationPatientDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultationDetailsById",
				"operationId": "consultationDetailsByIdUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationPatientDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultation/cron": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchCountOfConsultations",
				"operationId": "fetchCountOfConsultationsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorId",
					"in": "query",
					"description": "doctorId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/dic-patient": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultations",
				"operationId": "fetchConsultationsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«ConsultationsForSearchAPI»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/dicIds": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationForMessage",
				"operationId": "fetchConsultationForMessageUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicIds",
					"in": "query",
					"description": "dicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsultationAppointmentForMessageRouter"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/doxper/qrcode": {
			"post": {
				"tags": [
					"consultation-and-doxper-controller"
				],
				"summary": "consultationAndDoxperDetailsByPost",
				"operationId": "consultationAndDoxperDetailsByPostUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "consultationDoxperDto",
					"description": "consultationDoxperDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ConsultationDoxperDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/doxper/update": {
			"post": {
				"tags": [
					"consultation-and-doxper-controller"
				],
				"summary": "updateConsultationAndDoxperDetailsByPatch",
				"operationId": "updateConsultationAndDoxperDetailsByPatchUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "consultationDoxperUpdateDto",
					"description": "consultationDoxperUpdateDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ConsultationDoxperUpdateDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/doxper/using-consultation-qrcode": {
			"get": {
				"tags": [
					"consultation-and-doxper-controller"
				],
				"summary": "findConsultationAndDoxperUsingConsultationAndQrCode",
				"operationId": "findConsultationAndDoxperUsingConsultationAndQrCodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "qrCode",
						"in": "query",
						"description": "qrCode",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxpers»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/find-by-dic-and-patient-id": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "findByDicIdInAndPatientId",
				"operationId": "findByDicIdInAndPatientIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«Consultations»»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/find-consultation": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "findConsultationById",
				"operationId": "findConsultationByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Consultations»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/follow-up": {
			"patch": {
				"tags": [
					"consultation-controller"
				],
				"summary": "patchConsultationAndAddFollowup",
				"operationId": "patchConsultationAndAddFollowupUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "consultationAndFollowupDto",
					"description": "consultationAndFollowupDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ConsultationAndFollowupDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationsForFollowupsForToday"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultation/ids/by/dics": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchConsultationIdForTranscription",
				"operationId": "fetchConsultationIdForTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicIds",
					"in": "query",
					"description": "dicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "integer",
								"format": "int64"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/last-consultation": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchLastConsultationForPatient",
				"operationId": "fetchLastConsultationForPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorId",
						"in": "query",
						"description": "doctorId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationForLastAppointmentDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/not-visited-consultation": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "fetchnotVisitedConsultation",
				"operationId": "fetchnotVisitedConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "date",
					"in": "query",
					"description": "date",
					"required": false,
					"type": "string",
					"format": "date-time"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/NotVisitedConsultations"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/notification/doxper": {
			"post": {
				"tags": [
					"consultation-and-doxper-controller"
				],
				"summary": "consultationNotificationFromDoxper",
				"operationId": "consultationNotificationFromDoxperUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "patientVisitUpdateDoxperRequest",
					"description": "patientVisitUpdateDoxperRequest",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientVisitUpdateDoxperRequest"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/pending": {
			"patch": {
				"tags": [
					"consultation-controller"
				],
				"summary": "patchPendingConsultation",
				"operationId": "patchPendingConsultationUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultation/reason-coding": {
			"get": {
				"tags": [
					"reason-coding-controller"
				],
				"summary": "getConsultationsForDeclineReasons",
				"operationId": "getConsultationsForDeclineReasonsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicIds",
						"in": "query",
						"description": "doctorInClinicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«ConsultationsForDeclineReasons»»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/reason-coding/fetch": {
			"get": {
				"tags": [
					"reason-coding-controller"
				],
				"summary": "getConsultationForReasonCoding",
				"operationId": "getConsultationForReasonCodingUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationsForDeclineReasonsWithPatientAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/recommendation": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "findRecommendationsForConsultation",
				"operationId": "findRecommendationsForConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "days",
						"in": "query",
						"description": "days",
						"required": false,
						"type": "integer",
						"default": 15,
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "integer",
						"default": 15,
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationRecommendation"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/status/{id}": {
			"patch": {
				"tags": [
					"consultation-controller"
				],
				"summary": "updateConsultationStatus",
				"operationId": "updateConsultationStatusUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": true,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultation/summary-progress": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "getSummaryAndProgressForConsultation",
				"operationId": "getSummaryAndProgressForConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationSummaryProgress»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/transcribe": {
			"post": {
				"tags": [
					"transcribe-controller"
				],
				"summary": "postAllDetailsForTranscribeInConsultation",
				"operationId": "postAllDetailsForTranscribeInConsultationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "transcribeConsultationDto",
					"description": "transcribeConsultationDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscribeConsultationDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultation/view-prescription": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultations",
				"operationId": "consultationsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationForViewPrescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultations",
				"operationId": "consultationsUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationForViewPrescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultations",
				"operationId": "consultationsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationForViewPrescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultations",
				"operationId": "consultationsUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationForViewPrescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultations",
				"operationId": "consultationsUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationForViewPrescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultations",
				"operationId": "consultationsUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationForViewPrescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"consultation-controller"
				],
				"summary": "consultations",
				"operationId": "consultationsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationForViewPrescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultation/visited/patient": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "getConsultationPatientVisitedDetails",
				"operationId": "getConsultationPatientVisitedDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicIds",
					"in": "query",
					"description": "dicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsultationPatientVisitedDetails"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationAndDoxper": {
			"get": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "findAllConsultationAndDoxper",
				"operationId": "findAllConsultationAndDoxperUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "saveConsultationAndDoxper",
				"operationId": "saveConsultationAndDoxperUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ConsultationAndDoxper"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxper»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationAndDoxper/search/findConsultationAndDoxperUsingConsultationAndQrCode": {
			"get": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "findConsultationAndDoxperUsingConsultationAndQrCodeConsultationAndDoxper",
				"operationId": "findConsultationAndDoxperUsingConsultationAndQrCodeConsultationAndDoxperUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "qrcode",
						"in": "query",
						"description": "qrcode",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationAndDoxper/search/findConsultationByDoxper": {
			"get": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "findConsultationByDoxperConsultationAndDoxper",
				"operationId": "findConsultationByDoxperConsultationAndDoxperUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "qrCode",
					"in": "query",
					"description": "qrCode",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationAndDoxper/search/getDoxperNotificationWithoutConsultation": {
			"get": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "getDoxperNotificationWithoutConsultationConsultationAndDoxper",
				"operationId": "getDoxperNotificationWithoutConsultationConsultationAndDoxperUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "notificationSource",
						"in": "query",
						"description": "notificationSource",
						"required": false,
						"type": "string",
						"enum": [
							"MEDDO",
							"DOXPER"
						]
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationAndDoxper/{id}": {
			"get": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "findByIdConsultationAndDoxper",
				"operationId": "findByIdConsultationAndDoxperUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "saveConsultationAndDoxper",
				"operationId": "saveConsultationAndDoxperUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ConsultationAndDoxper"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxper»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "deleteConsultationAndDoxper",
				"operationId": "deleteConsultationAndDoxperUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "saveConsultationAndDoxper",
				"operationId": "saveConsultationAndDoxperUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ConsultationAndDoxper"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxper»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultationAndDoxper/{id}/consultation": {
			"get": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperConsultation",
				"operationId": "consultationAndDoxperConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperConsultation",
				"operationId": "consultationAndDoxperConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperConsultation",
				"operationId": "consultationAndDoxperConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperConsultation",
				"operationId": "consultationAndDoxperConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperConsultation",
				"operationId": "consultationAndDoxperConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultationAndDoxper/{id}/doctorInClinic": {
			"get": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperDoctorInClinic",
				"operationId": "consultationAndDoxperDoctorInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperDoctorInClinic",
				"operationId": "consultationAndDoxperDoctorInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperDoctorInClinic",
				"operationId": "consultationAndDoxperDoctorInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperDoctorInClinic",
				"operationId": "consultationAndDoxperDoctorInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperDoctorInClinic",
				"operationId": "consultationAndDoxperDoctorInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultationAndDoxper/{id}/scribble": {
			"get": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperScribble",
				"operationId": "consultationAndDoxperScribbleUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperScribble",
				"operationId": "consultationAndDoxperScribbleUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperScribble",
				"operationId": "consultationAndDoxperScribbleUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperScribble",
				"operationId": "consultationAndDoxperScribbleUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ConsultationAndDoxper Entity"
				],
				"summary": "consultationAndDoxperScribble",
				"operationId": "consultationAndDoxperScribbleUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultationHistory": {
			"get": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "findAllConsultationHistory",
				"operationId": "findAllConsultationHistoryUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "saveConsultationHistory",
				"operationId": "saveConsultationHistoryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ConsultationHistory"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationHistory/search/findByConsultationDoctorInClinicIdInAndConsultationAppointmentTimeBetween": {
			"get": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndConsultationAppointmentTimeBetweenConsultationHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndConsultationAppointmentTimeBetweenConsultationHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationHistory/search/findByConsultationDoctorInClinicIdInAndCreatedAtBetween": {
			"get": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndCreatedAtBetweenConsultationHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndCreatedAtBetweenConsultationHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationHistory/search/findByConsultationDoctorInClinicIdInAndCurrentStatusAndCreatedAtBetween": {
			"get": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndCurrentStatusAndCreatedAtBetweenConsultationHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndCurrentStatusAndCreatedAtBetweenConsultationHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationHistory/search/findByConsultationIdInAndPreviousStatusAndCurrentStatus": {
			"get": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "findByConsultationIdInAndPreviousStatusAndCurrentStatusConsultationHistory",
				"operationId": "findByConsultationIdInAndPreviousStatusAndCurrentStatusConsultationHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "current",
						"in": "query",
						"description": "current",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "previous",
						"in": "query",
						"description": "previous",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationHistory/search/findByConsultationIdInAndPreviousStatusAndCurrentStatusOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "findByConsultationIdInAndPreviousStatusAndCurrentStatusOrderByCreatedAtDescConsultationHistory",
				"operationId": "findByConsultationIdInAndPreviousStatusAndCurrentStatusOrderByCreatedAtDescConsultationHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "current",
						"in": "query",
						"description": "current",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "previous",
						"in": "query",
						"description": "previous",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationHistory/{id}": {
			"get": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "findByIdConsultationHistory",
				"operationId": "findByIdConsultationHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "saveConsultationHistory",
				"operationId": "saveConsultationHistoryUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ConsultationHistory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "deleteConsultationHistory",
				"operationId": "deleteConsultationHistoryUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "saveConsultationHistory",
				"operationId": "saveConsultationHistoryUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ConsultationHistory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultationHistory/{id}/consultation": {
			"get": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "consultationHistoryConsultation",
				"operationId": "consultationHistoryConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "consultationHistoryConsultation",
				"operationId": "consultationHistoryConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "consultationHistoryConsultation",
				"operationId": "consultationHistoryConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "consultationHistoryConsultation",
				"operationId": "consultationHistoryConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ConsultationHistory Entity"
				],
				"summary": "consultationHistoryConsultation",
				"operationId": "consultationHistoryConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultationreasons": {
			"get": {
				"tags": [
					"ConsultationReason Entity"
				],
				"summary": "findAllConsultationReason",
				"operationId": "findAllConsultationReasonUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ConsultationReason Entity"
				],
				"summary": "saveConsultationReason",
				"operationId": "saveConsultationReasonUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ConsultationReason"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultationreasons/{id}": {
			"get": {
				"tags": [
					"ConsultationReason Entity"
				],
				"summary": "findByIdConsultationReason",
				"operationId": "findByIdConsultationReasonUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ConsultationReason Entity"
				],
				"summary": "saveConsultationReason",
				"operationId": "saveConsultationReasonUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ConsultationReason"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ConsultationReason Entity"
				],
				"summary": "deleteConsultationReason",
				"operationId": "deleteConsultationReasonUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ConsultationReason Entity"
				],
				"summary": "saveConsultationReason",
				"operationId": "saveConsultationReasonUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ConsultationReason"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findAllConsultation",
				"operationId": "findAllConsultationUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "saveConsultation",
				"operationId": "saveConsultationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Consultation"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/countByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "countByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultation",
				"operationId": "countByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/countDistinctByDoctorInClinicDoctorIdInAndIsVisitedTrue": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "countDistinctByDoctorInClinicDoctorIdInAndIsVisitedTrueConsultation",
				"operationId": "countDistinctByDoctorInClinicDoctorIdInAndIsVisitedTrueConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorId",
					"in": "query",
					"description": "doctorId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/countDistinctByDoctorInClinicIdAndStatusAndTimeSlotIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "countDistinctByDoctorInClinicIdAndStatusAndTimeSlotIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultation",
				"operationId": "countDistinctByDoctorInClinicIdAndStatusAndTimeSlotIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					},
					{
						"name": "timeslotId",
						"in": "query",
						"description": "timeslotId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/existsByPatientIdAndDoctorInClinicIdAndAppointmentTimeBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "existsByPatientIdAndDoctorInClinicIdAndAppointmentTimeBetweenConsultation",
				"operationId": "existsByPatientIdAndDoctorInClinicIdAndAppointmentTimeBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchByDoctorInClinicIdInAndStatusAndIsTranscribedOrderByAppointmentTimeAsc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchByDoctorInClinicIdInAndStatusAndIsTranscribedOrderByAppointmentTimeAscConsultation",
				"operationId": "fetchByDoctorInClinicIdInAndStatusAndIsTranscribedOrderByAppointmentTimeAscConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "isTranscribed",
						"in": "query",
						"description": "isTranscribed",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchByPatientIdAndDic": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchByPatientIdAndDicConsultation",
				"operationId": "fetchByPatientIdAndDicConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinic",
						"in": "query",
						"description": "doctorInClinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchByPatientIdsAndAppointmentDateBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchByPatientIdsAndAppointmentDateBetweenConsultation",
				"operationId": "fetchByPatientIdsAndAppointmentDateBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dateAfter",
						"in": "query",
						"description": "dateAfter",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dateBefore",
						"in": "query",
						"description": "dateBefore",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientIds",
						"in": "query",
						"description": "patientIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchCampConsutationforDate": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchCampConsutationforDateConsultation",
				"operationId": "fetchCampConsutationforDateConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchConsultation": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchConsultationConsultation",
				"operationId": "fetchConsultationConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "interval",
						"in": "query",
						"description": "interval",
						"required": false,
						"type": "string"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientIds",
						"in": "query",
						"description": "patientIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchConsultationByPatientIdAppointmentDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchConsultationByPatientIdAppointmentDescConsultation",
				"operationId": "fetchConsultationByPatientIdAppointmentDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorId",
						"in": "query",
						"description": "doctorId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchConsultationForAppointmentByDoctorId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchConsultationForAppointmentByDoctorIdConsultation",
				"operationId": "fetchConsultationForAppointmentByDoctorIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "date1",
						"in": "query",
						"description": "date1",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "doctorId",
						"in": "query",
						"description": "doctorId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchConsultationsForReasonCoding": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchConsultationsForReasonCodingConsultation",
				"operationId": "fetchConsultationsForReasonCodingConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicIds",
						"in": "query",
						"description": "doctorInClinicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchConsultationsFromPatientIds": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchConsultationsFromPatientIdsConsultation",
				"operationId": "fetchConsultationsFromPatientIdsConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientIds",
					"in": "query",
					"description": "patientIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchDetailsThroughIdConsultation",
				"operationId": "fetchDetailsThroughIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchDetailsThroughIdForRecommendation": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchDetailsThroughIdForRecommendationConsultation",
				"operationId": "fetchDetailsThroughIdForRecommendationConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/fetchDetailsThroughIdForRecommendationPos": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "fetchDetailsThroughIdForRecommendationPosConsultation",
				"operationId": "fetchDetailsThroughIdForRecommendationPosConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findAllByPatientIdAndAppointmentTimeGreaterThan": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findAllByPatientIdAndAppointmentTimeGreaterThanConsultation",
				"operationId": "findAllByPatientIdAndAppointmentTimeGreaterThanConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanAndStatus": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanAndStatusConsultation",
				"operationId": "findByAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanAndStatusConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "date1",
						"in": "query",
						"description": "date1",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByAppointmentTimeLessThanAndStatus": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByAppointmentTimeLessThanAndStatusConsultation",
				"operationId": "findByAppointmentTimeLessThanAndStatusConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinic": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicConsultation",
				"operationId": "findByDoctorInClinicConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicAndPatientIds": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicAndPatientIdsConsultation",
				"operationId": "findByDoctorInClinicAndPatientIdsConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientIds",
						"in": "query",
						"description": "patientIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdAndAppointmentTime": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdAndAppointmentTimeConsultation",
				"operationId": "findByDoctorInClinicIdAndAppointmentTimeConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdAndAppointmentTimeBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdAndAppointmentTimeBetweenConsultation",
				"operationId": "findByDoctorInClinicIdAndAppointmentTimeBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdAndCreatedAtGreaterThanEqual": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdAndCreatedAtGreaterThanEqualConsultation",
				"operationId": "findByDoctorInClinicIdAndCreatedAtGreaterThanEqualConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdAndPatientPhoneContaining": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdAndPatientPhoneContainingConsultation",
				"operationId": "findByDoctorInClinicIdAndPatientPhoneContainingConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinic",
						"in": "query",
						"description": "doctorInClinic",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdIn": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInConsultation",
				"operationId": "findByDoctorInClinicIdInConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinic",
					"in": "query",
					"description": "doctorInClinic",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndAppointmentTimeBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndAppointmentTimeBetweenConsultation",
				"operationId": "findByDoctorInClinicIdInAndAppointmentTimeBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultation",
				"operationId": "findByDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndAppointmentTimeNotNull": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndAppointmentTimeNotNullConsultation",
				"operationId": "findByDoctorInClinicIdInAndAppointmentTimeNotNullConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinic",
					"in": "query",
					"description": "doctorInClinic",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationForPrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndPatientId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndPatientIdConsultation",
				"operationId": "findByDoctorInClinicIdInAndPatientIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndPatientIdInAndStatus": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndPatientIdInAndStatusConsultation",
				"operationId": "findByDoctorInClinicIdInAndPatientIdInAndStatusConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndPatientIdOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndPatientIdOrderByCreatedAtDescConsultation",
				"operationId": "findByDoctorInClinicIdInAndPatientIdOrderByCreatedAtDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndPatientNameContaining": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndPatientNameContainingConsultation",
				"operationId": "findByDoctorInClinicIdInAndPatientNameContainingConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndPatientPhoneContaining": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndPatientPhoneContainingConsultation",
				"operationId": "findByDoctorInClinicIdInAndPatientPhoneContainingConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatus": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinics",
						"in": "query",
						"description": "doctorInClinics",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusAndAppointmentTimeBetweenOrderByPriorityQueuesAsc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusAndAppointmentTimeBetweenOrderByPriorityQueuesAscConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusAndAppointmentTimeBetweenOrderByPriorityQueuesAscConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinics",
						"in": "query",
						"description": "doctorInClinics",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusAndAppointmentTimeGreaterThanEqual": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusAndAppointmentTimeGreaterThanEqualConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusAndAppointmentTimeGreaterThanEqualConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicid",
						"in": "query",
						"description": "doctorinclinicid",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "from",
						"in": "query",
						"description": "from",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusAndIsTranscribedFalse": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusAndIsTranscribedFalseConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusAndIsTranscribedFalseConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinics",
						"in": "query",
						"description": "doctorInClinics",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusAndIsTranscribedOrderByAppointmentTimeDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusAndIsTranscribedOrderByAppointmentTimeDescConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusAndIsTranscribedOrderByAppointmentTimeDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinics",
						"in": "query",
						"description": "doctorInClinics",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "isTranscribed",
						"in": "query",
						"description": "isTranscribed",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusIn": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusInConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusInConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"PENDING", "OPEN",
								"CHECKED_IN",
								"NO_SHOW",
								"AWAITING",
								"PRESCRIBED",
								"VISITED",
								"TRANSCRIBING_ISSUE",
								"TRANSCRIBING",
								"TRANSCRIBED",
								"RESCHEDULED",
								"INVOICED",
								"CANCELLED",
								"DONE",
								"EDITED"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusInAndAppointmentTimeBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusInAndAppointmentTimeBetweenConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusInAndAppointmentTimeBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusInAndAppointmentTimeBetweenOrderByPriorityQueuesAsc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusInAndAppointmentTimeBetweenOrderByPriorityQueuesAscConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusInAndAppointmentTimeBetweenOrderByPriorityQueuesAscConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusInAndCreatedAtGreaterThanEqualAndCreatedAtLessThanOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusInAndCreatedAtGreaterThanEqualAndCreatedAtLessThanOrderByCreatedAtDescConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusInAndCreatedAtGreaterThanEqualAndCreatedAtLessThanOrderByCreatedAtDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dateAfter",
						"in": "query",
						"description": "dateAfter",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "dateBefore",
						"in": "query",
						"description": "dateBefore",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"PENDING", "OPEN",
								"CHECKED_IN",
								"NO_SHOW",
								"AWAITING",
								"PRESCRIBED",
								"VISITED",
								"TRANSCRIBING_ISSUE",
								"TRANSCRIBING",
								"TRANSCRIBED",
								"RESCHEDULED",
								"INVOICED",
								"CANCELLED",
								"DONE",
								"EDITED"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusInAndPatientPhoneAndAppointmentDateToday": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusInAndPatientPhoneAndAppointmentDateTodayConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusInAndPatientPhoneAndAppointmentDateTodayConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "mobile",
						"in": "query",
						"description": "mobile",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"PENDING", "OPEN",
								"CHECKED_IN",
								"NO_SHOW",
								"AWAITING",
								"PRESCRIBED",
								"VISITED",
								"TRANSCRIBING_ISSUE",
								"TRANSCRIBING",
								"TRANSCRIBED",
								"RESCHEDULED",
								"INVOICED",
								"CANCELLED",
								"DONE",
								"EDITED"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					},
					{
						"name": "today",
						"in": "query",
						"description": "today",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusInOrderByAppointmentTimeDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusInOrderByAppointmentTimeDescConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusInOrderByAppointmentTimeDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"PENDING", "OPEN",
								"CHECKED_IN",
								"NO_SHOW",
								"AWAITING",
								"PRESCRIBED",
								"VISITED",
								"TRANSCRIBING_ISSUE",
								"TRANSCRIBING",
								"TRANSCRIBED",
								"RESCHEDULED",
								"INVOICED",
								"CANCELLED",
								"DONE",
								"EDITED"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusOrderByPriorityQueuesAsc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusOrderByPriorityQueuesAscConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusOrderByPriorityQueuesAscConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinics",
						"in": "query",
						"description": "doctorInClinics",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInAndStatusOrderByPriorityQueuesDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInAndStatusOrderByPriorityQueuesDescConsultation",
				"operationId": "findByDoctorInClinicIdInAndStatusOrderByPriorityQueuesDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinics",
						"in": "query",
						"description": "doctorInClinics",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicIdInOrderByIdDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicIdInOrderByIdDescConsultation",
				"operationId": "findByDoctorInClinicIdInOrderByIdDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinic",
						"in": "query",
						"description": "doctorInClinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicUsingMeddoLiteTrueAndDeferred": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicUsingMeddoLiteTrueAndDeferredConsultation",
				"operationId": "findByDoctorInClinicUsingMeddoLiteTrueAndDeferredConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "deferred",
						"in": "query",
						"description": "deferred",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByDoctorInClinicsAndGetUniquePatient": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByDoctorInClinicsAndGetUniquePatientConsultation",
				"operationId": "findByDoctorInClinicsAndGetUniquePatientConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicIds",
					"in": "query",
					"description": "dicIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByIdInOrderByAppointmentTimeDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByIdInOrderByAppointmentTimeDescConsultation",
				"operationId": "findByIdInOrderByAppointmentTimeDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByIsTranscribedTrueAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanEqualOrderByAppointmentTimeDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByIsTranscribedTrueAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanEqualOrderByAppointmentTimeDescConsultation",
				"operationId": "findByIsTranscribedTrueAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanEqualOrderByAppointmentTimeDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByIsTranscribedTrueAndDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanEqualOrderByAppointmentTimeDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByIsTranscribedTrueAndDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanEqualOrderByAppointmentTimeDescConsultation",
				"operationId": "findByIsTranscribedTrueAndDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanEqualOrderByAppointmentTimeDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicIds",
						"in": "query",
						"description": "doctorInClinicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByIsTranscribedTrueAndDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualOrderByAppointmentTimeDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByIsTranscribedTrueAndDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualOrderByAppointmentTimeDescConsultation",
				"operationId": "findByIsTranscribedTrueAndDoctorInClinicIdInAndAppointmentTimeGreaterThanEqualOrderByAppointmentTimeDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicIds",
						"in": "query",
						"description": "doctorInClinicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientCodeAndDoctorInClinicCodeIn": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientCodeAndDoctorInClinicCodeInConsultation",
				"operationId": "findByPatientCodeAndDoctorInClinicCodeInConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicCode",
						"in": "query",
						"description": "doctorinclinicCode",
						"required": false,
						"type": "string"
					},
					{
						"name": "patientCode",
						"in": "query",
						"description": "patientCode",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdConsultation",
				"operationId": "findByPatientIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdAndDoctorInClinicIdAndStatusAndAppointmentTimeBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdAndDoctorInClinicIdAndStatusAndAppointmentTimeBetweenConsultation",
				"operationId": "findByPatientIdAndDoctorInClinicIdAndStatusAndAppointmentTimeBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdAndDoctorInClinicIdIn": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdAndDoctorInClinicIdInConsultation",
				"operationId": "findByPatientIdAndDoctorInClinicIdInConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicId",
						"in": "query",
						"description": "doctorinclinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdAndDoctorInClinicIdInAndIsVisited": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdAndDoctorInClinicIdInAndIsVisitedConsultation",
				"operationId": "findByPatientIdAndDoctorInClinicIdInAndIsVisitedConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isVisited",
						"in": "query",
						"description": "isVisited",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdAndLastModifiedBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdAndLastModifiedBetweenConsultation",
				"operationId": "findByPatientIdAndLastModifiedBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdAndStatus": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdAndStatusConsultation",
				"operationId": "findByPatientIdAndStatusConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdAndStatusAndAppointmentTimeBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdAndStatusAndAppointmentTimeBetweenConsultation",
				"operationId": "findByPatientIdAndStatusAndAppointmentTimeBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdAndStatusAndAppointmentTimeGreaterThanAndAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdAndStatusAndAppointmentTimeGreaterThanAndAppointmentTimeLessThanConsultation",
				"operationId": "findByPatientIdAndStatusAndAppointmentTimeGreaterThanAndAppointmentTimeLessThanConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdIn": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdInConsultation",
				"operationId": "findByPatientIdInConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdInAndStatusAndAppointmentTimeBetween": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdInAndStatusAndAppointmentTimeBetweenConsultation",
				"operationId": "findByPatientIdInAndStatusAndAppointmentTimeBetweenConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByPatientIdInAndStatusAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByPatientIdInAndStatusAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultation",
				"operationId": "findByPatientIdInAndStatusAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultation",
				"operationId": "findByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanOrderByPriorityQueuesAsc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanOrderByPriorityQueuesAscConsultation",
				"operationId": "findByStatusAndDoctorInClinicIdAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanOrderByPriorityQueuesAscConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByStatusAndDoctorInClinicIdAndPriorityQueuesGreaterThanAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByStatusAndDoctorInClinicIdAndPriorityQueuesGreaterThanAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultation",
				"operationId": "findByStatusAndDoctorInClinicIdAndPriorityQueuesGreaterThanAndAppointmentTimeGreaterThanEqualAndAppointmentTimeLessThanConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "priorityQueues",
						"in": "query",
						"description": "priorityQueues",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByStatusAndIsTranscribedOrderByAppointmentTimeDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByStatusAndIsTranscribedOrderByAppointmentTimeDescConsultation",
				"operationId": "findByStatusAndIsTranscribedOrderByAppointmentTimeDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "isTranscribed",
						"in": "query",
						"description": "isTranscribed",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByStatusInAndDoctorInClinicId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByStatusInAndDoctorInClinicIdConsultation",
				"operationId": "findByStatusInAndDoctorInClinicIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findByStatusInAndDoctorInClinicIdIn": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByStatusInAndDoctorInClinicIdInConsultation",
				"operationId": "findByStatusInAndDoctorInClinicIdInConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findConsultationByDIcIds": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findConsultationByDIcIdsConsultation",
				"operationId": "findConsultationByDIcIdsConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findConsultationByPatientId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findConsultationByPatientIdConsultation",
				"operationId": "findConsultationByPatientIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinic",
						"in": "query",
						"description": "doctorInClinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findConsultationsForQuickPrescription": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findConsultationsForQuickPrescriptionConsultation",
				"operationId": "findConsultationsForQuickPrescriptionConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findConsultationsForQuickPrescriptionByDic": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findConsultationsForQuickPrescriptionByDicConsultation",
				"operationId": "findConsultationsForQuickPrescriptionByDicConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "doctorInClinicIds",
						"in": "query",
						"description": "doctorInClinicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findConsultationsThroughPatientId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findConsultationsThroughPatientIdConsultation",
				"operationId": "findConsultationsThroughPatientIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findDetailsThroughId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findDetailsThroughIdConsultation",
				"operationId": "findDetailsThroughIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findFirstByDoctorInClinicIdOrderByAppointmentTimeDesc": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findFirstByDoctorInClinicIdOrderByAppointmentTimeDescConsultation",
				"operationId": "findFirstByDoctorInClinicIdOrderByAppointmentTimeDescConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinics",
					"in": "query",
					"description": "doctorInClinics",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findIdsThroughPatientId": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findIdsThroughPatientIdConsultation",
				"operationId": "findIdsThroughPatientIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«long»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findIdsThroughPatientIds": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findIdsThroughPatientIdsConsultation",
				"operationId": "findIdsThroughPatientIdsConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientIds",
					"in": "query",
					"description": "patientIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«long»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findMaxPriorityQueueNumber": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findMaxPriorityQueueNumberConsultation",
				"operationId": "findMaxPriorityQueueNumberConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dic",
						"in": "query",
						"description": "dic",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "statusValue",
						"in": "query",
						"description": "statusValue",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING", "OPEN",
							"CHECKED_IN",
							"NO_SHOW",
							"AWAITING",
							"PRESCRIBED",
							"VISITED",
							"TRANSCRIBING_ISSUE",
							"TRANSCRIBING",
							"TRANSCRIBED",
							"RESCHEDULED",
							"INVOICED",
							"CANCELLED",
							"DONE",
							"EDITED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/findNumberOfConsultationsNotCancelledForPatient": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findNumberOfConsultationsNotCancelledForPatientConsultation",
				"operationId": "findNumberOfConsultationsNotCancelledForPatientConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/search/getAllCodes": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "getAllCodesConsultation",
				"operationId": "getAllCodesConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«string»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "findByIdConsultation",
				"operationId": "findByIdConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "saveConsultation",
				"operationId": "saveConsultationUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Consultation"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "deleteConsultation",
				"operationId": "deleteConsultationUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "saveConsultation",
				"operationId": "saveConsultationUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Consultation"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/address": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAddress",
				"operationId": "consultationAddressUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAddress",
				"operationId": "consultationAddressUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAddress",
				"operationId": "consultationAddressUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAddress",
				"operationId": "consultationAddressUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAddress",
				"operationId": "consultationAddressUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/advices": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAdvices",
				"operationId": "consultationAdvicesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Advice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAdvices",
				"operationId": "consultationAdvicesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Advice»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAdvices",
				"operationId": "consultationAdvicesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Advice»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAdvices",
				"operationId": "consultationAdvicesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAdvices",
				"operationId": "consultationAdvicesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Advice»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/advices/{adviceId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAdvices",
				"operationId": "consultationAdvicesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "adviceId",
						"in": "path",
						"description": "adviceId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Advice»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAdvices",
				"operationId": "consultationAdvicesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "adviceId",
						"in": "path",
						"description": "adviceId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/allergies": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAllergies",
				"operationId": "consultationAllergiesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAllergies",
				"operationId": "consultationAllergiesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAllergies",
				"operationId": "consultationAllergiesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAllergies",
				"operationId": "consultationAllergiesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAllergies",
				"operationId": "consultationAllergiesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Allergy»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/allergies/{allergyId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAllergies",
				"operationId": "consultationAllergiesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "allergyId",
						"in": "path",
						"description": "allergyId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Allergy»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationAllergies",
				"operationId": "consultationAllergiesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "allergyId",
						"in": "path",
						"description": "allergyId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/consultationAndDoxpers": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationAndDoxpers",
				"operationId": "consultationConsultationAndDoxpersUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationAndDoxpers",
				"operationId": "consultationConsultationAndDoxpersUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationAndDoxpers",
				"operationId": "consultationConsultationAndDoxpersUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationAndDoxpers",
				"operationId": "consultationConsultationAndDoxpersUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationAndDoxpers",
				"operationId": "consultationConsultationAndDoxpersUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/consultationAndDoxpers/{consultationanddoxperId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationAndDoxpers",
				"operationId": "consultationConsultationAndDoxpersUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationanddoxperId",
						"in": "path",
						"description": "consultationanddoxperId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationAndDoxpers",
				"operationId": "consultationConsultationAndDoxpersUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationanddoxperId",
						"in": "path",
						"description": "consultationanddoxperId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/consultationHistories": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationHistories",
				"operationId": "consultationConsultationHistoriesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationHistories",
				"operationId": "consultationConsultationHistoriesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationHistories",
				"operationId": "consultationConsultationHistoriesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationHistories",
				"operationId": "consultationConsultationHistoriesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationHistories",
				"operationId": "consultationConsultationHistoriesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/consultationHistories/{consultationhistoryId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationHistories",
				"operationId": "consultationConsultationHistoriesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationhistoryId",
						"in": "path",
						"description": "consultationhistoryId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationHistories",
				"operationId": "consultationConsultationHistoriesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationhistoryId",
						"in": "path",
						"description": "consultationhistoryId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/consultationReason": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationReason",
				"operationId": "consultationConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationReason",
				"operationId": "consultationConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationReason",
				"operationId": "consultationConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationReason",
				"operationId": "consultationConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationConsultationReason",
				"operationId": "consultationConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/diagnoses": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnoses",
				"operationId": "consultationDiagnosesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnoses",
				"operationId": "consultationDiagnosesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnoses",
				"operationId": "consultationDiagnosesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnoses",
				"operationId": "consultationDiagnosesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnoses",
				"operationId": "consultationDiagnosesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/diagnoses/{diagnosisId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnoses",
				"operationId": "consultationDiagnosesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosisId",
						"in": "path",
						"description": "diagnosisId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnoses",
				"operationId": "consultationDiagnosesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosisId",
						"in": "path",
						"description": "diagnosisId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/diagnostics": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnostics",
				"operationId": "consultationDiagnosticsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnostics",
				"operationId": "consultationDiagnosticsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnostics",
				"operationId": "consultationDiagnosticsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnostics",
				"operationId": "consultationDiagnosticsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnostics",
				"operationId": "consultationDiagnosticsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/diagnostics/{diagnosticId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnostics",
				"operationId": "consultationDiagnosticsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "path",
						"description": "diagnosticId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDiagnostics",
				"operationId": "consultationDiagnosticsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "path",
						"description": "diagnosticId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/doctorAdviceTag": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorAdviceTag",
				"operationId": "consultationDoctorAdviceTagUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorAdviceTag»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorAdviceTag",
				"operationId": "consultationDoctorAdviceTagUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorAdviceTag»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorAdviceTag",
				"operationId": "consultationDoctorAdviceTagUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorAdviceTag»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorAdviceTag",
				"operationId": "consultationDoctorAdviceTagUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorAdviceTag",
				"operationId": "consultationDoctorAdviceTagUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorAdviceTag»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/doctorInClinic": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorInClinic",
				"operationId": "consultationDoctorInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorInClinic",
				"operationId": "consultationDoctorInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorInClinic",
				"operationId": "consultationDoctorInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorInClinic",
				"operationId": "consultationDoctorInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationDoctorInClinic",
				"operationId": "consultationDoctorInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/existingConditions": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationExistingConditions",
				"operationId": "consultationExistingConditionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationExistingConditions",
				"operationId": "consultationExistingConditionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationExistingConditions",
				"operationId": "consultationExistingConditionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationExistingConditions",
				"operationId": "consultationExistingConditionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationExistingConditions",
				"operationId": "consultationExistingConditionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/existingConditions/{existingconditionId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationExistingConditions",
				"operationId": "consultationExistingConditionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "existingconditionId",
						"in": "path",
						"description": "existingconditionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingCondition»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationExistingConditions",
				"operationId": "consultationExistingConditionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "existingconditionId",
						"in": "path",
						"description": "existingconditionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/followups": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationFollowups",
				"operationId": "consultationFollowupsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Followup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationFollowups",
				"operationId": "consultationFollowupsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Followup»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationFollowups",
				"operationId": "consultationFollowupsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Followup»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationFollowups",
				"operationId": "consultationFollowupsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationFollowups",
				"operationId": "consultationFollowupsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Followup»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/followups/{followupId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationFollowups",
				"operationId": "consultationFollowupsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "followupId",
						"in": "path",
						"description": "followupId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Followup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationFollowups",
				"operationId": "consultationFollowupsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "followupId",
						"in": "path",
						"description": "followupId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/patient": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatient",
				"operationId": "consultationPatientUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatient",
				"operationId": "consultationPatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatient",
				"operationId": "consultationPatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatient",
				"operationId": "consultationPatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatient",
				"operationId": "consultationPatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/patientHistories": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientHistories",
				"operationId": "consultationPatientHistoriesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientHistories",
				"operationId": "consultationPatientHistoriesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientHistories",
				"operationId": "consultationPatientHistoriesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientHistories",
				"operationId": "consultationPatientHistoriesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientHistories",
				"operationId": "consultationPatientHistoriesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/patientHistories/{patienthistoryId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientHistories",
				"operationId": "consultationPatientHistoriesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patienthistoryId",
						"in": "path",
						"description": "patienthistoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientHistories",
				"operationId": "consultationPatientHistoriesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patienthistoryId",
						"in": "path",
						"description": "patienthistoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/patientSymptoms": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientSymptoms",
				"operationId": "consultationPatientSymptomsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientSymptoms",
				"operationId": "consultationPatientSymptomsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientSymptoms",
				"operationId": "consultationPatientSymptomsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientSymptoms",
				"operationId": "consultationPatientSymptomsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientSymptoms",
				"operationId": "consultationPatientSymptomsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/patientSymptoms/{patientsymptomId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientSymptoms",
				"operationId": "consultationPatientSymptomsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientsymptomId",
						"in": "path",
						"description": "patientsymptomId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientSymptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPatientSymptoms",
				"operationId": "consultationPatientSymptomsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientsymptomId",
						"in": "path",
						"description": "patientsymptomId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/prescriptionByDates": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptionByDates",
				"operationId": "consultationPrescriptionByDatesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptionByDates",
				"operationId": "consultationPrescriptionByDatesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptionByDates",
				"operationId": "consultationPrescriptionByDatesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptionByDates",
				"operationId": "consultationPrescriptionByDatesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptionByDates",
				"operationId": "consultationPrescriptionByDatesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/prescriptionByDates/{prescriptionbydateId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptionByDates",
				"operationId": "consultationPrescriptionByDatesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionbydateId",
						"in": "path",
						"description": "prescriptionbydateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptionByDates",
				"operationId": "consultationPrescriptionByDatesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionbydateId",
						"in": "path",
						"description": "prescriptionbydateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/prescriptions": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptions",
				"operationId": "consultationPrescriptionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptions",
				"operationId": "consultationPrescriptionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptions",
				"operationId": "consultationPrescriptionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptions",
				"operationId": "consultationPrescriptionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptions",
				"operationId": "consultationPrescriptionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/prescriptions/{prescriptionId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptions",
				"operationId": "consultationPrescriptionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionId",
						"in": "path",
						"description": "prescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationPrescriptions",
				"operationId": "consultationPrescriptionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionId",
						"in": "path",
						"description": "prescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/procedures": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationProcedures",
				"operationId": "consultationProceduresUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationProcedures",
				"operationId": "consultationProceduresUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationProcedures",
				"operationId": "consultationProceduresUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationProcedures",
				"operationId": "consultationProceduresUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationProcedures",
				"operationId": "consultationProceduresUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/procedures/{medicalprocedureId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationProcedures",
				"operationId": "consultationProceduresUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicalprocedureId",
						"in": "path",
						"description": "medicalprocedureId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationProcedures",
				"operationId": "consultationProceduresUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicalprocedureId",
						"in": "path",
						"description": "medicalprocedureId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/referrals": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationReferrals",
				"operationId": "consultationReferralsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Referral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationReferrals",
				"operationId": "consultationReferralsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Referral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationReferrals",
				"operationId": "consultationReferralsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Referral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationReferrals",
				"operationId": "consultationReferralsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationReferrals",
				"operationId": "consultationReferralsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Referral»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/referrals/{referralId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationReferrals",
				"operationId": "consultationReferralsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "referralId",
						"in": "path",
						"description": "referralId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Referral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationReferrals",
				"operationId": "consultationReferralsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "referralId",
						"in": "path",
						"description": "referralId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/scribbles": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationScribbles",
				"operationId": "consultationScribblesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Scribble»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationScribbles",
				"operationId": "consultationScribblesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Scribble»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationScribbles",
				"operationId": "consultationScribblesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Scribble»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationScribbles",
				"operationId": "consultationScribblesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationScribbles",
				"operationId": "consultationScribblesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Scribble»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/scribbles/{scribbleId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationScribbles",
				"operationId": "consultationScribblesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "scribbleId",
						"in": "path",
						"description": "scribbleId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationScribbles",
				"operationId": "consultationScribblesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "scribbleId",
						"in": "path",
						"description": "scribbleId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/symptoms": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationSymptoms",
				"operationId": "consultationSymptomsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationSymptoms",
				"operationId": "consultationSymptomsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationSymptoms",
				"operationId": "consultationSymptomsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationSymptoms",
				"operationId": "consultationSymptomsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationSymptoms",
				"operationId": "consultationSymptomsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/symptoms/{symptomId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationSymptoms",
				"operationId": "consultationSymptomsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "symptomId",
						"in": "path",
						"description": "symptomId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Symptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationSymptoms",
				"operationId": "consultationSymptomsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "symptomId",
						"in": "path",
						"description": "symptomId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/takenMedicines": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTakenMedicines",
				"operationId": "consultationTakenMedicinesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TakenMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTakenMedicines",
				"operationId": "consultationTakenMedicinesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TakenMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTakenMedicines",
				"operationId": "consultationTakenMedicinesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TakenMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTakenMedicines",
				"operationId": "consultationTakenMedicinesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTakenMedicines",
				"operationId": "consultationTakenMedicinesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TakenMedicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/takenMedicines/{takenmedicineId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTakenMedicines",
				"operationId": "consultationTakenMedicinesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "takenmedicineId",
						"in": "path",
						"description": "takenmedicineId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TakenMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTakenMedicines",
				"operationId": "consultationTakenMedicinesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "takenmedicineId",
						"in": "path",
						"description": "takenmedicineId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/timeSlot": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTimeSlot",
				"operationId": "consultationTimeSlotUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTimeSlot",
				"operationId": "consultationTimeSlotUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTimeSlot",
				"operationId": "consultationTimeSlotUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTimeSlot",
				"operationId": "consultationTimeSlotUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTimeSlot",
				"operationId": "consultationTimeSlotUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/transcriptions": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTranscriptions",
				"operationId": "consultationTranscriptionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTranscriptions",
				"operationId": "consultationTranscriptionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTranscriptions",
				"operationId": "consultationTranscriptionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTranscriptions",
				"operationId": "consultationTranscriptionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTranscriptions",
				"operationId": "consultationTranscriptionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/transcriptions/{transcriptionId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTranscriptions",
				"operationId": "consultationTranscriptionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionId",
						"in": "path",
						"description": "transcriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationTranscriptions",
				"operationId": "consultationTranscriptionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionId",
						"in": "path",
						"description": "transcriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/visitType": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVisitType",
				"operationId": "consultationVisitTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VisitType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVisitType",
				"operationId": "consultationVisitTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VisitType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVisitType",
				"operationId": "consultationVisitTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VisitType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVisitType",
				"operationId": "consultationVisitTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVisitType",
				"operationId": "consultationVisitTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VisitType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/vitals": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVitals",
				"operationId": "consultationVitalsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Vital»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVitals",
				"operationId": "consultationVitalsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Vital»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVitals",
				"operationId": "consultationVitalsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Vital»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVitals",
				"operationId": "consultationVitalsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVitals",
				"operationId": "consultationVitalsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Vital»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consultations/{id}/vitals/{vitalId}": {
			"get": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVitals",
				"operationId": "consultationVitalsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "vitalId",
						"in": "path",
						"description": "vitalId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Vital»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consultation Entity"
				],
				"summary": "consultationVitals",
				"operationId": "consultationVitalsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "vitalId",
						"in": "path",
						"description": "vitalId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consumable/add": {
			"post": {
				"tags": [
					"consumable-controller"
				],
				"summary": "addConsumables",
				"operationId": "addConsumablesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "addConsumableDto",
					"description": "addConsumableDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AddConsumableDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consumable/bulk-add": {
			"post": {
				"tags": [
					"consumable-controller"
				],
				"summary": "addConsumables",
				"operationId": "addConsumablesUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "addConsumableDtos",
					"description": "addConsumableDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/AddConsumableDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consumable/get-consumable": {
			"get": {
				"tags": [
					"consumable-controller"
				],
				"summary": "getConsumableByCCID",
				"operationId": "getConsumableByCCIDUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicConsumableId",
					"in": "query",
					"description": "clinicConsumableId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsumablesForPos"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consumables": {
			"get": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "findAllConsumable",
				"operationId": "findAllConsumableUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "saveConsumable",
				"operationId": "saveConsumableUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Consumable"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consumables/search/findByIdIn": {
			"get": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "findByIdInConsumable",
				"operationId": "findByIdInConsumableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/consumables/{id}": {
			"get": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "findByIdConsumable",
				"operationId": "findByIdConsumableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "saveConsumable",
				"operationId": "saveConsumableUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Consumable"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "deleteConsumable",
				"operationId": "deleteConsumableUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "saveConsumable",
				"operationId": "saveConsumableUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Consumable"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consumables/{id}/clinicConsumables": {
			"get": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableClinicConsumables",
				"operationId": "consumableClinicConsumablesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableClinicConsumables",
				"operationId": "consumableClinicConsumablesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicConsumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableClinicConsumables",
				"operationId": "consumableClinicConsumablesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicConsumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableClinicConsumables",
				"operationId": "consumableClinicConsumablesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableClinicConsumables",
				"operationId": "consumableClinicConsumablesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ClinicConsumable»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consumables/{id}/clinicConsumables/{clinicconsumableId}": {
			"get": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableClinicConsumables",
				"operationId": "consumableClinicConsumablesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicconsumableId",
						"in": "path",
						"description": "clinicconsumableId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClinicConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableClinicConsumables",
				"operationId": "consumableClinicConsumablesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicconsumableId",
						"in": "path",
						"description": "clinicconsumableId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consumables/{id}/diagnosticTypeConsumables": {
			"get": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableDiagnosticTypeConsumables",
				"operationId": "consumableDiagnosticTypeConsumablesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableDiagnosticTypeConsumables",
				"operationId": "consumableDiagnosticTypeConsumablesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeConsumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableDiagnosticTypeConsumables",
				"operationId": "consumableDiagnosticTypeConsumablesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeConsumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableDiagnosticTypeConsumables",
				"operationId": "consumableDiagnosticTypeConsumablesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableDiagnosticTypeConsumables",
				"operationId": "consumableDiagnosticTypeConsumablesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeConsumable»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/consumables/{id}/diagnosticTypeConsumables/{diagnostictypeconsumableId}": {
			"get": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableDiagnosticTypeConsumables",
				"operationId": "consumableDiagnosticTypeConsumablesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeconsumableId",
						"in": "path",
						"description": "diagnostictypeconsumableId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Consumable Entity"
				],
				"summary": "consumableDiagnosticTypeConsumables",
				"operationId": "consumableDiagnosticTypeConsumablesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeconsumableId",
						"in": "path",
						"description": "diagnostictypeconsumableId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/save/utm-parameter": {
              "post": {
                  "tags": [
                      "utm-parameter-controller"
                  ],
                  "summary": "save utm parameter",
                  "operationId": "saveUtmParameterUsingPOST",
                  "consumes": [
                      "application/json"
                  ],
                  "produces": [
                      "*/*"
                  ],
                  "parameters": [{
                      "in": "body",
                      "name": "utmParameterDto",
                      "description": "utmParameterDto",
                      "required": true,
                      "schema": {
                          "$ref": "#/definitions/UtmParameterDto"
                      }
                  }],
                  "responses": {
                      "200": {
                          "description": "OK",
                          "schema": {
                              "$ref": "#/definitions/UtmParameterDetails"
                          }
                      },
                      "201": {
                          "description": "Created"
                      },
                      "401": {
                          "description": "Unauthorized"
                      },
                      "403": {
                          "description": "Forbidden"
                      },
                      "404": {
                          "description": "Not Found"
                      }
                  }
              }
          },
		"/api/v1/emr/create-consultation": {
			"post": {
				"tags": [
					"consultation-controller"
				],
				"summary": "createConsultation",
				"operationId": "createConsultationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "consultationOrderDto",
					"description": "consultationOrderDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ConsultationOrderDto"
					}
				},
				{
                    "name": "utmSource",
                    "in": "header",
                    "description": "utmSource",
                    "required": false,
                    "type": "string"
				},
                {
                    "name": "utmMedium",
                    "in": "header",
                    "description": "utmSource",
                    "required": false,
                    "type": "string"
				},
				{
                    "name": "utmCampaign",
                    "in": "header",
                    "description": "utmCource",
                    "required": false,
                    "type": "string"
				},
				{

				},
				{

				},
				{

				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationForOrder"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/vendor/consultation/scribble": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "findConsultationScribbleByVendorIdAndVendorOrderId",
				"operationId": "findConsultationScribbleByVendorIdAndVendorOrderIdUsingGet",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "vendorId",
					"in": "query",
					"description": "vendorId",
					"required": true,
					"type": "integer",
					"format": "int64"
				},{
					"name": "vendorOrderId",
					"in": "query",
					"description": "vendorOrderId",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/VendorConsultationScribbleDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/vendor/consultation/exits": {
			"get": {
				"tags": [
					"consultation-controller"
				],
				"summary": "vendorConsultationExists",
				"operationId": "vendorConsultationExistsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "vendorId",
					"in": "query",
					"description": "value",
					"required": true,
					"type": "integer",
					"format": "int64"
				},{
					"name": "vendorOrderId",
					"in": "query",
					"description": "value",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/create/diagnostic-report-value": {
			"post": {
				"tags": [
					"diagnostic-report-controller"
				],
				"summary": "createDiagnosticReportValue",
				"operationId": "createDiagnosticReportValueUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticReportValueDto",
					"description": "diagnosticReportValueDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticReportValueDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},"/api/v1/emr/create/diagnostic-report-value/v1": {
			"post": {
				"tags": [
					"diagnostic-report-controller"
				],
				"summary": "createDiagnosticReportValueV1",
				"operationId": "createDiagnosticReportValueV1UsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticReportValueDto",
					"description": "diagnosticReportValueDto",
					"required": true,
					"schema": {
					"type": "array",
                        "items": {
						"$ref": "#/definitions/DiagnosticReportValueDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/create/scribble": {
			"post": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "createScribbleFromTemplateConsumer",
				"operationId": "createScribbleFromTemplateConsumerUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "scribbleCreateDto",
					"description": "scribbleCreateDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ScribbleCreateDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "findAllDeclineReason",
				"operationId": "findAllDeclineReasonUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "saveDeclineReason",
				"operationId": "saveDeclineReasonUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DeclineReason"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons/search/findDistinctByReasonContaining": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "findDistinctByReasonContainingDeclineReason",
				"operationId": "findDistinctByReasonContainingDeclineReasonUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "reason",
						"in": "query",
						"description": "reason",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons/{id}": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "findByIdDeclineReason",
				"operationId": "findByIdDeclineReasonUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "saveDeclineReason",
				"operationId": "saveDeclineReasonUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DeclineReason"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "deleteDeclineReason",
				"operationId": "deleteDeclineReasonUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "saveDeclineReason",
				"operationId": "saveDeclineReasonUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DeclineReason"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons/{id}/diagnostics": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonDiagnostics",
				"operationId": "declineReasonDiagnosticsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonDiagnostics",
				"operationId": "declineReasonDiagnosticsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonDiagnostics",
				"operationId": "declineReasonDiagnosticsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonDiagnostics",
				"operationId": "declineReasonDiagnosticsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonDiagnostics",
				"operationId": "declineReasonDiagnosticsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons/{id}/diagnostics/{diagnosticId}": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonDiagnostics",
				"operationId": "declineReasonDiagnosticsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "path",
						"description": "diagnosticId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonDiagnostics",
				"operationId": "declineReasonDiagnosticsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "path",
						"description": "diagnosticId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons/{id}/prescriptions": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonPrescriptions",
				"operationId": "declineReasonPrescriptionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonPrescriptions",
				"operationId": "declineReasonPrescriptionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonPrescriptions",
				"operationId": "declineReasonPrescriptionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonPrescriptions",
				"operationId": "declineReasonPrescriptionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonPrescriptions",
				"operationId": "declineReasonPrescriptionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons/{id}/prescriptions/{prescriptionId}": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonPrescriptions",
				"operationId": "declineReasonPrescriptionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionId",
						"in": "path",
						"description": "prescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonPrescriptions",
				"operationId": "declineReasonPrescriptionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionId",
						"in": "path",
						"description": "prescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons/{id}/procedures": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonProcedures",
				"operationId": "declineReasonProceduresUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonProcedures",
				"operationId": "declineReasonProceduresUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonProcedures",
				"operationId": "declineReasonProceduresUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonProcedures",
				"operationId": "declineReasonProceduresUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonProcedures",
				"operationId": "declineReasonProceduresUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/declinereasons/{id}/procedures/{medicalprocedureId}": {
			"get": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonProcedures",
				"operationId": "declineReasonProceduresUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicalprocedureId",
						"in": "path",
						"description": "medicalprocedureId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DeclineReason Entity"
				],
				"summary": "declineReasonProcedures",
				"operationId": "declineReasonProceduresUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicalprocedureId",
						"in": "path",
						"description": "medicalprocedureId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/delete-prescription-description": {
			"delete": {
				"tags": [
					"prescription-controller"
				],
				"summary": "deletePrescriptionDescription",
				"operationId": "deletePrescriptionDescriptionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/departments": {
			"get": {
				"tags": [
					"Department Entity"
				],
				"summary": "findAllDepartment",
				"operationId": "findAllDepartmentUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Department»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Department Entity"
				],
				"summary": "saveDepartment",
				"operationId": "saveDepartmentUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Department"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Department»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/departments/{id}": {
			"get": {
				"tags": [
					"Department Entity"
				],
				"summary": "findByIdDepartment",
				"operationId": "findByIdDepartmentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Department»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Department Entity"
				],
				"summary": "saveDepartment",
				"operationId": "saveDepartmentUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Department"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Department»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Department Entity"
				],
				"summary": "deleteDepartment",
				"operationId": "deleteDepartmentUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Department Entity"
				],
				"summary": "saveDepartment",
				"operationId": "saveDepartmentUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Department"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Department»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/departments/{id}/diagnosticTypes": {
			"get": {
				"tags": [
					"Department Entity"
				],
				"summary": "departmentDiagnosticTypes",
				"operationId": "departmentDiagnosticTypesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Department Entity"
				],
				"summary": "departmentDiagnosticTypes",
				"operationId": "departmentDiagnosticTypesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Department Entity"
				],
				"summary": "departmentDiagnosticTypes",
				"operationId": "departmentDiagnosticTypesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Department Entity"
				],
				"summary": "departmentDiagnosticTypes",
				"operationId": "departmentDiagnosticTypesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Department Entity"
				],
				"summary": "departmentDiagnosticTypes",
				"operationId": "departmentDiagnosticTypesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/departments/{id}/diagnosticTypes/{diagnostictypeId}": {
			"get": {
				"tags": [
					"Department Entity"
				],
				"summary": "departmentDiagnosticTypes",
				"operationId": "departmentDiagnosticTypesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeId",
						"in": "path",
						"description": "diagnostictypeId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Department Entity"
				],
				"summary": "departmentDiagnosticTypes",
				"operationId": "departmentDiagnosticTypesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeId",
						"in": "path",
						"description": "diagnostictypeId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "findAllDiagnosis",
				"operationId": "findAllDiagnosisUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "saveDiagnosis",
				"operationId": "saveDiagnosisUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Diagnosis"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnosis»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "fetchDetailsThroughIdDiagnosis",
				"operationId": "fetchDetailsThroughIdDiagnosisUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis/search/findByConsultationId": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "findByConsultationIdDiagnosis",
				"operationId": "findByConsultationIdDiagnosisUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis/search/findByDoctorInClinicIn": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "findByDoctorInClinicInDiagnosis",
				"operationId": "findByDoctorInClinicInDiagnosisUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dateFrom",
						"in": "query",
						"description": "dateFrom",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dateTill",
						"in": "query",
						"description": "dateTill",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis/{id}": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "findByIdDiagnosis",
				"operationId": "findByIdDiagnosisUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "saveDiagnosis",
				"operationId": "saveDiagnosisUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Diagnosis"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnosis»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "deleteDiagnosis",
				"operationId": "deleteDiagnosisUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "saveDiagnosis",
				"operationId": "saveDiagnosisUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Diagnosis"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnosis»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis/{id}/consultation": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultation",
				"operationId": "diagnosisConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultation",
				"operationId": "diagnosisConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultation",
				"operationId": "diagnosisConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultation",
				"operationId": "diagnosisConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultation",
				"operationId": "diagnosisConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis/{id}/consultationReason": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultationReason",
				"operationId": "diagnosisConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultationReason",
				"operationId": "diagnosisConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultationReason",
				"operationId": "diagnosisConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultationReason",
				"operationId": "diagnosisConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisConsultationReason",
				"operationId": "diagnosisConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis/{id}/declineReason": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDeclineReason",
				"operationId": "diagnosisDeclineReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDeclineReason",
				"operationId": "diagnosisDeclineReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDeclineReason",
				"operationId": "diagnosisDeclineReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDeclineReason",
				"operationId": "diagnosisDeclineReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDeclineReason",
				"operationId": "diagnosisDeclineReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosis/{id}/diagnosisType": {
			"get": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDiagnosisType",
				"operationId": "diagnosisDiagnosisTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDiagnosisType",
				"operationId": "diagnosisDiagnosisTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDiagnosisType",
				"operationId": "diagnosisDiagnosisTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDiagnosisType",
				"operationId": "diagnosisDiagnosisTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnosis Entity"
				],
				"summary": "diagnosisDiagnosisType",
				"operationId": "diagnosisDiagnosisTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosisType-search": {
			"get": {
				"tags": [
					"ESDiagnosisType Entity"
				],
				"summary": "findAllESDiagnosisType",
				"operationId": "findAllESDiagnosisTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ESDiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ESDiagnosisType Entity"
				],
				"summary": "saveESDiagnosisType",
				"operationId": "saveESDiagnosisTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ESDiagnosisType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESDiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosisType-search/{id}": {
			"get": {
				"tags": [
					"ESDiagnosisType Entity"
				],
				"summary": "findByIdESDiagnosisType",
				"operationId": "findByIdESDiagnosisTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESDiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ESDiagnosisType Entity"
				],
				"summary": "saveESDiagnosisType",
				"operationId": "saveESDiagnosisTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESDiagnosisType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESDiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ESDiagnosisType Entity"
				],
				"summary": "deleteESDiagnosisType",
				"operationId": "deleteESDiagnosisTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ESDiagnosisType Entity"
				],
				"summary": "saveESDiagnosisType",
				"operationId": "saveESDiagnosisTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESDiagnosisType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESDiagnosisType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosistypes": {
			"get": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "findAllDiagnosisType",
				"operationId": "findAllDiagnosisTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "saveDiagnosisType",
				"operationId": "saveDiagnosisTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosisType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosistypes/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "findByIsActiveTrueDiagnosisType",
				"operationId": "findByIsActiveTrueDiagnosisTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosistypes/search/searchWithNativeQuery": {
			"get": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "searchWithNativeQueryDiagnosisType",
				"operationId": "searchWithNativeQueryDiagnosisTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptoms",
					"in": "query",
					"description": "symptoms",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosistypes/symptomsList": {
			"get": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInDiagnosisType",
				"operationId": "findInDiagnosisTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisTypes»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInDiagnosisType",
				"operationId": "findInDiagnosisTypeUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisTypes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInDiagnosisType",
				"operationId": "findInDiagnosisTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisTypes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInDiagnosisType",
				"operationId": "findInDiagnosisTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisTypes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInDiagnosisType",
				"operationId": "findInDiagnosisTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisTypes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInDiagnosisType",
				"operationId": "findInDiagnosisTypeUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisTypes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInDiagnosisType",
				"operationId": "findInDiagnosisTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosisTypes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosistypes/{id}": {
			"get": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "findByIdDiagnosisType",
				"operationId": "findByIdDiagnosisTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "saveDiagnosisType",
				"operationId": "saveDiagnosisTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosisType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "deleteDiagnosisType",
				"operationId": "deleteDiagnosisTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "saveDiagnosisType",
				"operationId": "saveDiagnosisTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosisType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosistypes/{id}/diagnoses": {
			"get": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "diagnosisTypeDiagnoses",
				"operationId": "diagnosisTypeDiagnosesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "diagnosisTypeDiagnoses",
				"operationId": "diagnosisTypeDiagnosesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "diagnosisTypeDiagnoses",
				"operationId": "diagnosisTypeDiagnosesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "diagnosisTypeDiagnoses",
				"operationId": "diagnosisTypeDiagnosesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "diagnosisTypeDiagnoses",
				"operationId": "diagnosisTypeDiagnosesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnosis»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosistypes/{id}/diagnoses/{diagnosisId}": {
			"get": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "diagnosisTypeDiagnoses",
				"operationId": "diagnosisTypeDiagnosesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosisId",
						"in": "path",
						"description": "diagnosisId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnosis»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosisType Entity"
				],
				"summary": "diagnosisTypeDiagnoses",
				"operationId": "diagnosisTypeDiagnosesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosisId",
						"in": "path",
						"description": "diagnosisId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic-package-recommendation": {
			"get": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "diagnosticPackagesRecommendation",
				"operationId": "diagnosticPackagesRecommendationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticType"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic-type/create": {
			"post": {
				"tags": [
					"bulk-upload-controller"
				],
				"summary": "postDiagnosticType",
				"operationId": "postDiagnosticTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticType",
					"description": "diagnosticType",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticTypeBulkUploadDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/post": {
			"post": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "postDiagnostic",
				"operationId": "postDiagnosticUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticDto",
					"description": "diagnosticDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostics»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/revamp/labs": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchDiagnosticLabsForClinics",
				"operationId": "fetchDiagnosticLabsForClinicsUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/revamp/labs-in-clinic": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchDiagnosticLabsForClinics",
				"operationId": "fetchDiagnosticLabsForClinicsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "testId",
						"in": "query",
						"description": "testId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/revamp/labs-in-clinic/v2": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchDiagnosticLabsForClinicsV2",
				"operationId": "fetchDiagnosticLabsForClinicsV2UsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "pincode",
						"in": "query",
						"description": "pincode",
						"required": true,
						"type": "string"
					},
					{
						"name": "testId",
						"in": "query",
						"description": "testId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/revamp/specimen-type/bulk": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "postInfoForSpecimenTypes",
				"operationId": "postInfoForSpecimenTypesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dtos",
					"description": "dtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/DiagnosticTypeSpecimenTypeDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/revamp/tests": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchDiagnosticTypesForClinics",
				"operationId": "fetchDiagnosticTypesForClinicsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/revamp/tests/book": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchDetailsForTestBooking",
				"operationId": "fetchDetailsForTestBookingUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "names",
						"in": "query",
						"description": "names",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "testId",
						"in": "query",
						"description": "testId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TestBookingDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticAndPatientHistories": {
			"get": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "findAllDiagnosticAndPatientHistory",
				"operationId": "findAllDiagnosticAndPatientHistoryUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "saveDiagnosticAndPatientHistory",
				"operationId": "saveDiagnosticAndPatientHistoryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticAndPatientHistory"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticAndPatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticAndPatientHistories/search/findThroughDiagnosticIds": {
			"get": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "findThroughDiagnosticIdsDiagnosticAndPatientHistory",
				"operationId": "findThroughDiagnosticIdsDiagnosticAndPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosticIds",
					"in": "query",
					"description": "diagnosticIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticAndPatientHistories/{id}": {
			"get": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "findByIdDiagnosticAndPatientHistory",
				"operationId": "findByIdDiagnosticAndPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticAndPatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "saveDiagnosticAndPatientHistory",
				"operationId": "saveDiagnosticAndPatientHistoryUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticAndPatientHistory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticAndPatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "deleteDiagnosticAndPatientHistory",
				"operationId": "deleteDiagnosticAndPatientHistoryUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "saveDiagnosticAndPatientHistory",
				"operationId": "saveDiagnosticAndPatientHistoryUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticAndPatientHistory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticAndPatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticAndPatientHistories/{id}/diagnostic": {
			"get": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryDiagnostic",
				"operationId": "diagnosticAndPatientHistoryDiagnosticUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryDiagnostic",
				"operationId": "diagnosticAndPatientHistoryDiagnosticUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryDiagnostic",
				"operationId": "diagnosticAndPatientHistoryDiagnosticUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryDiagnostic",
				"operationId": "diagnosticAndPatientHistoryDiagnosticUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryDiagnostic",
				"operationId": "diagnosticAndPatientHistoryDiagnosticUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticAndPatientHistories/{id}/patientHistory": {
			"get": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryPatientHistory",
				"operationId": "diagnosticAndPatientHistoryPatientHistoryUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryPatientHistory",
				"operationId": "diagnosticAndPatientHistoryPatientHistoryUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryPatientHistory",
				"operationId": "diagnosticAndPatientHistoryPatientHistoryUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryPatientHistory",
				"operationId": "diagnosticAndPatientHistoryPatientHistoryUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticAndPatientHistory Entity"
				],
				"summary": "diagnosticAndPatientHistoryPatientHistory",
				"operationId": "diagnosticAndPatientHistoryPatientHistoryUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticLabsAndZipcode": {
			"get": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "findAllDiagnosticLabsAndZipcode",
				"operationId": "findAllDiagnosticLabsAndZipcodeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticLabsAndZipcode»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "saveDiagnosticLabsAndZipcode",
				"operationId": "saveDiagnosticLabsAndZipcodeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticLabsAndZipcode"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLabsAndZipcode»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticLabsAndZipcode/search/findByDiagnosticLabIdAndZipcodeAndIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "findByDiagnosticLabIdAndZipcodeAndIsActiveTrueDiagnosticLabsAndZipcode",
				"operationId": "findByDiagnosticLabIdAndZipcodeAndIsActiveTrueDiagnosticLabsAndZipcodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticLab",
						"in": "query",
						"description": "diagnosticLab",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "zipcode",
						"in": "query",
						"description": "zipcode",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticLabsAndZipcode»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticLabsAndZipcode/{id}": {
			"get": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "findByIdDiagnosticLabsAndZipcode",
				"operationId": "findByIdDiagnosticLabsAndZipcodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLabsAndZipcode»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "saveDiagnosticLabsAndZipcode",
				"operationId": "saveDiagnosticLabsAndZipcodeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticLabsAndZipcode"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLabsAndZipcode»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "deleteDiagnosticLabsAndZipcode",
				"operationId": "deleteDiagnosticLabsAndZipcodeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "saveDiagnosticLabsAndZipcode",
				"operationId": "saveDiagnosticLabsAndZipcodeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticLabsAndZipcode"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLabsAndZipcode»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticLabsAndZipcode/{id}/diagnosticLab": {
			"get": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "diagnosticLabsAndZipcodeDiagnosticLab",
				"operationId": "diagnosticLabsAndZipcodeDiagnosticLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "diagnosticLabsAndZipcodeDiagnosticLab",
				"operationId": "diagnosticLabsAndZipcodeDiagnosticLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "diagnosticLabsAndZipcodeDiagnosticLab",
				"operationId": "diagnosticLabsAndZipcodeDiagnosticLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "diagnosticLabsAndZipcodeDiagnosticLab",
				"operationId": "diagnosticLabsAndZipcodeDiagnosticLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticLabsAndZipcode Entity"
				],
				"summary": "diagnosticLabsAndZipcodeDiagnosticLab",
				"operationId": "diagnosticLabsAndZipcodeDiagnosticLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticReportValue": {
			"get": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "findAllDiagnosticReportValue",
				"operationId": "findAllDiagnosticReportValueUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "saveDiagnosticReportValue",
				"operationId": "saveDiagnosticReportValueUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticReportValue"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticReportValue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticReportValue/{id}": {
			"get": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "findByIdDiagnosticReportValue",
				"operationId": "findByIdDiagnosticReportValueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticReportValue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "saveDiagnosticReportValue",
				"operationId": "saveDiagnosticReportValueUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticReportValue"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticReportValue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "deleteDiagnosticReportValue",
				"operationId": "deleteDiagnosticReportValueUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "saveDiagnosticReportValue",
				"operationId": "saveDiagnosticReportValueUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticReportValue"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticReportValue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticReportValue/{id}/diagnostic": {
			"get": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValueDiagnostic",
				"operationId": "diagnosticReportValueDiagnosticUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValueDiagnostic",
				"operationId": "diagnosticReportValueDiagnosticUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValueDiagnostic",
				"operationId": "diagnosticReportValueDiagnosticUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValueDiagnostic",
				"operationId": "diagnosticReportValueDiagnosticUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValueDiagnostic",
				"operationId": "diagnosticReportValueDiagnosticUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticReportValue/{id}/patient": {
			"get": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValuePatient",
				"operationId": "diagnosticReportValuePatientUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValuePatient",
				"operationId": "diagnosticReportValuePatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValuePatient",
				"operationId": "diagnosticReportValuePatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValuePatient",
				"operationId": "diagnosticReportValuePatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticReportValue Entity"
				],
				"summary": "diagnosticReportValuePatient",
				"operationId": "diagnosticReportValuePatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticStatusFlows": {
			"get": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "findAllDiagnosticStatusFlow",
				"operationId": "findAllDiagnosticStatusFlowUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticStatusFlow»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "saveDiagnosticStatusFlow",
				"operationId": "saveDiagnosticStatusFlowUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticStatusFlow"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticStatusFlow»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticStatusFlows/search/fetchDiagnosticStatusFlowsThroughDiagnosticId": {
			"get": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "fetchDiagnosticStatusFlowsThroughDiagnosticIdDiagnosticStatusFlow",
				"operationId": "fetchDiagnosticStatusFlowsThroughDiagnosticIdDiagnosticStatusFlowUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosticId",
					"in": "query",
					"description": "diagnosticId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticStatusFlow»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticStatusFlows/search/findByDiagnosticId": {
			"get": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "findByDiagnosticIdDiagnosticStatusFlow",
				"operationId": "findByDiagnosticIdDiagnosticStatusFlowUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "query",
						"description": "diagnosticId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticStatusFlow»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticStatusFlows/{id}": {
			"get": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "findByIdDiagnosticStatusFlow",
				"operationId": "findByIdDiagnosticStatusFlowUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticStatusFlow»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "saveDiagnosticStatusFlow",
				"operationId": "saveDiagnosticStatusFlowUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticStatusFlow"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticStatusFlow»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "deleteDiagnosticStatusFlow",
				"operationId": "deleteDiagnosticStatusFlowUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "saveDiagnosticStatusFlow",
				"operationId": "saveDiagnosticStatusFlowUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticStatusFlow"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticStatusFlow»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticStatusFlows/{id}/diagnostic": {
			"get": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "diagnosticStatusFlowDiagnostic",
				"operationId": "diagnosticStatusFlowDiagnosticUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "diagnosticStatusFlowDiagnostic",
				"operationId": "diagnosticStatusFlowDiagnosticUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "diagnosticStatusFlowDiagnostic",
				"operationId": "diagnosticStatusFlowDiagnosticUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "diagnosticStatusFlowDiagnostic",
				"operationId": "diagnosticStatusFlowDiagnosticUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticStatusFlow Entity"
				],
				"summary": "diagnosticStatusFlowDiagnostic",
				"operationId": "diagnosticStatusFlowDiagnosticUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticType-search": {
			"get": {
				"tags": [
					"ESDiagnosticType Entity"
				],
				"summary": "findAllESDiagnosticType",
				"operationId": "findAllESDiagnosticTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ESDiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ESDiagnosticType Entity"
				],
				"summary": "saveESDiagnosticType",
				"operationId": "saveESDiagnosticTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ESDiagnosticType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESDiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticType-search/{id}": {
			"get": {
				"tags": [
					"ESDiagnosticType Entity"
				],
				"summary": "findByIdESDiagnosticType",
				"operationId": "findByIdESDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESDiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ESDiagnosticType Entity"
				],
				"summary": "saveESDiagnosticType",
				"operationId": "saveESDiagnosticTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESDiagnosticType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESDiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ESDiagnosticType Entity"
				],
				"summary": "deleteESDiagnosticType",
				"operationId": "deleteESDiagnosticTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ESDiagnosticType Entity"
				],
				"summary": "saveESDiagnosticType",
				"operationId": "saveESDiagnosticTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESDiagnosticType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESDiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticTypeConsumableRepository": {
			"get": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "findAllDiagnosticTypeConsumable",
				"operationId": "findAllDiagnosticTypeConsumableUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "saveDiagnosticTypeConsumable",
				"operationId": "saveDiagnosticTypeConsumableUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticTypeConsumable"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeConsumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticTypeConsumableRepository/search/findByIdIn": {
			"get": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "findByIdInDiagnosticTypeConsumable",
				"operationId": "findByIdInDiagnosticTypeConsumableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticTypeConsumableRepository/{id}": {
			"get": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "findByIdDiagnosticTypeConsumable",
				"operationId": "findByIdDiagnosticTypeConsumableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeConsumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "saveDiagnosticTypeConsumable",
				"operationId": "saveDiagnosticTypeConsumableUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeConsumable"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeConsumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "deleteDiagnosticTypeConsumable",
				"operationId": "deleteDiagnosticTypeConsumableUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "saveDiagnosticTypeConsumable",
				"operationId": "saveDiagnosticTypeConsumableUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeConsumable"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeConsumable»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticTypeConsumableRepository/{id}/consumable": {
			"get": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableConsumable",
				"operationId": "diagnosticTypeConsumableConsumableUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableConsumable",
				"operationId": "diagnosticTypeConsumableConsumableUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableConsumable",
				"operationId": "diagnosticTypeConsumableConsumableUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableConsumable",
				"operationId": "diagnosticTypeConsumableConsumableUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableConsumable",
				"operationId": "diagnosticTypeConsumableConsumableUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consumable»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticTypeConsumableRepository/{id}/diagnosticType": {
			"get": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableDiagnosticType",
				"operationId": "diagnosticTypeConsumableDiagnosticTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableDiagnosticType",
				"operationId": "diagnosticTypeConsumableDiagnosticTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableDiagnosticType",
				"operationId": "diagnosticTypeConsumableDiagnosticTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableDiagnosticType",
				"operationId": "diagnosticTypeConsumableDiagnosticTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeConsumable Entity"
				],
				"summary": "diagnosticTypeConsumableDiagnosticType",
				"operationId": "diagnosticTypeConsumableDiagnosticTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticlabs": {
			"get": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "findAllDiagnosticLab",
				"operationId": "findAllDiagnosticLabUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "saveDiagnosticLab",
				"operationId": "saveDiagnosticLabUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticLab"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticlabs/search/fetchActiveLabs": {
			"get": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "fetchActiveLabsDiagnosticLab",
				"operationId": "fetchActiveLabsDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticlabs/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "findByIsActiveTrueDiagnosticLab",
				"operationId": "findByIsActiveTrueDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticlabs/search/findByNameContaining": {
			"get": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "findByNameContainingDiagnosticLab",
				"operationId": "findByNameContainingDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticlabs/search/findByNameContainingAndIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "findByNameContainingAndIsActiveTrueDiagnosticLab",
				"operationId": "findByNameContainingAndIsActiveTrueDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticlabs/search/findDistinctByDiagnosticTypeInLabsDiagnosticsIdIn": {
			"get": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "fetchLabsByDiagnostic",
				"operationId": "fetchLabsByDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosticIds",
					"in": "query",
					"description": "diagnosticIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticLabsForTests"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnosticlabs/{id}": {
			"get": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "findByIdDiagnosticLab",
				"operationId": "findByIdDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "saveDiagnosticLab",
				"operationId": "saveDiagnosticLabUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticLab"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "deleteDiagnosticLab",
				"operationId": "deleteDiagnosticLabUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticLab Entity"
				],
				"summary": "saveDiagnosticLab",
				"operationId": "saveDiagnosticLabUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticLab"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "findAllDiagnostic",
				"operationId": "findAllDiagnosticUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "saveDiagnostic",
				"operationId": "saveDiagnosticUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Diagnostic"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "fetchDetailsThroughIdDiagnostic",
				"operationId": "fetchDetailsThroughIdDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/search/fetchInvoicedDiagnostic": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "fetchInvoicedDiagnosticDiagnostic",
				"operationId": "fetchInvoicedDiagnosticDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/search/findByConsultationId": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "findByConsultationIdDiagnostic",
				"operationId": "findByConsultationIdDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/search/findByConsultationIdAndConsultationAppointmentTimeGreaterThan": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "findByConsultationIdAndConsultationAppointmentTimeGreaterThanDiagnostic",
				"operationId": "findByConsultationIdAndConsultationAppointmentTimeGreaterThanDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/search/findByConsultationIdAndDeferredTrueAndConsultationAppointmentTimeGreaterThan": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "findByConsultationIdAndDeferredTrueAndConsultationAppointmentTimeGreaterThanDiagnostic",
				"operationId": "findByConsultationIdAndDeferredTrueAndConsultationAppointmentTimeGreaterThanDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/search/findByConsultationPatientIdInAndStateAndLastModifiedBetween": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "findByConsultationPatientIdInAndStateAndLastModifiedBetweenDiagnostic",
				"operationId": "findByConsultationPatientIdInAndStateAndLastModifiedBetweenDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": false,
						"type": "string",
						"enum": [
							"OPEN",
							"COLLECTED",
							"CLINIC_DEPOSIT",
							"ACKNOWLEADGE",
							"CENTER_DEPOSITED",
							"CENTER_AKNOWLEADGE",
							"REPORT",
							"DONE"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/search/findByDoctorInClinicIn": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "findByDoctorInClinicInDiagnostic",
				"operationId": "findByDoctorInClinicInDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dateFrom",
						"in": "query",
						"description": "dateFrom",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dateTill",
						"in": "query",
						"description": "dateTill",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/search/findDiagnosticByConsultationId": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "findDiagnosticByConsultationIdDiagnostic",
				"operationId": "findDiagnosticByConsultationIdDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "findByIdDiagnostic",
				"operationId": "findByIdDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "saveDiagnostic",
				"operationId": "saveDiagnosticUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Diagnostic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "deleteDiagnostic",
				"operationId": "deleteDiagnosticUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "saveDiagnostic",
				"operationId": "saveDiagnosticUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Diagnostic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/consultation": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultation",
				"operationId": "diagnosticConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultation",
				"operationId": "diagnosticConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultation",
				"operationId": "diagnosticConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultation",
				"operationId": "diagnosticConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultation",
				"operationId": "diagnosticConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/consultationReason": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultationReason",
				"operationId": "diagnosticConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultationReason",
				"operationId": "diagnosticConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultationReason",
				"operationId": "diagnosticConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultationReason",
				"operationId": "diagnosticConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticConsultationReason",
				"operationId": "diagnosticConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/declineReason": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDeclineReason",
				"operationId": "diagnosticDeclineReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDeclineReason",
				"operationId": "diagnosticDeclineReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDeclineReason",
				"operationId": "diagnosticDeclineReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDeclineReason",
				"operationId": "diagnosticDeclineReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDeclineReason",
				"operationId": "diagnosticDeclineReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticReportValues": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticReportValues",
				"operationId": "diagnosticDiagnosticReportValuesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticReportValues",
				"operationId": "diagnosticDiagnosticReportValuesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticReportValues",
				"operationId": "diagnosticDiagnosticReportValuesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticReportValues",
				"operationId": "diagnosticDiagnosticReportValuesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticReportValues",
				"operationId": "diagnosticDiagnosticReportValuesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticReportValues/{diagnosticreportvalueId}": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticReportValues",
				"operationId": "diagnosticDiagnosticReportValuesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticreportvalueId",
						"in": "path",
						"description": "diagnosticreportvalueId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticReportValue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticReportValues",
				"operationId": "diagnosticDiagnosticReportValuesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticreportvalueId",
						"in": "path",
						"description": "diagnosticreportvalueId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticStatusFlows": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticStatusFlows",
				"operationId": "diagnosticDiagnosticStatusFlowsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticStatusFlow»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticStatusFlows",
				"operationId": "diagnosticDiagnosticStatusFlowsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticStatusFlow»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticStatusFlows",
				"operationId": "diagnosticDiagnosticStatusFlowsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticStatusFlow»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticStatusFlows",
				"operationId": "diagnosticDiagnosticStatusFlowsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticStatusFlows",
				"operationId": "diagnosticDiagnosticStatusFlowsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticStatusFlow»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticStatusFlows/{diagnosticstatusflowId}": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticStatusFlows",
				"operationId": "diagnosticDiagnosticStatusFlowsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticstatusflowId",
						"in": "path",
						"description": "diagnosticstatusflowId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticStatusFlow»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticStatusFlows",
				"operationId": "diagnosticDiagnosticStatusFlowsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticstatusflowId",
						"in": "path",
						"description": "diagnosticstatusflowId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticType": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticType",
				"operationId": "diagnosticDiagnosticTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticType",
				"operationId": "diagnosticDiagnosticTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticType",
				"operationId": "diagnosticDiagnosticTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticType",
				"operationId": "diagnosticDiagnosticTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticType",
				"operationId": "diagnosticDiagnosticTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticTypeInLab": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeInLab",
				"operationId": "diagnosticDiagnosticTypeInLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeInLab",
				"operationId": "diagnosticDiagnosticTypeInLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeInLab",
				"operationId": "diagnosticDiagnosticTypeInLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeInLab",
				"operationId": "diagnosticDiagnosticTypeInLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeInLab",
				"operationId": "diagnosticDiagnosticTypeInLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticTypeResults": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeResults",
				"operationId": "diagnosticDiagnosticTypeResultsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeResults",
				"operationId": "diagnosticDiagnosticTypeResultsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeResults",
				"operationId": "diagnosticDiagnosticTypeResultsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeResults",
				"operationId": "diagnosticDiagnosticTypeResultsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeResults",
				"operationId": "diagnosticDiagnosticTypeResultsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticTypeResults/{diagnostictyperesultId}": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeResults",
				"operationId": "diagnosticDiagnosticTypeResultsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictyperesultId",
						"in": "path",
						"description": "diagnostictyperesultId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeResult»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticTypeResults",
				"operationId": "diagnosticDiagnosticTypeResultsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictyperesultId",
						"in": "path",
						"description": "diagnostictyperesultId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticsAndPatientHistories": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticsAndPatientHistories",
				"operationId": "diagnosticDiagnosticsAndPatientHistoriesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticsAndPatientHistories",
				"operationId": "diagnosticDiagnosticsAndPatientHistoriesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticsAndPatientHistories",
				"operationId": "diagnosticDiagnosticsAndPatientHistoriesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticsAndPatientHistories",
				"operationId": "diagnosticDiagnosticsAndPatientHistoriesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticsAndPatientHistories",
				"operationId": "diagnosticDiagnosticsAndPatientHistoriesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostics/{id}/diagnosticsAndPatientHistories/{diagnosticandpatienthistoryId}": {
			"get": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticsAndPatientHistories",
				"operationId": "diagnosticDiagnosticsAndPatientHistoriesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticandpatienthistoryId",
						"in": "path",
						"description": "diagnosticandpatienthistoryId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticAndPatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Diagnostic Entity"
				],
				"summary": "diagnosticDiagnosticsAndPatientHistories",
				"operationId": "diagnosticDiagnosticsAndPatientHistoriesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticandpatienthistoryId",
						"in": "path",
						"description": "diagnosticandpatienthistoryId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeitems": {
			"get": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "findAllDiagnosticTypeItem",
				"operationId": "findAllDiagnosticTypeItemUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeItem»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "saveDiagnosticTypeItem",
				"operationId": "saveDiagnosticTypeItemUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticTypeItem"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeItem»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeitems/{id}": {
			"get": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "findByIdDiagnosticTypeItem",
				"operationId": "findByIdDiagnosticTypeItemUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeItem»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "saveDiagnosticTypeItem",
				"operationId": "saveDiagnosticTypeItemUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeItem"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeItem»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "deleteDiagnosticTypeItem",
				"operationId": "deleteDiagnosticTypeItemUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "saveDiagnosticTypeItem",
				"operationId": "saveDiagnosticTypeItemUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeItem"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeItem»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeitems/{id}/diagnosticType": {
			"get": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticType",
				"operationId": "diagnosticTypeItemDiagnosticTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticType",
				"operationId": "diagnosticTypeItemDiagnosticTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticType",
				"operationId": "diagnosticTypeItemDiagnosticTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticType",
				"operationId": "diagnosticTypeItemDiagnosticTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticType",
				"operationId": "diagnosticTypeItemDiagnosticTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeitems/{id}/diagnosticTypeResults": {
			"get": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticTypeResults",
				"operationId": "diagnosticTypeItemDiagnosticTypeResultsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticTypeResults",
				"operationId": "diagnosticTypeItemDiagnosticTypeResultsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticTypeResults",
				"operationId": "diagnosticTypeItemDiagnosticTypeResultsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticTypeResults",
				"operationId": "diagnosticTypeItemDiagnosticTypeResultsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticTypeResults",
				"operationId": "diagnosticTypeItemDiagnosticTypeResultsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeitems/{id}/diagnosticTypeResults/{diagnostictyperesultId}": {
			"get": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticTypeResults",
				"operationId": "diagnosticTypeItemDiagnosticTypeResultsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictyperesultId",
						"in": "path",
						"description": "diagnostictyperesultId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeResult»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeItem Entity"
				],
				"summary": "diagnosticTypeItemDiagnosticTypeResults",
				"operationId": "diagnosticTypeItemDiagnosticTypeResultsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictyperesultId",
						"in": "path",
						"description": "diagnostictyperesultId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeprecautions": {
			"get": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "findAllDiagnosticTypePrecaution",
				"operationId": "findAllDiagnosticTypePrecautionUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "saveDiagnosticTypePrecaution",
				"operationId": "saveDiagnosticTypePrecautionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticTypePrecaution"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypePrecaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeprecautions/search/findByDiagnosticTypeId": {
			"get": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "findByDiagnosticTypeIdDiagnosticTypePrecaution",
				"operationId": "findByDiagnosticTypeIdDiagnosticTypePrecautionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosticTypeId",
					"in": "query",
					"description": "diagnosticTypeId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeprecautions/{id}": {
			"get": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "findByIdDiagnosticTypePrecaution",
				"operationId": "findByIdDiagnosticTypePrecautionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypePrecaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "saveDiagnosticTypePrecaution",
				"operationId": "saveDiagnosticTypePrecautionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypePrecaution"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypePrecaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "deleteDiagnosticTypePrecaution",
				"operationId": "deleteDiagnosticTypePrecautionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "saveDiagnosticTypePrecaution",
				"operationId": "saveDiagnosticTypePrecautionUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypePrecaution"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypePrecaution»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeprecautions/{id}/diagnosticType": {
			"get": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionDiagnosticType",
				"operationId": "diagnosticTypePrecautionDiagnosticTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionDiagnosticType",
				"operationId": "diagnosticTypePrecautionDiagnosticTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionDiagnosticType",
				"operationId": "diagnosticTypePrecautionDiagnosticTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionDiagnosticType",
				"operationId": "diagnosticTypePrecautionDiagnosticTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionDiagnosticType",
				"operationId": "diagnosticTypePrecautionDiagnosticTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypeprecautions/{id}/precaution": {
			"get": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionPrecaution",
				"operationId": "diagnosticTypePrecautionPrecautionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Precaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionPrecaution",
				"operationId": "diagnosticTypePrecautionPrecautionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Precaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionPrecaution",
				"operationId": "diagnosticTypePrecautionPrecautionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Precaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionPrecaution",
				"operationId": "diagnosticTypePrecautionPrecautionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypePrecaution Entity"
				],
				"summary": "diagnosticTypePrecautionPrecaution",
				"operationId": "diagnosticTypePrecautionPrecautionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Precaution»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictyperesults": {
			"get": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "findAllDiagnosticTypeResult",
				"operationId": "findAllDiagnosticTypeResultUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeResult»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "saveDiagnosticTypeResult",
				"operationId": "saveDiagnosticTypeResultUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticTypeResult"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeResult»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictyperesults/{id}": {
			"get": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "findByIdDiagnosticTypeResult",
				"operationId": "findByIdDiagnosticTypeResultUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeResult»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "saveDiagnosticTypeResult",
				"operationId": "saveDiagnosticTypeResultUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeResult"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeResult»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "deleteDiagnosticTypeResult",
				"operationId": "deleteDiagnosticTypeResultUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "saveDiagnosticTypeResult",
				"operationId": "saveDiagnosticTypeResultUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeResult"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeResult»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictyperesults/{id}/diagnostic": {
			"get": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnostic",
				"operationId": "diagnosticTypeResultDiagnosticUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnostic",
				"operationId": "diagnosticTypeResultDiagnosticUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnostic",
				"operationId": "diagnosticTypeResultDiagnosticUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnostic",
				"operationId": "diagnosticTypeResultDiagnosticUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnostic",
				"operationId": "diagnosticTypeResultDiagnosticUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictyperesults/{id}/diagnosticTypeItem": {
			"get": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnosticTypeItem",
				"operationId": "diagnosticTypeResultDiagnosticTypeItemUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeItem»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnosticTypeItem",
				"operationId": "diagnosticTypeResultDiagnosticTypeItemUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeItem»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnosticTypeItem",
				"operationId": "diagnosticTypeResultDiagnosticTypeItemUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeItem»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnosticTypeItem",
				"operationId": "diagnosticTypeResultDiagnosticTypeItemUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeResult Entity"
				],
				"summary": "diagnosticTypeResultDiagnosticTypeItem",
				"operationId": "diagnosticTypeResultDiagnosticTypeItemUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeItem»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findAllDiagnosticType",
				"operationId": "findAllDiagnosticTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "saveDiagnosticType",
				"operationId": "saveDiagnosticTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/fetchForSearch": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "fetchForSearchDiagnosticType",
				"operationId": "fetchForSearchDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/fetchTestsForOrder": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "fetchTestsForOrderDiagnosticType",
				"operationId": "fetchTestsForOrderDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByDiagnosticTypeInLabsDiagnosticLabIdAndDiagnosticTypeStatusAndNameContaining": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByDiagnosticTypeInLabsDiagnosticLabIdAndDiagnosticTypeStatusAndNameContainingDiagnosticType",
				"operationId": "findByDiagnosticTypeInLabsDiagnosticLabIdAndDiagnosticTypeStatusAndNameContainingDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByDiagnosticTypeInLabsDiagnosticLabIdAndDiagnosticTypeStatusAndNameContainingAndIsActive": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByDiagnosticTypeInLabsDiagnosticLabIdAndDiagnosticTypeStatusAndNameContainingAndIsActiveDiagnosticType",
				"operationId": "findByDiagnosticTypeInLabsDiagnosticLabIdAndDiagnosticTypeStatusAndNameContainingAndIsActiveDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isActive",
						"in": "query",
						"description": "isActive",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByDiagnosticTypeInLabsDiagnosticLabIdAndNameContaining": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByDiagnosticTypeInLabsDiagnosticLabIdAndNameContainingDiagnosticType",
				"operationId": "findByDiagnosticTypeInLabsDiagnosticLabIdAndNameContainingDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByDiagnosticTypeInLabsDiagnosticLabIdAndNameContainingAndIsActive": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByDiagnosticTypeInLabsDiagnosticLabIdAndNameContainingAndIsActiveDiagnosticType",
				"operationId": "findByDiagnosticTypeInLabsDiagnosticLabIdAndNameContainingAndIsActiveDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isActive",
						"in": "query",
						"description": "isActive",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByDiagnosticTypeStatusAndNameContaining": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByDiagnosticTypeStatusAndNameContainingDiagnosticType",
				"operationId": "findByDiagnosticTypeStatusAndNameContainingDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByDiagnosticTypeStatusAndNameContainingAndIsActive": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByDiagnosticTypeStatusAndNameContainingAndIsActiveDiagnosticType",
				"operationId": "findByDiagnosticTypeStatusAndNameContainingAndIsActiveDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "isActive",
						"in": "query",
						"description": "isActive",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByIdInAndIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByIdInAndIsActiveTrueDiagnosticType",
				"operationId": "findByIdInAndIsActiveTrueDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypesForTranscription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByIsActiveIsNullOrIsActiveAndDiagnosticTypeStatusIn": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByIsActiveIsNullOrIsActiveAndDiagnosticTypeStatusInDiagnosticType",
				"operationId": "findByIsActiveIsNullOrIsActiveAndDiagnosticTypeStatusInDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "active",
						"in": "query",
						"description": "active",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "statuses",
						"in": "query",
						"description": "statuses",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"PATHOLOGY",
								"RADIOLOGY"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByIsActiveTrueDiagnosticType",
				"operationId": "findByIsActiveTrueDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByIsActiveTrueAndIdNotIn": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByIsActiveTrueAndIdNotInDiagnosticType",
				"operationId": "findByIsActiveTrueAndIdNotInDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByIsActiveTrueAndIsComboTrueAndPopularityGreaterThan": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByIsActiveTrueAndIsComboTrueAndPopularityGreaterThanDiagnosticType",
				"operationId": "findByIsActiveTrueAndIsComboTrueAndPopularityGreaterThanDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "popularity",
						"in": "query",
						"description": "popularity",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByNameContaining": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByNameContainingDiagnosticType",
				"operationId": "findByNameContainingDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByNameContainingAndDiagnosticTypeInLabsNotNull": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByNameContainingAndDiagnosticTypeInLabsNotNullDiagnosticType",
				"operationId": "findByNameContainingAndDiagnosticTypeInLabsNotNullDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByNameContainingAndDiagnosticTypeStatus": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByNameContainingAndDiagnosticTypeStatusDiagnosticType",
				"operationId": "findByNameContainingAndDiagnosticTypeStatusDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findByNameContainingOrAbbreviationContainingOrAliasContaining": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByNameContainingOrAbbreviationContainingOrAliasContainingDiagnosticType",
				"operationId": "findByNameContainingOrAbbreviationContainingOrAliasContainingDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findDistinctByIsActiveTrueAndChildrenNotNull": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findDistinctByIsActiveTrueAndChildrenNotNullDiagnosticType",
				"operationId": "findDistinctByIsActiveTrueAndChildrenNotNullDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findDistinctByNameContainingOrAbbreviationContainingAndIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findDistinctByNameContainingOrAbbreviationContainingAndIsActiveTrueDiagnosticType",
				"operationId": "findDistinctByNameContainingOrAbbreviationContainingAndIsActiveTrueDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/search/findDistinctByNameContainingOrAbbreviationContainingOrAliasContainingAndIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findDistinctByNameContainingOrAbbreviationContainingOrAliasContainingAndIsActiveTrueDiagnosticType",
				"operationId": "findDistinctByNameContainingOrAbbreviationContainingOrAliasContainingAndIsActiveTrueDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "findByIdDiagnosticType",
				"operationId": "findByIdDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "saveDiagnosticType",
				"operationId": "saveDiagnosticTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "deleteDiagnosticType",
				"operationId": "deleteDiagnosticTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "saveDiagnosticType",
				"operationId": "saveDiagnosticTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/childStructures": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildStructures",
				"operationId": "diagnosticTypeChildStructuresUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildStructures",
				"operationId": "diagnosticTypeChildStructuresUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildStructures",
				"operationId": "diagnosticTypeChildStructuresUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildStructures",
				"operationId": "diagnosticTypeChildStructuresUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildStructures",
				"operationId": "diagnosticTypeChildStructuresUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/childStructures/{diagnostictypestructureId}": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildStructures",
				"operationId": "diagnosticTypeChildStructuresUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypestructureId",
						"in": "path",
						"description": "diagnostictypestructureId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeStructure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildStructures",
				"operationId": "diagnosticTypeChildStructuresUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypestructureId",
						"in": "path",
						"description": "diagnostictypestructureId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/children": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildren",
				"operationId": "diagnosticTypeChildrenUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildren",
				"operationId": "diagnosticTypeChildrenUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildren",
				"operationId": "diagnosticTypeChildrenUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildren",
				"operationId": "diagnosticTypeChildrenUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildren",
				"operationId": "diagnosticTypeChildrenUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/children/{diagnostictypeId}": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildren",
				"operationId": "diagnosticTypeChildrenUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeId",
						"in": "path",
						"description": "diagnostictypeId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeChildren",
				"operationId": "diagnosticTypeChildrenUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeId",
						"in": "path",
						"description": "diagnostictypeId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/department": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDepartment",
				"operationId": "diagnosticTypeDepartmentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Department»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDepartment",
				"operationId": "diagnosticTypeDepartmentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Department»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDepartment",
				"operationId": "diagnosticTypeDepartmentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Department»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDepartment",
				"operationId": "diagnosticTypeDepartmentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDepartment",
				"operationId": "diagnosticTypeDepartmentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Department»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/diagnosticTypeInLabs": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeInLabs",
				"operationId": "diagnosticTypeDiagnosticTypeInLabsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeInLabs",
				"operationId": "diagnosticTypeDiagnosticTypeInLabsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeInLabs",
				"operationId": "diagnosticTypeDiagnosticTypeInLabsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeInLabs",
				"operationId": "diagnosticTypeDiagnosticTypeInLabsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeInLabs",
				"operationId": "diagnosticTypeDiagnosticTypeInLabsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/diagnosticTypeInLabs/{diagnostictypeinlabId}": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeInLabs",
				"operationId": "diagnosticTypeDiagnosticTypeInLabsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeinlabId",
						"in": "path",
						"description": "diagnostictypeinlabId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeInLabs",
				"operationId": "diagnosticTypeDiagnosticTypeInLabsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeinlabId",
						"in": "path",
						"description": "diagnostictypeinlabId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/diagnosticTypePrecautions": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypePrecautions",
				"operationId": "diagnosticTypeDiagnosticTypePrecautionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypePrecautions",
				"operationId": "diagnosticTypeDiagnosticTypePrecautionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypePrecautions",
				"operationId": "diagnosticTypeDiagnosticTypePrecautionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypePrecautions",
				"operationId": "diagnosticTypeDiagnosticTypePrecautionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypePrecautions",
				"operationId": "diagnosticTypeDiagnosticTypePrecautionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/diagnosticTypePrecautions/{diagnostictypeprecautionId}": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypePrecautions",
				"operationId": "diagnosticTypeDiagnosticTypePrecautionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeprecautionId",
						"in": "path",
						"description": "diagnostictypeprecautionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypePrecaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypePrecautions",
				"operationId": "diagnosticTypeDiagnosticTypePrecautionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeprecautionId",
						"in": "path",
						"description": "diagnostictypeprecautionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/diagnosticTypeSpecimenTypes": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeSpecimenTypes",
				"operationId": "diagnosticTypeDiagnosticTypeSpecimenTypesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeSpecimenTypes",
				"operationId": "diagnosticTypeDiagnosticTypeSpecimenTypesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeSpecimenTypes",
				"operationId": "diagnosticTypeDiagnosticTypeSpecimenTypesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeSpecimenTypes",
				"operationId": "diagnosticTypeDiagnosticTypeSpecimenTypesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeSpecimenTypes",
				"operationId": "diagnosticTypeDiagnosticTypeSpecimenTypesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/diagnosticTypeSpecimenTypes/{diagnostictypespecimentypeId}": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeSpecimenTypes",
				"operationId": "diagnosticTypeDiagnosticTypeSpecimenTypesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypespecimentypeId",
						"in": "path",
						"description": "diagnostictypespecimentypeId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnosticTypeSpecimenTypes",
				"operationId": "diagnosticTypeDiagnosticTypeSpecimenTypesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypespecimentypeId",
						"in": "path",
						"description": "diagnostictypespecimentypeId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/diagnostics": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnostics",
				"operationId": "diagnosticTypeDiagnosticsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnostics",
				"operationId": "diagnosticTypeDiagnosticsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnostics",
				"operationId": "diagnosticTypeDiagnosticsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnostics",
				"operationId": "diagnosticTypeDiagnosticsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnostics",
				"operationId": "diagnosticTypeDiagnosticsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/diagnostics/{diagnosticId}": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnostics",
				"operationId": "diagnosticTypeDiagnosticsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "path",
						"description": "diagnosticId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeDiagnostics",
				"operationId": "diagnosticTypeDiagnosticsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "path",
						"description": "diagnosticId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/parent": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParent",
				"operationId": "diagnosticTypeParentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParent",
				"operationId": "diagnosticTypeParentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParent",
				"operationId": "diagnosticTypeParentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParent",
				"operationId": "diagnosticTypeParentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParent",
				"operationId": "diagnosticTypeParentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/parentStructures": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParentStructures",
				"operationId": "diagnosticTypeParentStructuresUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParentStructures",
				"operationId": "diagnosticTypeParentStructuresUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParentStructures",
				"operationId": "diagnosticTypeParentStructuresUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParentStructures",
				"operationId": "diagnosticTypeParentStructuresUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParentStructures",
				"operationId": "diagnosticTypeParentStructuresUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypes/{id}/parentStructures/{diagnostictypestructureId}": {
			"get": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParentStructures",
				"operationId": "diagnosticTypeParentStructuresUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypestructureId",
						"in": "path",
						"description": "diagnostictypestructureId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeStructure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticType Entity"
				],
				"summary": "diagnosticTypeParentStructures",
				"operationId": "diagnosticTypeParentStructuresUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypestructureId",
						"in": "path",
						"description": "diagnostictypestructureId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypespecimentypes": {
			"get": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "findAllDiagnosticTypeSpecimenType",
				"operationId": "findAllDiagnosticTypeSpecimenTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "saveDiagnosticTypeSpecimenType",
				"operationId": "saveDiagnosticTypeSpecimenTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticTypeSpecimenType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypespecimentypes/search/findByDiagnosticTypeIdAndIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "findByDiagnosticTypeIdAndIsActiveTrueDiagnosticTypeSpecimenType",
				"operationId": "findByDiagnosticTypeIdAndIsActiveTrueDiagnosticTypeSpecimenTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosticTypeId",
					"in": "query",
					"description": "diagnosticTypeId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypespecimentypes/{id}": {
			"get": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "findByIdDiagnosticTypeSpecimenType",
				"operationId": "findByIdDiagnosticTypeSpecimenTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "saveDiagnosticTypeSpecimenType",
				"operationId": "saveDiagnosticTypeSpecimenTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeSpecimenType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "deleteDiagnosticTypeSpecimenType",
				"operationId": "deleteDiagnosticTypeSpecimenTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "saveDiagnosticTypeSpecimenType",
				"operationId": "saveDiagnosticTypeSpecimenTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeSpecimenType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypespecimentypes/{id}/diagnosticType": {
			"get": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeDiagnosticType",
				"operationId": "diagnosticTypeSpecimenTypeDiagnosticTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeDiagnosticType",
				"operationId": "diagnosticTypeSpecimenTypeDiagnosticTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeDiagnosticType",
				"operationId": "diagnosticTypeSpecimenTypeDiagnosticTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeDiagnosticType",
				"operationId": "diagnosticTypeSpecimenTypeDiagnosticTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeDiagnosticType",
				"operationId": "diagnosticTypeSpecimenTypeDiagnosticTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypespecimentypes/{id}/specimenType": {
			"get": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenType",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenType",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenType",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenType",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenType",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypespecimentypes/{id}/specimenTypeAndDiagnosticLabs": {
			"get": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypespecimentypes/{id}/specimenTypeAndDiagnosticLabs/{specimentypeanddiagnosticlabId}": {
			"get": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specimentypeanddiagnosticlabId",
						"in": "path",
						"description": "specimentypeanddiagnosticlabId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeSpecimenType Entity"
				],
				"summary": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "diagnosticTypeSpecimenTypeSpecimenTypeAndDiagnosticLabsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specimentypeanddiagnosticlabId",
						"in": "path",
						"description": "specimentypeanddiagnosticlabId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypestructures": {
			"get": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "findAllDiagnosticTypeStructure",
				"operationId": "findAllDiagnosticTypeStructureUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeStructure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "saveDiagnosticTypeStructure",
				"operationId": "saveDiagnosticTypeStructureUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticTypeStructure"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeStructure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypestructures/{id}": {
			"get": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "findByIdDiagnosticTypeStructure",
				"operationId": "findByIdDiagnosticTypeStructureUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeStructure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "saveDiagnosticTypeStructure",
				"operationId": "saveDiagnosticTypeStructureUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeStructure"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeStructure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "deleteDiagnosticTypeStructure",
				"operationId": "deleteDiagnosticTypeStructureUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "saveDiagnosticTypeStructure",
				"operationId": "saveDiagnosticTypeStructureUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeStructure"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeStructure»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypestructures/{id}/child": {
			"get": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureChild",
				"operationId": "diagnosticTypeStructureChildUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureChild",
				"operationId": "diagnosticTypeStructureChildUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureChild",
				"operationId": "diagnosticTypeStructureChildUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureChild",
				"operationId": "diagnosticTypeStructureChildUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureChild",
				"operationId": "diagnosticTypeStructureChildUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagnostictypestructures/{id}/parent": {
			"get": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureParent",
				"operationId": "diagnosticTypeStructureParentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureParent",
				"operationId": "diagnosticTypeStructureParentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureParent",
				"operationId": "diagnosticTypeStructureParentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureParent",
				"operationId": "diagnosticTypeStructureParentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeStructure Entity"
				],
				"summary": "diagnosticTypeStructureParent",
				"operationId": "diagnosticTypeStructureParentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findAllDiagnosticTypeInLab",
				"operationId": "findAllDiagnosticTypeInLabUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "saveDiagnosticTypeInLab",
				"operationId": "saveDiagnosticTypeInLabUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticTypeInLab"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetch": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDiagnosticTypeInLab",
				"operationId": "fetchDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDiagnosticTypeForSearch": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDiagnosticTypeForSearchDiagnosticTypeInLab",
				"operationId": "fetchDiagnosticTypeForSearchDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDiagnosticTypeForSearchWithFilter": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDiagnosticTypeForSearchWithFilterDiagnosticTypeInLab",
				"operationId": "fetchDiagnosticTypeForSearchWithFilterDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtil": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilDiagnosticTypeInLab",
				"operationId": "fetchDtilDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "labId",
					"in": "query",
					"description": "labId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilBasedOnLab": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilBasedOnLabDiagnosticTypeInLab",
				"operationId": "fetchDtilBasedOnLabDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilBasedOnLabAndSearch": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilBasedOnLabAndSearchDiagnosticTypeInLab",
				"operationId": "fetchDtilBasedOnLabAndSearchDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilBasedOnTestAndLab": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilBasedOnTestAndLabDiagnosticTypeInLab",
				"operationId": "fetchDtilBasedOnTestAndLabDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "testId",
						"in": "query",
						"description": "testId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilBasedOnTestAndLabIds": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilBasedOnTestAndLabIdsDiagnosticTypeInLab",
				"operationId": "fetchDtilBasedOnTestAndLabIdsDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "testId",
						"in": "query",
						"description": "testId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilBasedOnTestId": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilBasedOnTestIdDiagnosticTypeInLab",
				"operationId": "fetchDtilBasedOnTestIdDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "testId",
					"in": "query",
					"description": "testId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilBasedOnTestsAndLabs": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilBasedOnTestsAndLabsDiagnosticTypeInLab",
				"operationId": "fetchDtilBasedOnTestsAndLabsDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "testId",
						"in": "query",
						"description": "testId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearch": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchV2": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchV2DiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchV2DiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWith": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWithDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWithDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWithFilter": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWithFilterDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWithFilterDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWithFilterAndLabWith": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWithFilterAndLabWithDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWithFilterAndLabWithDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWithFilterWith": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWithFilterWithDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWithFilterWithDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWithFilterWoDisabledIds": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWithFilterWoDisabledIdsDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWithFilterWoDisabledIdsDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "disabledIds",
						"in": "query",
						"description": "disabledIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWithFilterWoDisabledIdsAndLab": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWithFilterWoDisabledIdsAndLabDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWithFilterWoDisabledIdsAndLabDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "disabledIds",
						"in": "query",
						"description": "disabledIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWithIdsAndLab": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWithIdsAndLabDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWithIdsAndLabDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWoDisabledIds": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWoDisabledIdsDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWoDisabledIdsDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "disabledIds",
						"in": "query",
						"description": "disabledIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchDtilForSearchWoDisabledIdsAndLab": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchDtilForSearchWoDisabledIdsAndLabDiagnosticTypeInLab",
				"operationId": "fetchDtilForSearchWoDisabledIdsAndLabDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "disabledIds",
						"in": "query",
						"description": "disabledIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchLabsForSearch": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchLabsForSearchDiagnosticTypeInLab",
				"operationId": "fetchLabsForSearchDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "value",
					"in": "query",
					"description": "value",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchTestsForOrder": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchTestsForOrderDiagnosticTypeInLab",
				"operationId": "fetchTestsForOrderDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"in": "query",
						"description": "status",
						"required": false,
						"type": "string",
						"enum": [
							"PATHOLOGY",
							"RADIOLOGY"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/fetchTestsForSearch": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "fetchTestsForSearchDiagnosticTypeInLab",
				"operationId": "fetchTestsForSearchDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "abbreviation",
						"in": "query",
						"description": "abbreviation",
						"required": false,
						"type": "string"
					},
					{
						"name": "alias",
						"in": "query",
						"description": "alias",
						"required": false,
						"type": "string"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findByDiagnosticLabId": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findByDiagnosticLabIdDiagnosticTypeInLab",
				"operationId": "findByDiagnosticLabIdDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findByDiagnosticLabIdAndDiagnosticTypeNameContaining": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findByDiagnosticLabIdAndDiagnosticTypeNameContainingDiagnosticTypeInLab",
				"operationId": "findByDiagnosticLabIdAndDiagnosticTypeNameContainingDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findByDiagnosticLabIdAndIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findByDiagnosticLabIdAndIsActiveTrueDiagnosticTypeInLab",
				"operationId": "findByDiagnosticLabIdAndIsActiveTrueDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findByDiagnosticTypeIdIn": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findByDiagnosticTypeIdInDiagnosticTypeInLab",
				"operationId": "findByDiagnosticTypeIdInDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dtIds",
					"in": "query",
					"description": "dtIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findByDiagnosticTypeNameContaining": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findByDiagnosticTypeNameContainingDiagnosticTypeInLab",
				"operationId": "findByDiagnosticTypeNameContainingDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findByIsActiveTrueDiagnosticTypeInLab",
				"operationId": "findByIsActiveTrueDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findByIsActiveTrueAndDiagnosticLabIsActiveTrue": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findByIsActiveTrueAndDiagnosticLabIsActiveTrueDiagnosticTypeInLab",
				"operationId": "findByIsActiveTrueAndDiagnosticLabIsActiveTrueDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findDistinctByDiagnosticLabId": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findDistinctByDiagnosticLabIdDiagnosticTypeInLab",
				"operationId": "findDistinctByDiagnosticLabIdDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findDistinctByDiagnosticLabIdAndDiagnosticTypeId": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findDistinctByDiagnosticLabIdAndDiagnosticTypeIdDiagnosticTypeInLab",
				"operationId": "findDistinctByDiagnosticLabIdAndDiagnosticTypeIdDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "testId",
						"in": "query",
						"description": "testId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findDistinctByDiagnosticsIdIn": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findDistinctByDiagnosticsIdInDiagnosticTypeInLab",
				"operationId": "findDistinctByDiagnosticsIdInDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dtIds",
					"in": "query",
					"description": "dtIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/search/findDtilByIdIn": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findDtilByIdInDiagnosticTypeInLab",
				"operationId": "findDtilByIdInDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/{id}": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "findByIdDiagnosticTypeInLab",
				"operationId": "findByIdDiagnosticTypeInLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "saveDiagnosticTypeInLab",
				"operationId": "saveDiagnosticTypeInLabUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeInLab"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "deleteDiagnosticTypeInLab",
				"operationId": "deleteDiagnosticTypeInLabUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "saveDiagnosticTypeInLab",
				"operationId": "saveDiagnosticTypeInLabUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DiagnosticTypeInLab"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/{id}/diagnosticLab": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticLab",
				"operationId": "diagnosticTypeInLabDiagnosticLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticLab",
				"operationId": "diagnosticTypeInLabDiagnosticLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticLab",
				"operationId": "diagnosticTypeInLabDiagnosticLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticLab",
				"operationId": "diagnosticTypeInLabDiagnosticLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticLab",
				"operationId": "diagnosticTypeInLabDiagnosticLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/{id}/diagnosticType": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticType",
				"operationId": "diagnosticTypeInLabDiagnosticTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticType",
				"operationId": "diagnosticTypeInLabDiagnosticTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticType",
				"operationId": "diagnosticTypeInLabDiagnosticTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticType",
				"operationId": "diagnosticTypeInLabDiagnosticTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnosticType",
				"operationId": "diagnosticTypeInLabDiagnosticTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/{id}/diagnostics": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnostics",
				"operationId": "diagnosticTypeInLabDiagnosticsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnostics",
				"operationId": "diagnosticTypeInLabDiagnosticsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnostics",
				"operationId": "diagnosticTypeInLabDiagnosticsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnostics",
				"operationId": "diagnosticTypeInLabDiagnosticsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnostics",
				"operationId": "diagnosticTypeInLabDiagnosticsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/{id}/diagnostics/{diagnosticId}": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnostics",
				"operationId": "diagnosticTypeInLabDiagnosticsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "path",
						"description": "diagnosticId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabDiagnostics",
				"operationId": "diagnosticTypeInLabDiagnosticsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticId",
						"in": "path",
						"description": "diagnosticId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/diagonstictypeinlab/{id}/taxes": {
			"get": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabTaxes",
				"operationId": "diagnosticTypeInLabTaxesUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Taxes»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabTaxes",
				"operationId": "diagnosticTypeInLabTaxesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Taxes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabTaxes",
				"operationId": "diagnosticTypeInLabTaxesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Taxes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabTaxes",
				"operationId": "diagnosticTypeInLabTaxesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DiagnosticTypeInLab Entity"
				],
				"summary": "diagnosticTypeInLabTaxes",
				"operationId": "diagnosticTypeInLabTaxesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Taxes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/dic/by/ids": {
			"post": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "fetchDistinctClinicByIds",
				"operationId": "fetchDistinctClinicByIdsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "ids",
					"description": "ids",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinics»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/distinct-labs": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "distinctLabs",
				"operationId": "distinctLabsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor-in-clinic/by-dic-id": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "getDoctorInClinicById",
				"operationId": "getDoctorInClinicByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicForConsumer"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor-in-clinic/by-doxer-user-name": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "getDoctorInClinicByDoxperUserName",
				"operationId": "getDoctorInClinicByDoxperUserNameUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doxperUserName",
					"in": "query",
					"description": "doxperUserName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicWoConsultationAndClinic"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor-in-clinic/closed-timings": {
			"post": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "postClosedTimeSlotsForDic",
				"operationId": "postClosedTimeSlotsForDicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor-mark-listed": {
			"get": {
				"tags": [
					"doctor-controller"
				],
				"summary": "markDoctorsListed",
				"operationId": "markDoctorsListedUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-controller"
				],
				"summary": "markDoctorsListed",
				"operationId": "markDoctorsListedUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-controller"
				],
				"summary": "markDoctorsListed",
				"operationId": "markDoctorsListedUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-controller"
				],
				"summary": "markDoctorsListed",
				"operationId": "markDoctorsListedUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-controller"
				],
				"summary": "markDoctorsListed",
				"operationId": "markDoctorsListedUsingDELETE",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-controller"
				],
				"summary": "markDoctorsListed",
				"operationId": "markDoctorsListedUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-controller"
				],
				"summary": "markDoctorsListed",
				"operationId": "markDoctorsListedUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctor-patient-phone": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "getDoctorAndPatientPhoneNumbers",
				"operationId": "getDoctorAndPatientPhoneNumbersUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorId",
						"in": "query",
						"description": "doctorId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorPatientPhoneDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor-search": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "findAllDoctor",
				"operationId": "findAllDoctorUsingGET_1",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "saveDoctor",
				"operationId": "saveDoctorUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Doctor"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor-search/{id}": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "findByIdDoctor",
				"operationId": "findByIdDoctorUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "saveDoctor",
				"operationId": "saveDoctorUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "deleteDoctor",
				"operationId": "deleteDoctorUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "saveDoctor",
				"operationId": "saveDoctorUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctor-tags/bulk-edit": {
			"post": {
				"tags": [
					"bulk-upload-controller"
				],
				"summary": "editDoctorTags",
				"operationId": "editDoctorTagsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "doctorTags",
						"description": "doctorTags",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorTagsDto"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"description": "operation",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoctorTags"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/all": {
			"get": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findAllDoctors",
				"operationId": "findAllDoctorsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "allDoctors",
					"in": "query",
					"description": "allDoctors",
					"required": false,
					"type": "boolean",
					"default": false
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Doctor"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findAllDoctors",
				"operationId": "findAllDoctorsUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "allDoctors",
					"in": "query",
					"description": "allDoctors",
					"required": false,
					"type": "boolean",
					"default": false
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Doctor"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findAllDoctors",
				"operationId": "findAllDoctorsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "allDoctors",
					"in": "query",
					"description": "allDoctors",
					"required": false,
					"type": "boolean",
					"default": false
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Doctor"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findAllDoctors",
				"operationId": "findAllDoctorsUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "allDoctors",
					"in": "query",
					"description": "allDoctors",
					"required": false,
					"type": "boolean",
					"default": false
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Doctor"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findAllDoctors",
				"operationId": "findAllDoctorsUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "allDoctors",
					"in": "query",
					"description": "allDoctors",
					"required": false,
					"type": "boolean",
					"default": false
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Doctor"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findAllDoctors",
				"operationId": "findAllDoctorsUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "allDoctors",
					"in": "query",
					"description": "allDoctors",
					"required": false,
					"type": "boolean",
					"default": false
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Doctor"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findAllDoctors",
				"operationId": "findAllDoctorsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "allDoctors",
					"in": "query",
					"description": "allDoctors",
					"required": false,
					"type": "boolean",
					"default": false
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Doctor"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctor/code/{code}": {
			"get": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "path",
					"description": "code",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "path",
					"description": "code",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "path",
					"description": "code",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "path",
					"description": "code",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "path",
					"description": "code",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "path",
					"description": "code",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "path",
					"description": "code",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctor/details": {
			"post": {
				"tags": [
					"doctor-controller"
				],
				"summary": "updateDoctorDetailsById",
				"operationId": "updateDoctorDetailsByIdUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorDetailsDto",
					"description": "doctorDetailsDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorDetailsDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/fetch-by-slug": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "fetchDoctorBySlug",
				"operationId": "fetchDoctorBySlugUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "slug",
					"in": "query",
					"description": "slug",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/medicine-details": {
			"get": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "inventoryAndMedicineDetails",
				"operationId": "inventoryAndMedicineDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "interval",
						"in": "query",
						"description": "interval",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "quantity",
						"in": "query",
						"description": "quantity",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "integer",
						"default": 20,
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/MedicineAndInventoryWithPaginationDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/message": {
			"get": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessages",
				"operationId": "doctorMessagesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorMessageDto",
					"description": "doctorMessageDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessageDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorMessageDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessages",
				"operationId": "doctorMessagesUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorMessageDto",
					"description": "doctorMessageDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessageDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorMessageDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessages",
				"operationId": "doctorMessagesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorMessageDto",
					"description": "doctorMessageDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessageDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorMessageDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessages",
				"operationId": "doctorMessagesUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorMessageDto",
					"description": "doctorMessageDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessageDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorMessageDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessages",
				"operationId": "doctorMessagesUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorMessageDto",
					"description": "doctorMessageDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessageDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorMessageDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessages",
				"operationId": "doctorMessagesUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorMessageDto",
					"description": "doctorMessageDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessageDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorMessageDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessages",
				"operationId": "doctorMessagesUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "doctorMessageDto",
					"description": "doctorMessageDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessageDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorMessageDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctor/message/byId": {
			"get": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessageById",
				"operationId": "doctorMessageByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "messageId",
					"in": "query",
					"description": "messageId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorMessagesWoDoctorMessageAndDic"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/message/credit": {
			"post": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessageCredit",
				"operationId": "doctorMessageCreditUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "messageCredit",
						"in": "query",
						"description": "messageCredit",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfigurationForWeb"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/message/credit/available": {
			"get": {
				"tags": [
					"doctor-message-controller"
				],
				"summary": "doctorMessageCreditAvailable",
				"operationId": "doctorMessageCreditAvailableUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/message/id": {
			"get": {
				"tags": [
					"doctor-message-and-doctor-in-clinic-controller"
				],
				"summary": "findByDoctorMessageId",
				"operationId": "findByDoctorMessageIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorMessageId",
						"in": "query",
						"description": "doctorMessageId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorMessageAndDoctorInClinicForMessageRouter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/pending/report-data": {
			"get": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "pendingReport",
				"operationId": "pendingReportUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "integer",
						"default": 500,
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ReportDetailDto"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/rating": {
			"patch": {
				"tags": [
					"doctor-rating-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoctorRatings"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctor/searches": {
			"get": {
				"tags": [
					"doctor-controller"
				],
				"summary": "getSearchWiseDoctors",
				"operationId": "getSearchWiseDoctorsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "available",
						"in": "query",
						"description": "available",
						"required": false,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "speciality",
						"in": "query",
						"description": "speciality",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/slug/exists": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "isDoctorSlugExists",
				"operationId": "isDoctorSlugExistsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "slug",
					"in": "query",
					"description": "slug",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/update-feedback": {
			"post": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "feedbackUpdate",
				"operationId": "feedbackUpdateUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "feedbackRequestDto",
					"description": "feedbackRequestDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/FeedbackRequestDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/update-netpromoterscore": {
			"post": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "NetPromoterScoreUpdate",
				"operationId": "NetPromoterScoreUpdateUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "netPromoterScoreRequestDto",
					"description": "netPromoterScoreRequestDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/NetPromoterScoreRequestDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/update-patient-history": {
			"post": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "updateDoctorReview",
				"operationId": "updateDoctorReviewUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "doctorReviewRequestDto",
						"description": "doctorReviewRequestDto",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorReviewRequestDto"
						}
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/version": {
			"post": {
				"tags": [
					"version-controller"
				],
				"summary": "updateVersionDetails",
				"operationId": "updateVersionDetailsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "appVersionDto",
					"description": "appVersionDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AppVersionDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctor/{id}": {
			"get": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorById",
				"operationId": "findDoctorByIdUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctor/{id}/details": {
			"get": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findDoctorDetailsById",
				"operationId": "findDoctorDetailsByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorDetailsDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorTagTypes": {
			"get": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "findAllDoctorTagType",
				"operationId": "findAllDoctorTagTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTagType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "saveDoctorTagType",
				"operationId": "saveDoctorTagTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorTagType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTagType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorTagTypes/{id}": {
			"get": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "findByIdDoctorTagType",
				"operationId": "findByIdDoctorTagTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTagType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "saveDoctorTagType",
				"operationId": "saveDoctorTagTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorTagType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTagType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "deleteDoctorTagType",
				"operationId": "deleteDoctorTagTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "saveDoctorTagType",
				"operationId": "saveDoctorTagTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorTagType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTagType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorTagTypes/{id}/tags": {
			"get": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "doctorTagTypeTags",
				"operationId": "doctorTagTypeTagsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "doctorTagTypeTags",
				"operationId": "doctorTagTypeTagsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "doctorTagTypeTags",
				"operationId": "doctorTagTypeTagsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "doctorTagTypeTags",
				"operationId": "doctorTagTypeTagsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "doctorTagTypeTags",
				"operationId": "doctorTagTypeTagsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorTagTypes/{id}/tags/{doctortagsId}": {
			"get": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "doctorTagTypeTags",
				"operationId": "doctorTagTypeTagsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctortagsId",
						"in": "path",
						"description": "doctortagsId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTags»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorTagType Entity"
				],
				"summary": "doctorTagTypeTags",
				"operationId": "doctorTagTypeTagsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctortagsId",
						"in": "path",
						"description": "doctortagsId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorTags": {
			"get": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "findAllDoctorTags",
				"operationId": "findAllDoctorTagsUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "saveDoctorTags",
				"operationId": "saveDoctorTagsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorTags"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTags»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorTags/{id}": {
			"get": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "findByIdDoctorTags",
				"operationId": "findByIdDoctorTagsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTags»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "saveDoctorTags",
				"operationId": "saveDoctorTagsUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorTags"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTags»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "deleteDoctorTags",
				"operationId": "deleteDoctorTagsUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "saveDoctorTags",
				"operationId": "saveDoctorTagsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorTags"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTags»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorTags/{id}/doctor": {
			"get": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsDoctor",
				"operationId": "doctorTagsDoctorUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsDoctor",
				"operationId": "doctorTagsDoctorUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsDoctor",
				"operationId": "doctorTagsDoctorUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsDoctor",
				"operationId": "doctorTagsDoctorUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsDoctor",
				"operationId": "doctorTagsDoctorUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorTags/{id}/tagType": {
			"get": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsTagType",
				"operationId": "doctorTagsTagTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTagType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsTagType",
				"operationId": "doctorTagsTagTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTagType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsTagType",
				"operationId": "doctorTagsTagTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTagType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsTagType",
				"operationId": "doctorTagsTagTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorTags Entity"
				],
				"summary": "doctorTagsTagType",
				"operationId": "doctorTagsTagTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTagType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctoradvicetags": {
			"get": {
				"tags": [
					"DoctorAdviceTag Entity"
				],
				"summary": "findAllDoctorAdviceTag",
				"operationId": "findAllDoctorAdviceTagUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorAdviceTag»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorAdviceTag Entity"
				],
				"summary": "saveDoctorAdviceTag",
				"operationId": "saveDoctorAdviceTagUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorAdviceTag"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorAdviceTag»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctoradvicetags/search/findAllTags": {
			"get": {
				"tags": [
					"DoctorAdviceTag Entity"
				],
				"summary": "findAllTagsDoctorAdviceTag",
				"operationId": "findAllTagsDoctorAdviceTagUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorAdviceTag»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctoradvicetags/{id}": {
			"get": {
				"tags": [
					"DoctorAdviceTag Entity"
				],
				"summary": "findByIdDoctorAdviceTag",
				"operationId": "findByIdDoctorAdviceTagUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorAdviceTag»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorAdviceTag Entity"
				],
				"summary": "saveDoctorAdviceTag",
				"operationId": "saveDoctorAdviceTagUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorAdviceTag"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorAdviceTag»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorAdviceTag Entity"
				],
				"summary": "deleteDoctorAdviceTag",
				"operationId": "deleteDoctorAdviceTagUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorAdviceTag Entity"
				],
				"summary": "saveDoctorAdviceTag",
				"operationId": "saveDoctorAdviceTagUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorAdviceTag"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorAdviceTag»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicclosedtimeslots": {
			"get": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "findAllDoctorInClinicClosedTimeSlot",
				"operationId": "findAllDoctorInClinicClosedTimeSlotUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "saveDoctorInClinicClosedTimeSlot",
				"operationId": "saveDoctorInClinicClosedTimeSlotUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorInClinicClosedTimeSlot"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicclosedtimeslots/{id}": {
			"get": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "findByIdDoctorInClinicClosedTimeSlot",
				"operationId": "findByIdDoctorInClinicClosedTimeSlotUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "saveDoctorInClinicClosedTimeSlot",
				"operationId": "saveDoctorInClinicClosedTimeSlotUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorInClinicClosedTimeSlot"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "deleteDoctorInClinicClosedTimeSlot",
				"operationId": "deleteDoctorInClinicClosedTimeSlotUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "saveDoctorInClinicClosedTimeSlot",
				"operationId": "saveDoctorInClinicClosedTimeSlotUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorInClinicClosedTimeSlot"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicClosedTimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicclosedtimeslots/{id}/closedTimeSlot": {
			"get": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotClosedTimeSlot",
				"operationId": "doctorInClinicClosedTimeSlotClosedTimeSlotUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotClosedTimeSlot",
				"operationId": "doctorInClinicClosedTimeSlotClosedTimeSlotUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotClosedTimeSlot",
				"operationId": "doctorInClinicClosedTimeSlotClosedTimeSlotUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotClosedTimeSlot",
				"operationId": "doctorInClinicClosedTimeSlotClosedTimeSlotUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotClosedTimeSlot",
				"operationId": "doctorInClinicClosedTimeSlotClosedTimeSlotUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ClosedTimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicclosedtimeslots/{id}/doctorInClinic": {
			"get": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotDoctorInClinic",
				"operationId": "doctorInClinicClosedTimeSlotDoctorInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotDoctorInClinic",
				"operationId": "doctorInClinicClosedTimeSlotDoctorInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotDoctorInClinic",
				"operationId": "doctorInClinicClosedTimeSlotDoctorInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotDoctorInClinic",
				"operationId": "doctorInClinicClosedTimeSlotDoctorInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinicClosedTimeSlot Entity"
				],
				"summary": "doctorInClinicClosedTimeSlotDoctorInClinic",
				"operationId": "doctorInClinicClosedTimeSlotDoctorInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "findAllDoctorInClinicConfiguration",
				"operationId": "findAllDoctorInClinicConfigurationUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "saveDoctorInClinicConfiguration",
				"operationId": "saveDoctorInClinicConfigurationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorInClinicConfiguration"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicConfiguration»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations/search/findConfigurationsByDicIdAndKeyNameAndActive": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActiveDoctorInClinicConfiguration",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveDoctorInClinicConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations/search/findConfigurationsByDicIdAndKeyNameAndActiveList": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "findConfigurationsByDicIdAndKeyNameAndActiveListDoctorInClinicConfiguration",
				"operationId": "findConfigurationsByDicIdAndKeyNameAndActiveListDoctorInClinicConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations/search/findConfigurationsByKeyNameAndValueAndActive": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "findConfigurationsByKeyNameAndValueAndActiveDoctorInClinicConfiguration",
				"operationId": "findConfigurationsByKeyNameAndValueAndActiveDoctorInClinicConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations/search/findConfigurationsListByDicsIDAndActive": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "findConfigurationsListByDicsIDAndActiveDoctorInClinicConfiguration",
				"operationId": "findConfigurationsListByDicsIDAndActiveDoctorInClinicConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations/search/findConfigurationsListByDicsIDAndKeyNameAndActive": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "findConfigurationsListByDicsIDAndKeyNameAndActiveDoctorInClinicConfiguration",
				"operationId": "findConfigurationsListByDicsIDAndKeyNameAndActiveDoctorInClinicConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "keyName",
						"in": "query",
						"description": "keyName",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations/search/findConfigurationsThroughDoctorInClinicId": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "findConfigurationsThroughDoctorInClinicIdDoctorInClinicConfiguration",
				"operationId": "findConfigurationsThroughDoctorInClinicIdDoctorInClinicConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations/{id}": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "findByIdDoctorInClinicConfiguration",
				"operationId": "findByIdDoctorInClinicConfigurationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "saveDoctorInClinicConfiguration",
				"operationId": "saveDoctorInClinicConfigurationUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfiguration"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicConfiguration»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "deleteDoctorInClinicConfiguration",
				"operationId": "deleteDoctorInClinicConfigurationUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "saveDoctorInClinicConfiguration",
				"operationId": "saveDoctorInClinicConfigurationUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorInClinicConfiguration"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicConfiguration»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorinclinicconfigurations/{id}/doctorInClinic": {
			"get": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "doctorInClinicConfigurationDoctorInClinic",
				"operationId": "doctorInClinicConfigurationDoctorInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "doctorInClinicConfigurationDoctorInClinic",
				"operationId": "doctorInClinicConfigurationDoctorInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "doctorInClinicConfigurationDoctorInClinic",
				"operationId": "doctorInClinicConfigurationDoctorInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "doctorInClinicConfigurationDoctorInClinic",
				"operationId": "doctorInClinicConfigurationDoctorInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinicConfiguration Entity"
				],
				"summary": "doctorInClinicConfigurationDoctorInClinic",
				"operationId": "doctorInClinicConfigurationDoctorInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctormessageanddoctorinclinics": {
			"get": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "findAllDoctorMessageAndDoctorInClinic",
				"operationId": "findAllDoctorMessageAndDoctorInClinicUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "saveDoctorMessageAndDoctorInClinic",
				"operationId": "saveDoctorMessageAndDoctorInClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessageAndDoctorInClinic"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessageAndDoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctormessageanddoctorinclinics/search/findByDoctorInClinicAndDoctorMessageAndPatientId": {
			"get": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "findByDoctorInClinicAndDoctorMessageAndPatientIdDoctorMessageAndDoctorInClinic",
				"operationId": "findByDoctorInClinicAndDoctorMessageAndPatientIdDoctorMessageAndDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorMessageId",
						"in": "query",
						"description": "doctorMessageId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientIds",
						"in": "query",
						"description": "patientIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctormessageanddoctorinclinics/search/findByDoctorMessageId": {
			"get": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "findByDoctorMessageIdDoctorMessageAndDoctorInClinic",
				"operationId": "findByDoctorMessageIdDoctorMessageAndDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorMessageId",
						"in": "query",
						"description": "doctorMessageId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinicForMessageRouter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctormessageanddoctorinclinics/search/findByDoctorMessageIdList": {
			"get": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "findByDoctorMessageIdListDoctorMessageAndDoctorInClinic",
				"operationId": "findByDoctorMessageIdListDoctorMessageAndDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorMessageId",
						"in": "query",
						"description": "doctorMessageId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctormessageanddoctorinclinics/{id}": {
			"get": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "findByIdDoctorMessageAndDoctorInClinic",
				"operationId": "findByIdDoctorMessageAndDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessageAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "saveDoctorMessageAndDoctorInClinic",
				"operationId": "saveDoctorMessageAndDoctorInClinicUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorMessageAndDoctorInClinic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessageAndDoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "deleteByIdDoctorMessageAndDoctorInClinic",
				"operationId": "deleteByIdDoctorMessageAndDoctorInClinicUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "saveDoctorMessageAndDoctorInClinic",
				"operationId": "saveDoctorMessageAndDoctorInClinicUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorMessageAndDoctorInClinic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessageAndDoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctormessageanddoctorinclinics/{id}/doctorInClinic": {
			"get": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorInClinic",
				"operationId": "doctorMessageAndDoctorInClinicDoctorInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorInClinic",
				"operationId": "doctorMessageAndDoctorInClinicDoctorInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorInClinic",
				"operationId": "doctorMessageAndDoctorInClinicDoctorInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorInClinic",
				"operationId": "doctorMessageAndDoctorInClinicDoctorInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorInClinic",
				"operationId": "doctorMessageAndDoctorInClinicDoctorInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctormessageanddoctorinclinics/{id}/doctorMessage": {
			"get": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorMessage",
				"operationId": "doctorMessageAndDoctorInClinicDoctorMessageUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessage»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorMessage",
				"operationId": "doctorMessageAndDoctorInClinicDoctorMessageUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessage»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorMessage",
				"operationId": "doctorMessageAndDoctorInClinicDoctorMessageUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessage»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorMessage",
				"operationId": "doctorMessageAndDoctorInClinicDoctorMessageUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicDoctorMessage",
				"operationId": "doctorMessageAndDoctorInClinicDoctorMessageUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessage»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctormessageanddoctorinclinics/{id}/patient": {
			"get": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicPatient",
				"operationId": "doctorMessageAndDoctorInClinicPatientUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicPatient",
				"operationId": "doctorMessageAndDoctorInClinicPatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicPatient",
				"operationId": "doctorMessageAndDoctorInClinicPatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicPatient",
				"operationId": "doctorMessageAndDoctorInClinicPatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorMessageAndDoctorInClinic Entity"
				],
				"summary": "doctorMessageAndDoctorInClinicPatient",
				"operationId": "doctorMessageAndDoctorInClinicPatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctormessages": {
			"get": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "findAllDoctorMessage",
				"operationId": "findAllDoctorMessageUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessage»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "saveDoctorMessage",
				"operationId": "saveDoctorMessageUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorMessage"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessage»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctormessages/{id}": {
			"get": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "findByIdDoctorMessage",
				"operationId": "findByIdDoctorMessageUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessage»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "saveDoctorMessage",
				"operationId": "saveDoctorMessageUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorMessage"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessage»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "deleteByIdDoctorMessage",
				"operationId": "deleteByIdDoctorMessageUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "saveDoctorMessage",
				"operationId": "saveDoctorMessageUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorMessage"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessage»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctormessages/{id}/doctorMessageAndDoctorInClinics": {
			"get": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "doctorMessageDoctorMessageAndDoctorInClinics",
				"operationId": "doctorMessageDoctorMessageAndDoctorInClinicsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "doctorMessageDoctorMessageAndDoctorInClinics",
				"operationId": "doctorMessageDoctorMessageAndDoctorInClinicsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "doctorMessageDoctorMessageAndDoctorInClinics",
				"operationId": "doctorMessageDoctorMessageAndDoctorInClinicsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "doctorMessageDoctorMessageAndDoctorInClinics",
				"operationId": "doctorMessageDoctorMessageAndDoctorInClinicsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "doctorMessageDoctorMessageAndDoctorInClinics",
				"operationId": "doctorMessageDoctorMessageAndDoctorInClinicsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctormessages/{id}/doctorMessageAndDoctorInClinics/{doctormessageanddoctorinclinicId}": {
			"get": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "doctorMessageDoctorMessageAndDoctorInClinics",
				"operationId": "doctorMessageDoctorMessageAndDoctorInClinicsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctormessageanddoctorinclinicId",
						"in": "path",
						"description": "doctormessageanddoctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessageAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorMessage Entity"
				],
				"summary": "doctorMessageDoctorMessageAndDoctorInClinics",
				"operationId": "doctorMessageDoctorMessageAndDoctorInClinicsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctormessageanddoctorinclinicId",
						"in": "path",
						"description": "doctormessageanddoctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "findAllDoctor",
				"operationId": "findAllDoctorUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "saveDoctor",
				"operationId": "saveDoctorUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Doctor"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors-for-web": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "fetchDoctorsForWeb",
				"operationId": "fetchDoctorsForWebUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "Ids",
					"in": "query",
					"description": "Ids",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoctorsForWeb"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors-from-dic": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "doctorFromDic",
				"operationId": "doctorFromDicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DoctorFromDic"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors/active-all": {
			"get": {
				"tags": [
					"doctor-controller"
				],
				"summary": "findAllActiveDoctors",
				"operationId": "findAllActiveDoctorsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DoctorsForMessageRouter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors/appointment": {
			"get": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentDetail",
				"operationId": "getAppointmentDetailUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsGrouping»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentDetail",
				"operationId": "getAppointmentDetailUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsGrouping»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentDetail",
				"operationId": "getAppointmentDetailUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsGrouping»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentDetail",
				"operationId": "getAppointmentDetailUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsGrouping»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentDetail",
				"operationId": "getAppointmentDetailUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsGrouping»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentDetail",
				"operationId": "getAppointmentDetailUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsGrouping»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentDetail",
				"operationId": "getAppointmentDetailUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsGrouping»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/appointmentDateWise": {
			"get": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getDateWiseAppointmentCount",
				"operationId": "getDateWiseAppointmentCountUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DateWiseAppointment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getDateWiseAppointmentCount",
				"operationId": "getDateWiseAppointmentCountUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DateWiseAppointment»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getDateWiseAppointmentCount",
				"operationId": "getDateWiseAppointmentCountUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DateWiseAppointment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getDateWiseAppointmentCount",
				"operationId": "getDateWiseAppointmentCountUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DateWiseAppointment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getDateWiseAppointmentCount",
				"operationId": "getDateWiseAppointmentCountUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DateWiseAppointment»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getDateWiseAppointmentCount",
				"operationId": "getDateWiseAppointmentCountUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DateWiseAppointment»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getDateWiseAppointmentCount",
				"operationId": "getDateWiseAppointmentCountUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DateWiseAppointment»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/appointmentForDesktop": {
			"get": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentInformation",
				"operationId": "getAppointmentInformationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": true,
						"type": "string",
						"enum": [
							"BOTH",
							"E_CONSULTATION",
							"IN_CLINIC"
						]
					},
					{
						"name": "appversion",
						"in": "header",
						"description": "appversion",
						"required": false,
						"type": "string",
						"format": "string"
					},
					{
						"name": "source",
						"in": "header",
						"description": "source",
						"required": true,
						"type": "string",
						"format": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsState»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentInformation",
				"operationId": "getAppointmentInformationUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsState»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentInformation",
				"operationId": "getAppointmentInformationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsState»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentInformation",
				"operationId": "getAppointmentInformationUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsState»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentInformation",
				"operationId": "getAppointmentInformationUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsState»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentInformation",
				"operationId": "getAppointmentInformationUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsState»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentInformation",
				"operationId": "getAppointmentInformationUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsState»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/appointmentSummary": {
			"get": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentSummary",
				"operationId": "getAppointmentSummaryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AppointmentSummary»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentSummary",
				"operationId": "getAppointmentSummaryUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AppointmentSummary»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentSummary",
				"operationId": "getAppointmentSummaryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AppointmentSummary»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentSummary",
				"operationId": "getAppointmentSummaryUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AppointmentSummary»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentSummary",
				"operationId": "getAppointmentSummaryUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AppointmentSummary»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentSummary",
				"operationId": "getAppointmentSummaryUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AppointmentSummary»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getAppointmentSummary",
				"operationId": "getAppointmentSummaryUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«AppointmentSummary»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/appointmentTimeWise": {
			"get": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getTimeWiseAppointmentCount",
				"operationId": "getTimeWiseAppointmentCountUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsWBooking»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getTimeWiseAppointmentCount",
				"operationId": "getTimeWiseAppointmentCountUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsWBooking»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getTimeWiseAppointmentCount",
				"operationId": "getTimeWiseAppointmentCountUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsWBooking»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getTimeWiseAppointmentCount",
				"operationId": "getTimeWiseAppointmentCountUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsWBooking»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getTimeWiseAppointmentCount",
				"operationId": "getTimeWiseAppointmentCountUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsWBooking»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getTimeWiseAppointmentCount",
				"operationId": "getTimeWiseAppointmentCountUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsWBooking»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctors-appointment-dashboard-controller"
				],
				"summary": "getTimeWiseAppointmentCount",
				"operationId": "getTimeWiseAppointmentCountUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotsWBooking»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/commonSymptomsAndVitals": {
			"get": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "getSymptomsAndVitalData",
				"operationId": "getSymptomsAndVitalDataUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorID",
					"in": "query",
					"description": "doctorID",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Specialities»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "getSymptomsAndVitalData",
				"operationId": "getSymptomsAndVitalDataUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorID",
					"in": "query",
					"description": "doctorID",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Specialities»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "getSymptomsAndVitalData",
				"operationId": "getSymptomsAndVitalDataUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorID",
					"in": "query",
					"description": "doctorID",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Specialities»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "getSymptomsAndVitalData",
				"operationId": "getSymptomsAndVitalDataUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorID",
					"in": "query",
					"description": "doctorID",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Specialities»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "getSymptomsAndVitalData",
				"operationId": "getSymptomsAndVitalDataUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorID",
					"in": "query",
					"description": "doctorID",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Specialities»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "getSymptomsAndVitalData",
				"operationId": "getSymptomsAndVitalDataUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorID",
					"in": "query",
					"description": "doctorID",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Specialities»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "getSymptomsAndVitalData",
				"operationId": "getSymptomsAndVitalDataUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorID",
					"in": "query",
					"description": "doctorID",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Specialities»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/coverage": {
			"get": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "coverage",
				"operationId": "coverageUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Coverage»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "coverage",
				"operationId": "coverageUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Coverage»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "coverage",
				"operationId": "coverageUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Coverage»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "coverage",
				"operationId": "coverageUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Coverage»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "coverage",
				"operationId": "coverageUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Coverage»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "coverage",
				"operationId": "coverageUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Coverage»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "coverage",
				"operationId": "coverageUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Coverage»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/financialIncome": {
			"get": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "financialIncome",
				"operationId": "financialIncomeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FinancialIncome»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "financialIncome",
				"operationId": "financialIncomeUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FinancialIncome»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "financialIncome",
				"operationId": "financialIncomeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FinancialIncome»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "financialIncome",
				"operationId": "financialIncomeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FinancialIncome»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "financialIncome",
				"operationId": "financialIncomeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FinancialIncome»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "financialIncome",
				"operationId": "financialIncomeUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FinancialIncome»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "financialIncome",
				"operationId": "financialIncomeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FinancialIncome»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/me": {
			"get": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorInfo",
				"operationId": "getDoctorInfoUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInformation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorInfo",
				"operationId": "getDoctorInfoUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInformation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorInfo",
				"operationId": "getDoctorInfoUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInformation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorInfo",
				"operationId": "getDoctorInfoUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInformation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorInfo",
				"operationId": "getDoctorInfoUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInformation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorInfo",
				"operationId": "getDoctorInfoUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInformation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorInfo",
				"operationId": "getDoctorInfoUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInformation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/newVsReturningPatientDateWise": {
			"get": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "newVsReturingPatientDateWise",
				"operationId": "newVsReturingPatientDateWiseUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«NewVsReturningPatient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "newVsReturingPatientDateWise",
				"operationId": "newVsReturingPatientDateWiseUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«NewVsReturningPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "newVsReturingPatientDateWise",
				"operationId": "newVsReturingPatientDateWiseUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«NewVsReturningPatient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "newVsReturingPatientDateWise",
				"operationId": "newVsReturingPatientDateWiseUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«NewVsReturningPatient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "newVsReturingPatientDateWise",
				"operationId": "newVsReturingPatientDateWiseUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«NewVsReturningPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "newVsReturingPatientDateWise",
				"operationId": "newVsReturingPatientDateWiseUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«NewVsReturningPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "newVsReturingPatientDateWise",
				"operationId": "newVsReturingPatientDateWiseUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«NewVsReturningPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/patient/visit": {
			"get": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/patient/visit/filter": {
			"get": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientListDetail»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientListDetail»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientListDetail»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientListDetail»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientListDetail»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientListDetail»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientListDetail»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/patientListByFilter": {
			"get": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getPatientOnFilter",
				"operationId": "getPatientOnFilterUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/patientListWithDate": {
			"get": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"doctor-dashboard-controller"
				],
				"summary": "getDoctorPatientListBetweenDate",
				"operationId": "getDoctorPatientListBetweenDateUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorPatientList»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/search/existsBySlug": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "existsBySlugDoctor",
				"operationId": "existsBySlugDoctorUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "slug",
					"in": "query",
					"description": "slug",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors/search/findByIsCampTrueAndIsActiveTrue": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "findByIsCampTrueAndIsActiveTrueDoctor",
				"operationId": "findByIsCampTrueAndIsActiveTrueDoctorUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors/search/findBySlug": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "findBySlugDoctor",
				"operationId": "findBySlugDoctorUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "slug",
					"in": "query",
					"description": "slug",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors/search/findBySlugContaining": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "findBySlugContainingDoctor",
				"operationId": "findBySlugContainingDoctorUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "slug",
						"in": "query",
						"description": "slug",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctors/yourPatient": {
			"get": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "yourPatient",
				"operationId": "yourPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«YourPatient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "yourPatient",
				"operationId": "yourPatientUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«YourPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "yourPatient",
				"operationId": "yourPatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«YourPatient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "yourPatient",
				"operationId": "yourPatientUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«YourPatient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "yourPatient",
				"operationId": "yourPatientUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«YourPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "yourPatient",
				"operationId": "yourPatientUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«YourPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"analysis-report-dashboard"
				],
				"summary": "yourPatient",
				"operationId": "yourPatientUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«YourPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "findByIdDoctor",
				"operationId": "findByIdDoctorUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "saveDoctor",
				"operationId": "saveDoctorUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "deleteDoctor",
				"operationId": "deleteDoctorUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "saveDoctor",
				"operationId": "saveDoctorUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Doctor"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}/doctorInClinics": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorDoctorInClinics",
				"operationId": "doctorDoctorInClinicsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorDoctorInClinics",
				"operationId": "doctorDoctorInClinicsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorDoctorInClinics",
				"operationId": "doctorDoctorInClinicsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorDoctorInClinics",
				"operationId": "doctorDoctorInClinicsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorDoctorInClinics",
				"operationId": "doctorDoctorInClinicsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}/doctorInClinics/{doctorinclinicId}": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorDoctorInClinics",
				"operationId": "doctorDoctorInClinicsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicId",
						"in": "path",
						"description": "doctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorDoctorInClinics",
				"operationId": "doctorDoctorInClinicsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicId",
						"in": "path",
						"description": "doctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}/healthProblemTagsForDoctor": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorHealthProblemTagsForDoctor",
				"operationId": "doctorHealthProblemTagsForDoctorUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForDoctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorHealthProblemTagsForDoctor",
				"operationId": "doctorHealthProblemTagsForDoctorUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForDoctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorHealthProblemTagsForDoctor",
				"operationId": "doctorHealthProblemTagsForDoctorUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForDoctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorHealthProblemTagsForDoctor",
				"operationId": "doctorHealthProblemTagsForDoctorUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorHealthProblemTagsForDoctor",
				"operationId": "doctorHealthProblemTagsForDoctorUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForDoctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}/healthProblemTagsForDoctor/{healthproblemtagsfordoctorId}": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorHealthProblemTagsForDoctor",
				"operationId": "doctorHealthProblemTagsForDoctorUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "healthproblemtagsfordoctorId",
						"in": "path",
						"description": "healthproblemtagsfordoctorId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForDoctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorHealthProblemTagsForDoctor",
				"operationId": "doctorHealthProblemTagsForDoctorUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "healthproblemtagsfordoctorId",
						"in": "path",
						"description": "healthproblemtagsfordoctorId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}/speciality": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorSpeciality",
				"operationId": "doctorSpecialityUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorSpeciality",
				"operationId": "doctorSpecialityUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorSpeciality",
				"operationId": "doctorSpecialityUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorSpeciality",
				"operationId": "doctorSpecialityUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorSpeciality",
				"operationId": "doctorSpecialityUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}/speciality/{specialityId}": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorSpeciality",
				"operationId": "doctorSpecialityUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specialityId",
						"in": "path",
						"description": "specialityId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorSpeciality",
				"operationId": "doctorSpecialityUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specialityId",
						"in": "path",
						"description": "specialityId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}/tags": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorTags",
				"operationId": "doctorTagsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorTags",
				"operationId": "doctorTagsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorTags",
				"operationId": "doctorTagsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorTags",
				"operationId": "doctorTagsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorTags",
				"operationId": "doctorTagsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorTags»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctors/{id}/tags/{doctortagsId}": {
			"get": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorTags",
				"operationId": "doctorTagsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctortagsId",
						"in": "path",
						"description": "doctortagsId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorTags»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Doctor Entity"
				],
				"summary": "doctorTags",
				"operationId": "doctorTagsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctortagsId",
						"in": "path",
						"description": "doctortagsId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findAllDoctorInClinic",
				"operationId": "findAllDoctorInClinicUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "saveDoctorInClinic",
				"operationId": "saveDoctorInClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DoctorInClinic"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/all": {
			"get": {
				"tags": [
					"doctors-assistant-dashboard-controller"
				],
				"summary": "getAssistantDashboardData",
				"operationId": "getAssistantDashboardDataUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicForAssistantDashboard»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findActiveDics": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findActiveDicsDoctorInClinic",
				"operationId": "findActiveDicsDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«long»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findAllByClinicIdIn": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findAllByClinicIdInDoctorInClinic",
				"operationId": "findAllByClinicIdInDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicIds",
					"in": "query",
					"description": "clinicIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findAllByIdIn": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findAllByIdInDoctorInClinic",
				"operationId": "findAllByIdInDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "IDs",
					"in": "query",
					"description": "IDs",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findByClinicId": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findByClinicIdDoctorInClinic",
				"operationId": "findByClinicIdDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicId",
					"in": "query",
					"description": "clinicId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findByClinicIdIn": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findByClinicIdInDoctorInClinic",
				"operationId": "findByClinicIdInDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findByClinicNameContaining": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findByClinicNameContainingDoctorInClinic",
				"operationId": "findByClinicNameContainingDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findByDoctorId": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findByDoctorIdDoctorInClinic",
				"operationId": "findByDoctorIdDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorId",
					"in": "query",
					"description": "doctorId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findByDoctorNameContaining": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findByDoctorNameContainingDoctorInClinic",
				"operationId": "findByDoctorNameContainingDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findByDoxperUserName": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findByDoxperUserNameDoctorInClinic",
				"operationId": "findByDoxperUserNameDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doxperUserName",
					"in": "query",
					"description": "doxperUserName",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findByIdIn": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findByIdInDoctorInClinic",
				"operationId": "findByIdInDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "IDs",
					"in": "query",
					"description": "IDs",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findDistinctByDoctorNameContainingOrClinicNameContaining": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findDistinctByDoctorNameContainingOrClinicNameContainingDoctorInClinic",
				"operationId": "findDistinctByDoctorNameContainingOrClinicNameContainingDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "name1",
						"in": "query",
						"description": "name1",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/search/findDistinctByDoctorNameContainingOrClinicNameContainingAndIdIn": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findDistinctByDoctorNameContainingOrClinicNameContainingAndIdInDoctorInClinic",
				"operationId": "findDistinctByDoctorNameContainingOrClinicNameContainingAndIdInDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "name1",
						"in": "query",
						"description": "name1",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/woConsultation": {
			"get": {
				"tags": [
					"doctors-assistant-dashboard-controller"
				],
				"summary": "doctorInClinicWoConsultation",
				"operationId": "doctorInClinicWoConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinicIds",
					"in": "query",
					"description": "doctorInClinicIds",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicsWoConsultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "findByIdDoctorInClinic",
				"operationId": "findByIdDoctorInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "saveDoctorInClinic",
				"operationId": "saveDoctorInClinicUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorInClinic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "deleteDoctorInClinic",
				"operationId": "deleteDoctorInClinicUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "saveDoctorInClinic",
				"operationId": "saveDoctorInClinicUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/DoctorInClinic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/clinic": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicClinic",
				"operationId": "doctorInClinicClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicClinic",
				"operationId": "doctorInClinicClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicClinic",
				"operationId": "doctorInClinicClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicClinic",
				"operationId": "doctorInClinicClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicClinic",
				"operationId": "doctorInClinicClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/consultationAndDoxpers": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultationAndDoxpers",
				"operationId": "doctorInClinicConsultationAndDoxpersUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultationAndDoxpers",
				"operationId": "doctorInClinicConsultationAndDoxpersUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultationAndDoxpers",
				"operationId": "doctorInClinicConsultationAndDoxpersUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultationAndDoxpers",
				"operationId": "doctorInClinicConsultationAndDoxpersUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultationAndDoxpers",
				"operationId": "doctorInClinicConsultationAndDoxpersUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/consultationAndDoxpers/{consultationanddoxperId}": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultationAndDoxpers",
				"operationId": "doctorInClinicConsultationAndDoxpersUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationanddoxperId",
						"in": "path",
						"description": "consultationanddoxperId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultationAndDoxpers",
				"operationId": "doctorInClinicConsultationAndDoxpersUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationanddoxperId",
						"in": "path",
						"description": "consultationanddoxperId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/consultations": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultations",
				"operationId": "doctorInClinicConsultationsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultations",
				"operationId": "doctorInClinicConsultationsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultations",
				"operationId": "doctorInClinicConsultationsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultations",
				"operationId": "doctorInClinicConsultationsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultations",
				"operationId": "doctorInClinicConsultationsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/consultations/{consultationId}": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultations",
				"operationId": "doctorInClinicConsultationsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "path",
						"description": "consultationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicConsultations",
				"operationId": "doctorInClinicConsultationsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "path",
						"description": "consultationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/doctor": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctor",
				"operationId": "doctorInClinicDoctorUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctor",
				"operationId": "doctorInClinicDoctorUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctor",
				"operationId": "doctorInClinicDoctorUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctor",
				"operationId": "doctorInClinicDoctorUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctor",
				"operationId": "doctorInClinicDoctorUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/doctorInClinicClosedTimeSlots": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicClosedTimeSlots",
				"operationId": "doctorInClinicDoctorInClinicClosedTimeSlotsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicClosedTimeSlots",
				"operationId": "doctorInClinicDoctorInClinicClosedTimeSlotsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicClosedTimeSlots",
				"operationId": "doctorInClinicDoctorInClinicClosedTimeSlotsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicClosedTimeSlots",
				"operationId": "doctorInClinicDoctorInClinicClosedTimeSlotsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicClosedTimeSlots",
				"operationId": "doctorInClinicDoctorInClinicClosedTimeSlotsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicClosedTimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/doctorInClinicClosedTimeSlots/{doctorinclinicclosedtimeslotId}": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicClosedTimeSlots",
				"operationId": "doctorInClinicDoctorInClinicClosedTimeSlotsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicclosedtimeslotId",
						"in": "path",
						"description": "doctorinclinicclosedtimeslotId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicClosedTimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicClosedTimeSlots",
				"operationId": "doctorInClinicDoctorInClinicClosedTimeSlotsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicclosedtimeslotId",
						"in": "path",
						"description": "doctorinclinicclosedtimeslotId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/doctorInClinicConfigurations": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicConfigurations",
				"operationId": "doctorInClinicDoctorInClinicConfigurationsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicConfigurations",
				"operationId": "doctorInClinicDoctorInClinicConfigurationsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicConfigurations",
				"operationId": "doctorInClinicDoctorInClinicConfigurationsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicConfigurations",
				"operationId": "doctorInClinicDoctorInClinicConfigurationsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicConfigurations",
				"operationId": "doctorInClinicDoctorInClinicConfigurationsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinicConfiguration»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/doctorInClinicConfigurations/{doctorinclinicconfigurationId}": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicConfigurations",
				"operationId": "doctorInClinicDoctorInClinicConfigurationsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicconfigurationId",
						"in": "path",
						"description": "doctorinclinicconfigurationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinicConfiguration»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorInClinicConfigurations",
				"operationId": "doctorInClinicDoctorInClinicConfigurationsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicconfigurationId",
						"in": "path",
						"description": "doctorinclinicconfigurationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/doctorMessageAndDoctorInClinics": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorMessageAndDoctorInClinics",
				"operationId": "doctorInClinicDoctorMessageAndDoctorInClinicsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorMessageAndDoctorInClinics",
				"operationId": "doctorInClinicDoctorMessageAndDoctorInClinicsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorMessageAndDoctorInClinics",
				"operationId": "doctorInClinicDoctorMessageAndDoctorInClinicsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorMessageAndDoctorInClinics",
				"operationId": "doctorInClinicDoctorMessageAndDoctorInClinicsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorMessageAndDoctorInClinics",
				"operationId": "doctorInClinicDoctorMessageAndDoctorInClinicsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorMessageAndDoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/doctorMessageAndDoctorInClinics/{doctormessageanddoctorinclinicId}": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorMessageAndDoctorInClinics",
				"operationId": "doctorInClinicDoctorMessageAndDoctorInClinicsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctormessageanddoctorinclinicId",
						"in": "path",
						"description": "doctormessageanddoctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorMessageAndDoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicDoctorMessageAndDoctorInClinics",
				"operationId": "doctorInClinicDoctorMessageAndDoctorInClinicsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctormessageanddoctorinclinicId",
						"in": "path",
						"description": "doctormessageanddoctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/timeSlots": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicTimeSlots",
				"operationId": "doctorInClinicTimeSlotsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicTimeSlots",
				"operationId": "doctorInClinicTimeSlotsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicTimeSlots",
				"operationId": "doctorInClinicTimeSlotsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicTimeSlots",
				"operationId": "doctorInClinicTimeSlotsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicTimeSlots",
				"operationId": "doctorInClinicTimeSlotsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/doctorsinclinic/{id}/timeSlots/{timeslotId}": {
			"get": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicTimeSlots",
				"operationId": "doctorInClinicTimeSlotsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "timeslotId",
						"in": "path",
						"description": "timeslotId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"DoctorInClinic Entity"
				],
				"summary": "doctorInClinicTimeSlots",
				"operationId": "doctorInClinicTimeSlotsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "timeslotId",
						"in": "path",
						"description": "timeslotId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/dtil/bulk-upload": {
			"post": {
				"tags": [
					"diagnostic-revamp-controller"
				],
				"summary": "uploadDtils",
				"operationId": "uploadDtilsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/DtilBulkUploadDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticErrorDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/dtst-bulk-post": {
			"post": {
				"tags": [
					"diagnostic-type-and-specimen-type-controller"
				],
				"summary": "bulkPostDiagnosticTypeAndSpecimenType",
				"operationId": "bulkPostDiagnosticTypeAndSpecimenTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticTypeAndSpecimenTypeDto",
					"description": "diagnosticTypeAndSpecimenTypeDto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/DiagnosticTypeAndSpecimenTypeDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticTypeAndSpecimenTypeErrDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/e-prescription/order": {
			"post": {
				"tags": [
					"recommendation-pos-controller"
				],
				"summary": "fetchInfoForConsultationThroughEPrescription",
				"operationId": "fetchInfoForConsultationThroughEPrescriptionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/RecommendationPosDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationsForEPrescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/es/clinic-search": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "getFilteredClinics",
				"operationId": "getFilteredClinicsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "asc",
						"in": "query",
						"description": "asc",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "available",
						"in": "query",
						"description": "available",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "city",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "cluster",
						"in": "query",
						"description": "cluster",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "currentDate",
						"in": "query",
						"description": "currentDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isCamp",
						"in": "query",
						"description": "isCamp",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "isListed",
						"in": "query",
						"description": "isListed",
						"required": false,
						"type": "boolean",
						"default": true
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "slug",
						"in": "query",
						"description": "slug",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "sortBy",
						"required": false,
						"type": "string"
					},
					{
						"name": "speciality",
						"in": "query",
						"description": "speciality",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/esearch/patient/search/visit/patient": {
			"get": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "searchInVisited",
				"operationId": "searchInVisitedUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "searchInVisited",
				"operationId": "searchInVisitedUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "searchInVisited",
				"operationId": "searchInVisitedUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "searchInVisited",
				"operationId": "searchInVisitedUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "searchInVisited",
				"operationId": "searchInVisitedUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "searchInVisited",
				"operationId": "searchInVisitedUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "searchInVisited",
				"operationId": "searchInVisitedUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/existingCondition": {
			"get": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "findAllExistingCondition",
				"operationId": "findAllExistingConditionUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "saveExistingCondition",
				"operationId": "saveExistingConditionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ExistingCondition"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingCondition»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/existingCondition/{id}": {
			"get": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "findByIdExistingCondition",
				"operationId": "findByIdExistingConditionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingCondition»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "saveExistingCondition",
				"operationId": "saveExistingConditionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ExistingCondition"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingCondition»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "deleteExistingCondition",
				"operationId": "deleteExistingConditionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "saveExistingCondition",
				"operationId": "saveExistingConditionUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ExistingCondition"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingCondition»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/existingCondition/{id}/consultation": {
			"get": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionConsultation",
				"operationId": "existingConditionConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionConsultation",
				"operationId": "existingConditionConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionConsultation",
				"operationId": "existingConditionConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionConsultation",
				"operationId": "existingConditionConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionConsultation",
				"operationId": "existingConditionConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/existingCondition/{id}/existingConditionType": {
			"get": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionExistingConditionType",
				"operationId": "existingConditionExistingConditionTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingConditionType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionExistingConditionType",
				"operationId": "existingConditionExistingConditionTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingConditionType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionExistingConditionType",
				"operationId": "existingConditionExistingConditionTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingConditionType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionExistingConditionType",
				"operationId": "existingConditionExistingConditionTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ExistingCondition Entity"
				],
				"summary": "existingConditionExistingConditionType",
				"operationId": "existingConditionExistingConditionTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingConditionType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/existingConditionType": {
			"get": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "findAllExistingConditionType",
				"operationId": "findAllExistingConditionTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingConditionType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "saveExistingConditionType",
				"operationId": "saveExistingConditionTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ExistingConditionType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingConditionType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/existingConditionType/search/findByNameContainingAndIsActiveTrue": {
			"get": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "findByNameContainingAndIsActiveTrueExistingConditionType",
				"operationId": "findByNameContainingAndIsActiveTrueExistingConditionTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingConditionType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/existingConditionType/{id}": {
			"get": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "findByIdExistingConditionType",
				"operationId": "findByIdExistingConditionTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingConditionType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "saveExistingConditionType",
				"operationId": "saveExistingConditionTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ExistingConditionType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingConditionType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "deleteExistingConditionType",
				"operationId": "deleteExistingConditionTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "saveExistingConditionType",
				"operationId": "saveExistingConditionTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ExistingConditionType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingConditionType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/existingConditionType/{id}/existingConditions": {
			"get": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "existingConditionTypeExistingConditions",
				"operationId": "existingConditionTypeExistingConditionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "existingConditionTypeExistingConditions",
				"operationId": "existingConditionTypeExistingConditionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "existingConditionTypeExistingConditions",
				"operationId": "existingConditionTypeExistingConditionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "existingConditionTypeExistingConditions",
				"operationId": "existingConditionTypeExistingConditionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "existingConditionTypeExistingConditions",
				"operationId": "existingConditionTypeExistingConditionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ExistingCondition»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/existingConditionType/{id}/existingConditions/{existingconditionId}": {
			"get": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "existingConditionTypeExistingConditions",
				"operationId": "existingConditionTypeExistingConditionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "existingconditionId",
						"in": "path",
						"description": "existingconditionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ExistingCondition»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ExistingConditionType Entity"
				],
				"summary": "existingConditionTypeExistingConditions",
				"operationId": "existingConditionTypeExistingConditionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "existingconditionId",
						"in": "path",
						"description": "existingconditionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/families": {
			"get": {
				"tags": [
					"Family Entity"
				],
				"summary": "findAllFamily",
				"operationId": "findAllFamilyUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Family»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Family Entity"
				],
				"summary": "saveFamily",
				"operationId": "saveFamilyUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Family"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Family»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/families/{id}": {
			"get": {
				"tags": [
					"Family Entity"
				],
				"summary": "findByIdFamily",
				"operationId": "findByIdFamilyUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Family»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Family Entity"
				],
				"summary": "saveFamily",
				"operationId": "saveFamilyUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Family"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Family»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Family Entity"
				],
				"summary": "deleteFamily",
				"operationId": "deleteFamilyUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Family Entity"
				],
				"summary": "saveFamily",
				"operationId": "saveFamilyUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Family"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Family»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/families/{id}/patient": {
			"get": {
				"tags": [
					"Family Entity"
				],
				"summary": "familyPatient",
				"operationId": "familyPatientUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Family Entity"
				],
				"summary": "familyPatient",
				"operationId": "familyPatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Family Entity"
				],
				"summary": "familyPatient",
				"operationId": "familyPatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Family Entity"
				],
				"summary": "familyPatient",
				"operationId": "familyPatientUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Family Entity"
				],
				"summary": "familyPatient",
				"operationId": "familyPatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/families/{id}/patient/{patientId}": {
			"get": {
				"tags": [
					"Family Entity"
				],
				"summary": "familyPatient",
				"operationId": "familyPatientUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "path",
						"description": "patientId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Family Entity"
				],
				"summary": "familyPatient",
				"operationId": "familyPatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "path",
						"description": "patientId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/family-diagnostic": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "fetchTestsForFamily",
				"operationId": "fetchTestsForFamilyUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "duration",
					"in": "query",
					"description": "duration",
					"required": false,
					"type": "integer",
					"default": 10,
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/FamilyTestDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/feedbackparameters": {
			"get": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "findAllFeedbackParameter",
				"operationId": "findAllFeedbackParameterUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "saveFeedbackParameter",
				"operationId": "saveFeedbackParameterUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/FeedbackParameter"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/feedbackparameters/search/fetchAllNPS": {
			"get": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "fetchAllNPSFeedbackParameter",
				"operationId": "fetchAllNPSFeedbackParameterUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/feedbackparameters/search/fetchAllReviewParameter": {
			"get": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "fetchAllReviewParameterFeedbackParameter",
				"operationId": "fetchAllReviewParameterFeedbackParameterUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/feedbackparameters/{id}": {
			"get": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "findByIdFeedbackParameter",
				"operationId": "findByIdFeedbackParameterUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "saveFeedbackParameter",
				"operationId": "saveFeedbackParameterUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FeedbackParameter"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "deleteFeedbackParameter",
				"operationId": "deleteFeedbackParameterUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "saveFeedbackParameter",
				"operationId": "saveFeedbackParameterUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/FeedbackParameter"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/feedbackparameters/{id}/children": {
			"get": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterChildren",
				"operationId": "feedbackParameterChildrenUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterChildren",
				"operationId": "feedbackParameterChildrenUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterChildren",
				"operationId": "feedbackParameterChildrenUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterChildren",
				"operationId": "feedbackParameterChildrenUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterChildren",
				"operationId": "feedbackParameterChildrenUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FeedbackParameter»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/feedbackparameters/{id}/children/{feedbackparameterId}": {
			"get": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterChildren",
				"operationId": "feedbackParameterChildrenUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "feedbackparameterId",
						"in": "path",
						"description": "feedbackparameterId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterChildren",
				"operationId": "feedbackParameterChildrenUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "feedbackparameterId",
						"in": "path",
						"description": "feedbackparameterId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/feedbackparameters/{id}/parent": {
			"get": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterParent",
				"operationId": "feedbackParameterParentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterParent",
				"operationId": "feedbackParameterParentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterParent",
				"operationId": "feedbackParameterParentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterParent",
				"operationId": "feedbackParameterParentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"FeedbackParameter Entity"
				],
				"summary": "feedbackParameterParent",
				"operationId": "feedbackParameterParentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/feedbacks": {
			"get": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "findAllFeedback",
				"operationId": "findAllFeedbackUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Feedback»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "saveFeedback",
				"operationId": "saveFeedbackUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Feedback"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Feedback»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/feedbacks/{id}": {
			"get": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "findByIdFeedback",
				"operationId": "findByIdFeedbackUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Feedback»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "saveFeedback",
				"operationId": "saveFeedbackUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Feedback"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Feedback»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "deleteFeedback",
				"operationId": "deleteFeedbackUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "saveFeedback",
				"operationId": "saveFeedbackUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Feedback"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Feedback»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/feedbacks/{id}/doctorInClinic": {
			"get": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackDoctorInClinic",
				"operationId": "feedbackDoctorInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackDoctorInClinic",
				"operationId": "feedbackDoctorInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackDoctorInClinic",
				"operationId": "feedbackDoctorInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackDoctorInClinic",
				"operationId": "feedbackDoctorInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackDoctorInClinic",
				"operationId": "feedbackDoctorInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/feedbacks/{id}/parameter": {
			"get": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackParameter",
				"operationId": "feedbackParameterUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackParameter",
				"operationId": "feedbackParameterUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackParameter",
				"operationId": "feedbackParameterUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackParameter",
				"operationId": "feedbackParameterUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Feedback Entity"
				],
				"summary": "feedbackParameter",
				"operationId": "feedbackParameterUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/fetch-labs": {
			"get": {
				"tags": [
					"diagnostic-type-in-lab-controller"
				],
				"summary": "fetchDiagnosticLabs",
				"operationId": "fetchDiagnosticLabsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«DiagnosticLabsForClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/fetch-medicine-from-tppos": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesFromTPPOS",
				"operationId": "fetchMedicinesFromTPPOSUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«MedicineResponseDto»»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesFromTPPOS",
				"operationId": "fetchMedicinesFromTPPOSUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«MedicineResponseDto»»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesFromTPPOS",
				"operationId": "fetchMedicinesFromTPPOSUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«MedicineResponseDto»»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesFromTPPOS",
				"operationId": "fetchMedicinesFromTPPOSUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«MedicineResponseDto»»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesFromTPPOS",
				"operationId": "fetchMedicinesFromTPPOSUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«MedicineResponseDto»»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesFromTPPOS",
				"operationId": "fetchMedicinesFromTPPOSUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«MedicineResponseDto»»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesFromTPPOS",
				"operationId": "fetchMedicinesFromTPPOSUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«MedicineResponseDto»»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/fetch-speciality": {
			"get": {
				"tags": [
					"speciality-controller"
				],
				"summary": "fetchSpecialities",
				"operationId": "fetchSpecialitiesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«SpecialitiesForRecommendation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/fetch-tests": {
			"get": {
				"tags": [
					"diagnostic-type-in-lab-controller"
				],
				"summary": "fetchDiagnosticLabs",
				"operationId": "fetchDiagnosticLabsUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/fetch-labs-by-ids": {
				"get": {
                  "tags": [
                      "diagnostic-type-in-lab-controller"
                  ],
                  "summary": "fetchDiagnosticLabByLabIds",
                  "operationId": "fetchDiagnosticLabByLabIdsUsingGET",
                  "produces": [
                      "*/*"
                  ],
                  "parameters": [{
                      "name": "labIds",
                      "in": "query",
                      "description": "labIds",
                      "required": true,
					  "type": "array",
					  "items": {
							"type": "integer",
							"format": "int64"
					  },
					"collectionFormat": "multi"
                  }],
                  "responses": {
                      "200": {
                          "description": "OK",
                          "schema": {
                              "type": "array",
                              "items": {
                                  "$ref": "#/definitions/DiagnosticLabs"
                              }
                          }
                      },
                      "401": {
                          "description": "Unauthorized"
                      },
                      "403": {
                          "description": "Forbidden"
                      },
                      "404": {
                          "description": "Not Found"
                      }
                  }
                }
		},
		"/api/v1/emr/fetch/time-slots": {
			"get": {
				"tags": [
					"time-slot-controller"
				],
				"summary": "fetchTimeSlots",
				"operationId": "fetchTimeSlotsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TimeSlotGroupsForTimeSlot"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/find-cluster-by-diagnosticlab-and-zipcode": {
			"get": {
				"tags": [
					"diagnostic-labs-and-zipcode-controller"
				],
				"summary": "findActiveClusterByDiagnosticLabAndZipcode",
				"operationId": "findActiveClusterByDiagnosticLabAndZipcodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticLab",
						"in": "query",
						"description": "diagnosticLab",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "zipcode",
						"in": "query",
						"description": "zipcode",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticLabsAndZipcodes"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/follow-up/bydate": {
			"get": {
				"tags": [
					"follow-up-controller"
				],
				"summary": "getFollowUpByDate",
				"operationId": "getFollowUpByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "date",
					"in": "query",
					"description": "date",
					"required": false,
					"type": "string",
					"format": "date-time"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«FollowUpsForToday»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/followups": {
			"get": {
				"tags": [
					"Followup Entity"
				],
				"summary": "findAllFollowup",
				"operationId": "findAllFollowupUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Followup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Followup Entity"
				],
				"summary": "saveFollowup",
				"operationId": "saveFollowupUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Followup"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Followup»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/followups/search/findAllByConsultationIdOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"Followup Entity"
				],
				"summary": "findAllByConsultationIdOrderByCreatedAtDescFollowup",
				"operationId": "findAllByConsultationIdOrderByCreatedAtDescFollowupUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Followup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/followups/search/findByConsultationId": {
			"get": {
				"tags": [
					"Followup Entity"
				],
				"summary": "findByConsultationIdFollowup",
				"operationId": "findByConsultationIdFollowupUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Followup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/followups/search/findByFollowupDateGreaterThanEqualAndFollowupDateLessThan": {
			"get": {
				"tags": [
					"Followup Entity"
				],
				"summary": "findByFollowupDateGreaterThanEqualAndFollowupDateLessThanFollowup",
				"operationId": "findByFollowupDateGreaterThanEqualAndFollowupDateLessThanFollowupUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Followup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/followups/{id}": {
			"get": {
				"tags": [
					"Followup Entity"
				],
				"summary": "findByIdFollowup",
				"operationId": "findByIdFollowupUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Followup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Followup Entity"
				],
				"summary": "saveFollowup",
				"operationId": "saveFollowupUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Followup"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Followup»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Followup Entity"
				],
				"summary": "deleteFollowup",
				"operationId": "deleteFollowupUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Followup Entity"
				],
				"summary": "saveFollowup",
				"operationId": "saveFollowupUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Followup"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Followup»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/followups/{id}/consultation": {
			"get": {
				"tags": [
					"Followup Entity"
				],
				"summary": "followupConsultation",
				"operationId": "followupConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Followup Entity"
				],
				"summary": "followupConsultation",
				"operationId": "followupConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Followup Entity"
				],
				"summary": "followupConsultation",
				"operationId": "followupConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Followup Entity"
				],
				"summary": "followupConsultation",
				"operationId": "followupConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Followup Entity"
				],
				"summary": "followupConsultation",
				"operationId": "followupConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/generate-patient-history": {
			"post": {
				"tags": [
					"code-controller"
				],
				"summary": "generateFileWithCode",
				"operationId": "generateFileWithCodeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/get-active-dics": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "getActiveDics",
				"operationId": "getActiveDicsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "integer",
								"format": "int64"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/get-details-for-order": {
			"post": {
				"tags": [
					"order-controller"
				],
				"summary": "getOrderDetails",
				"operationId": "getOrderDetailsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "orderDetailsDto",
					"description": "orderDetailsDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OrderDetailsDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OrderDetailsDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/get-diagnostic-type-in-lab": {
			"post": {
				"tags": [
					"diagnostic-type-in-lab-controller"
				],
				"summary": "getDiagnosticLabsBasedOnTestIdAndLabId",
				"operationId": "getDiagnosticLabsBasedOnTestIdAndLabIdUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticTypeInLabDtos",
					"description": "diagnosticTypeInLabDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/DiagnosticTypeInLabDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticTypeInLabDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/fetch-diagnostic-type-in-labs/by-id": {
			"get": {
				"tags": [
					"diagnostic-type-in-lab-controller"
				],
				"summary": "fetchDiagnosticTypeInLabsById",
				"operationId": "fetchDiagnosticTypeInLabsById",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dtilId",
					"in": "query",
					"description": "dtilId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticTypeInLabsForTests"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},

		"/api/v1/emr/getlocationdetails": {
			"get": {
				"tags": [
					"location-details-controller"
				],
				"summary": "getLocationDetails",
				"operationId": "getLocationDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CityAndLocalityDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForDoctor": {
			"get": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "findAllHealthProblemTagsForDoctor",
				"operationId": "findAllHealthProblemTagsForDoctorUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForDoctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "saveHealthProblemTagsForDoctor",
				"operationId": "saveHealthProblemTagsForDoctorUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/HealthProblemTagsForDoctor"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForDoctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForDoctor/search/searchWithName": {
			"get": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "searchWithNameHealthProblemTagsForDoctor",
				"operationId": "searchWithNameHealthProblemTagsForDoctorUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "healthTags",
					"in": "query",
					"description": "healthTags",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForDoctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForDoctor/{id}": {
			"get": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "findByIdHealthProblemTagsForDoctor",
				"operationId": "findByIdHealthProblemTagsForDoctorUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForDoctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "saveHealthProblemTagsForDoctor",
				"operationId": "saveHealthProblemTagsForDoctorUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/HealthProblemTagsForDoctor"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForDoctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "deleteHealthProblemTagsForDoctor",
				"operationId": "deleteHealthProblemTagsForDoctorUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "saveHealthProblemTagsForDoctor",
				"operationId": "saveHealthProblemTagsForDoctorUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/HealthProblemTagsForDoctor"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForDoctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForDoctor/{id}/doctors": {
			"get": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "healthProblemTagsForDoctorDoctors",
				"operationId": "healthProblemTagsForDoctorDoctorsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "healthProblemTagsForDoctorDoctors",
				"operationId": "healthProblemTagsForDoctorDoctorsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "healthProblemTagsForDoctorDoctors",
				"operationId": "healthProblemTagsForDoctorDoctorsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "healthProblemTagsForDoctorDoctors",
				"operationId": "healthProblemTagsForDoctorDoctorsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "healthProblemTagsForDoctorDoctors",
				"operationId": "healthProblemTagsForDoctorDoctorsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForDoctor/{id}/doctors/{doctorId}": {
			"get": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "healthProblemTagsForDoctorDoctors",
				"operationId": "healthProblemTagsForDoctorDoctorsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorId",
						"in": "path",
						"description": "doctorId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"HealthProblemTagsForDoctor Entity"
				],
				"summary": "healthProblemTagsForDoctorDoctors",
				"operationId": "healthProblemTagsForDoctorDoctorsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorId",
						"in": "path",
						"description": "doctorId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForSpeciality": {
			"get": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "findAllHealthProblemTagsForSpeciality",
				"operationId": "findAllHealthProblemTagsForSpecialityUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForSpeciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "saveHealthProblemTagsForSpeciality",
				"operationId": "saveHealthProblemTagsForSpecialityUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/HealthProblemTagsForSpeciality"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForSpeciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForSpeciality/search/searchWithName": {
			"get": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "searchWithNameHealthProblemTagsForSpeciality",
				"operationId": "searchWithNameHealthProblemTagsForSpecialityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "healthTags",
					"in": "query",
					"description": "healthTags",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForSpeciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForSpeciality/{id}": {
			"get": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "findByIdHealthProblemTagsForSpeciality",
				"operationId": "findByIdHealthProblemTagsForSpecialityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForSpeciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "saveHealthProblemTagsForSpeciality",
				"operationId": "saveHealthProblemTagsForSpecialityUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/HealthProblemTagsForSpeciality"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForSpeciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "deleteHealthProblemTagsForSpeciality",
				"operationId": "deleteHealthProblemTagsForSpecialityUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "saveHealthProblemTagsForSpeciality",
				"operationId": "saveHealthProblemTagsForSpecialityUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/HealthProblemTagsForSpeciality"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForSpeciality»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForSpeciality/{id}/specialities": {
			"get": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "healthProblemTagsForSpecialitySpecialities",
				"operationId": "healthProblemTagsForSpecialitySpecialitiesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "healthProblemTagsForSpecialitySpecialities",
				"operationId": "healthProblemTagsForSpecialitySpecialitiesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "healthProblemTagsForSpecialitySpecialities",
				"operationId": "healthProblemTagsForSpecialitySpecialitiesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "healthProblemTagsForSpecialitySpecialities",
				"operationId": "healthProblemTagsForSpecialitySpecialitiesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "healthProblemTagsForSpecialitySpecialities",
				"operationId": "healthProblemTagsForSpecialitySpecialitiesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/healthProblemTagsForSpeciality/{id}/specialities/{specialityId}": {
			"get": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "healthProblemTagsForSpecialitySpecialities",
				"operationId": "healthProblemTagsForSpecialitySpecialitiesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specialityId",
						"in": "path",
						"description": "specialityId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"HealthProblemTagsForSpeciality Entity"
				],
				"summary": "healthProblemTagsForSpecialitySpecialities",
				"operationId": "healthProblemTagsForSpecialitySpecialitiesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specialityId",
						"in": "path",
						"description": "specialityId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/homepage/patient/app": {
			"get": {
				"tags": [
					"patient-app-consolidate-controller"
				],
				"summary": "getClubHomePageConsolidatedApiCall",
				"operationId": "getClubHomePageConsolidatedApiCallUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": false,
						"type": "string"
					},
					{
						"name": "currentDate",
						"in": "query",
						"description": "currentDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "interval",
						"in": "query",
						"description": "interval",
						"required": false,
						"type": "integer",
						"default": 7,
						"format": "int64"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsolidateHomeApis"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/initialize/documentation": {
			"get": {
				"tags": [
					"swaggergen-controller"
				],
				"summary": "initDocs",
				"operationId": "initDocsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"swaggergen-controller"
				],
				"summary": "initDocs",
				"operationId": "initDocsUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"swaggergen-controller"
				],
				"summary": "initDocs",
				"operationId": "initDocsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"swaggergen-controller"
				],
				"summary": "initDocs",
				"operationId": "initDocsUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"swaggergen-controller"
				],
				"summary": "initDocs",
				"operationId": "initDocsUsingDELETE",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"swaggergen-controller"
				],
				"summary": "initDocs",
				"operationId": "initDocsUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"swaggergen-controller"
				],
				"summary": "initDocs",
				"operationId": "initDocsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResponseEntity"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/issues": {
			"get": {
				"tags": [
					"Issue Entity"
				],
				"summary": "findAllIssue",
				"operationId": "findAllIssueUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Issue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Issue Entity"
				],
				"summary": "saveIssue",
				"operationId": "saveIssueUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Issue"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Issue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/issues/search/findByTypeInAndIsActiveTrue": {
			"get": {
				"tags": [
					"Issue Entity"
				],
				"summary": "findByTypeInAndIsActiveTrueIssue",
				"operationId": "findByTypeInAndIsActiveTrueIssueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "types",
						"in": "query",
						"description": "types",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"MEDICINE",
								"DIAGNOSTIC",
								"OTHER",
								"REGISTRATION",
								"CONSULTATION",
								"QA"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Issue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/issues/{id}": {
			"get": {
				"tags": [
					"Issue Entity"
				],
				"summary": "findByIdIssue",
				"operationId": "findByIdIssueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Issue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Issue Entity"
				],
				"summary": "saveIssue",
				"operationId": "saveIssueUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Issue"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Issue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Issue Entity"
				],
				"summary": "deleteIssue",
				"operationId": "deleteIssueUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Issue Entity"
				],
				"summary": "saveIssue",
				"operationId": "saveIssueUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Issue"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Issue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/issues/{id}/transcriptionIssues": {
			"get": {
				"tags": [
					"Issue Entity"
				],
				"summary": "issueTranscriptionIssues",
				"operationId": "issueTranscriptionIssuesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Issue Entity"
				],
				"summary": "issueTranscriptionIssues",
				"operationId": "issueTranscriptionIssuesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Issue Entity"
				],
				"summary": "issueTranscriptionIssues",
				"operationId": "issueTranscriptionIssuesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Issue Entity"
				],
				"summary": "issueTranscriptionIssues",
				"operationId": "issueTranscriptionIssuesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Issue Entity"
				],
				"summary": "issueTranscriptionIssues",
				"operationId": "issueTranscriptionIssuesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/issues/{id}/transcriptionIssues/{transcriptionissueId}": {
			"get": {
				"tags": [
					"Issue Entity"
				],
				"summary": "issueTranscriptionIssues",
				"operationId": "issueTranscriptionIssuesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionissueId",
						"in": "path",
						"description": "transcriptionissueId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Issue Entity"
				],
				"summary": "issueTranscriptionIssues",
				"operationId": "issueTranscriptionIssuesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionissueId",
						"in": "path",
						"description": "transcriptionissueId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/lab-and-zipcode-and-clustername": {
			"post": {
				"tags": [
					"diagnostic-labs-and-zipcode-controller"
				],
				"summary": "diagnosticLabsAndZipcodeAndClusterName",
				"operationId": "diagnosticLabsAndZipcodeAndClusterNameUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "zipcodeAndClusterNameDto",
					"description": "zipcodeAndClusterNameDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ZipcodeAndClusterNameDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DiagnosticLabsAndZipcodes"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/lab/edit": {
			"post": {
				"tags": [
					"bulk-upload-controller"
				],
				"summary": "patchLabAndAddClinic",
				"operationId": "patchLabAndAddClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ClinicLabDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/lab/set-clinic": {
			"post": {
				"tags": [
					"bulk-upload-controller"
				],
				"summary": "addClinicsToLab",
				"operationId": "addClinicsToLabUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ClinicLabDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/manufacturer/bulk-post": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postManufacturer",
				"operationId": "postManufacturerUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "manufacturerDtos",
					"description": "manufacturerDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineUniverseBulkUploadDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/manufacturers": {
			"get": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "findAllManufacturer",
				"operationId": "findAllManufacturerUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Manufacturer»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "saveManufacturer",
				"operationId": "saveManufacturerUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Manufacturer"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Manufacturer»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/manufacturers/{id}": {
			"get": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "findByIdManufacturer",
				"operationId": "findByIdManufacturerUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Manufacturer»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "saveManufacturer",
				"operationId": "saveManufacturerUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Manufacturer"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Manufacturer»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "deleteManufacturer",
				"operationId": "deleteManufacturerUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "saveManufacturer",
				"operationId": "saveManufacturerUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Manufacturer"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Manufacturer»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/manufacturers/{id}/brands": {
			"get": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "manufacturerBrands",
				"operationId": "manufacturerBrandsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Brand»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "manufacturerBrands",
				"operationId": "manufacturerBrandsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Brand»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "manufacturerBrands",
				"operationId": "manufacturerBrandsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Brand»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "manufacturerBrands",
				"operationId": "manufacturerBrandsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "manufacturerBrands",
				"operationId": "manufacturerBrandsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Brand»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/manufacturers/{id}/brands/{brandId}": {
			"get": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "manufacturerBrands",
				"operationId": "manufacturerBrandsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "brandId",
						"in": "path",
						"description": "brandId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Manufacturer Entity"
				],
				"summary": "manufacturerBrands",
				"operationId": "manufacturerBrandsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "brandId",
						"in": "path",
						"description": "brandId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/meddo-lite/leads": {
			"get": {
				"tags": [
					"meddo-lite-controller"
				],
				"summary": "fetchDataForLeads",
				"operationId": "fetchDataForLeadsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "deferred",
						"in": "query",
						"description": "deferred",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«ConsultationsForTranscriptionRevamp»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-diagnostic-equipment": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "fetchMedicinesOrDiagnostics",
				"operationId": "fetchMedicinesOrDiagnosticsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string",
						"default": "medicine"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OrderSearchObject"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-diagnostic-equipment/details": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "fetchMedicinesOrDiagnosticsDetails",
				"operationId": "fetchMedicinesOrDiagnosticsDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string",
						"default": "medicine"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SearchDetails"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-diagnostic-equipment/popular": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "fetchMedicinesOrDiagnosticsBasedOnPopularity",
				"operationId": "fetchMedicinesOrDiagnosticsBasedOnPopularityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string",
						"default": "medicine"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OrderSearchObject"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-diagnostic-equipment/popular/by-family": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "fetchPopularSearchAndFamilyTest",
				"operationId": "fetchPopularSearchAndFamilyTestUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "duration",
						"in": "query",
						"description": "duration",
						"required": false,
						"type": "integer",
						"default": 10,
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string",
						"default": "medicine"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PopularSearchAndFamilyTest"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-general/bulk-post": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postMedicineGeneral",
				"operationId": "postMedicineGeneralUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineGeneralDtos",
					"description": "medicineGeneralDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineUniverseBulkUploadDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-generals": {
			"get": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "findAllMedicineGeneral",
				"operationId": "findAllMedicineGeneralUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineGeneral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "saveMedicineGeneral",
				"operationId": "saveMedicineGeneralUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicineGeneral"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-generals/search/findAllByIdIn": {
			"get": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "findAllByIdInMedicineGeneral",
				"operationId": "findAllByIdInMedicineGeneralUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "medicineGeneralIds",
					"in": "query",
					"description": "medicineGeneralIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineGeneral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-generals/{id}": {
			"get": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "findByIdMedicineGeneral",
				"operationId": "findByIdMedicineGeneralUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "saveMedicineGeneral",
				"operationId": "saveMedicineGeneralUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicineGeneral"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "deleteMedicineGeneral",
				"operationId": "deleteMedicineGeneralUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "saveMedicineGeneral",
				"operationId": "saveMedicineGeneralUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicineGeneral"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-generals/{id}/medicineSalts": {
			"get": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicineSalts",
				"operationId": "medicineGeneralMedicineSaltsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicineSalts",
				"operationId": "medicineGeneralMedicineSaltsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicineSalts",
				"operationId": "medicineGeneralMedicineSaltsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicineSalts",
				"operationId": "medicineGeneralMedicineSaltsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicineSalts",
				"operationId": "medicineGeneralMedicineSaltsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-generals/{id}/medicineSalts/{medicinesaltId}": {
			"get": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicineSalts",
				"operationId": "medicineGeneralMedicineSaltsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicinesaltId",
						"in": "path",
						"description": "medicinesaltId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineSalt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicineSalts",
				"operationId": "medicineGeneralMedicineSaltsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicinesaltId",
						"in": "path",
						"description": "medicinesaltId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-generals/{id}/medicines": {
			"get": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicines",
				"operationId": "medicineGeneralMedicinesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicines",
				"operationId": "medicineGeneralMedicinesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicines",
				"operationId": "medicineGeneralMedicinesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicines",
				"operationId": "medicineGeneralMedicinesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicines",
				"operationId": "medicineGeneralMedicinesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-generals/{id}/medicines/{medicineId}": {
			"get": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicines",
				"operationId": "medicineGeneralMedicinesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineId",
						"in": "path",
						"description": "medicineId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineGeneral Entity"
				],
				"summary": "medicineGeneralMedicines",
				"operationId": "medicineGeneralMedicinesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineId",
						"in": "path",
						"description": "medicineId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-in-clinic/batch/exists": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "isBatchExists",
				"operationId": "isBatchExistsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchNumber",
						"in": "query",
						"description": "batchNumber",
						"required": true,
						"type": "string"
					},
					{
						"name": "micId",
						"in": "query",
						"description": "micId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventories»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-in-clinic/bulk-post": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postMedicineInClinic",
				"operationId": "postMedicineInClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineDtos",
					"description": "medicineDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineUniverseBulkUploadDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-in-clinic/post": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postSingleMedicineInClinic",
				"operationId": "postSingleMedicineInClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicineUniverseBulkUploadDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-in-clinic/search": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinic",
				"operationId": "searchMedicinesInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinic",
				"operationId": "searchMedicinesInClinicUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinic",
				"operationId": "searchMedicinesInClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinic",
				"operationId": "searchMedicinesInClinicUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinic",
				"operationId": "searchMedicinesInClinicUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinic",
				"operationId": "searchMedicinesInClinicUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinic",
				"operationId": "searchMedicinesInClinicUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-in-clinic/search/v2": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinicPreferenceWise",
				"operationId": "searchMedicinesInClinicPreferenceWiseUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinicPreferenceWise",
				"operationId": "searchMedicinesInClinicPreferenceWiseUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinicPreferenceWise",
				"operationId": "searchMedicinesInClinicPreferenceWiseUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinicPreferenceWise",
				"operationId": "searchMedicinesInClinicPreferenceWiseUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinicPreferenceWise",
				"operationId": "searchMedicinesInClinicPreferenceWiseUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinicPreferenceWise",
				"operationId": "searchMedicinesInClinicPreferenceWiseUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"medicine-controller"
				],
				"summary": "searchMedicinesInClinicPreferenceWise",
				"operationId": "searchMedicinesInClinicPreferenceWiseUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-in-clinics-search": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesForMedicineInClinics",
				"operationId": "fetchMedicinesForMedicineInClinicsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«MedicineInClinics»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-inventory/bulk-post": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postMedicineInventory",
				"operationId": "postMedicineInventoryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineInventoryDtos",
					"description": "medicineInventoryDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineInventoryBulkPostDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-salts": {
			"get": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "findAllMedicineSalt",
				"operationId": "findAllMedicineSaltUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "saveMedicineSalt",
				"operationId": "saveMedicineSaltUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicineSalt"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineSalt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-salts/search/findBySaltIdIn": {
			"get": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "findBySaltIdInMedicineSalt",
				"operationId": "findBySaltIdInMedicineSaltUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-salts/{id}": {
			"get": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "findByIdMedicineSalt",
				"operationId": "findByIdMedicineSaltUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineSalt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "saveMedicineSalt",
				"operationId": "saveMedicineSaltUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicineSalt"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineSalt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "deleteMedicineSalt",
				"operationId": "deleteMedicineSaltUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "saveMedicineSalt",
				"operationId": "saveMedicineSaltUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicineSalt"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineSalt»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-salts/{id}/medicineGeneral": {
			"get": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltMedicineGeneral",
				"operationId": "medicineSaltMedicineGeneralUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltMedicineGeneral",
				"operationId": "medicineSaltMedicineGeneralUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltMedicineGeneral",
				"operationId": "medicineSaltMedicineGeneralUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltMedicineGeneral",
				"operationId": "medicineSaltMedicineGeneralUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltMedicineGeneral",
				"operationId": "medicineSaltMedicineGeneralUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-salts/{id}/salt": {
			"get": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltSalt",
				"operationId": "medicineSaltSaltUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Salt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltSalt",
				"operationId": "medicineSaltSaltUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Salt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltSalt",
				"operationId": "medicineSaltSaltUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Salt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltSalt",
				"operationId": "medicineSaltSaltUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineSalt Entity"
				],
				"summary": "medicineSaltSalt",
				"operationId": "medicineSaltSaltUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Salt»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine-search": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicines",
				"operationId": "fetchMedicinesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "barcode",
						"in": "query",
						"description": "barcode",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MedicineSearchInTranscription"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ESMedicine Entity"
				],
				"summary": "saveESMedicine",
				"operationId": "saveESMedicineUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ESMedicine"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-search/barcode": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicinesByBarcode",
				"operationId": "fetchMedicinesByBarcodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "barcode",
						"in": "query",
						"description": "barcode",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MedicineSearchInTranscription"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine-search/{id}": {
			"get": {
				"tags": [
					"ESMedicine Entity"
				],
				"summary": "findByIdESMedicine",
				"operationId": "findByIdESMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ESMedicine Entity"
				],
				"summary": "saveESMedicine",
				"operationId": "saveESMedicineUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESMedicine"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ESMedicine Entity"
				],
				"summary": "deleteESMedicine",
				"operationId": "deleteESMedicineUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ESMedicine Entity"
				],
				"summary": "saveESMedicine",
				"operationId": "saveESMedicineUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESMedicine"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESMedicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicine/bulk-post": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postMedicine",
				"operationId": "postMedicineUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineDtos",
					"description": "medicineDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineUniverseBulkUploadDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine/revamp/approval": {
			"get": {
				"tags": [
					"medicine-revamp-controller"
				],
				"summary": "fetchMedicinesForApproval",
				"operationId": "fetchMedicinesForApprovalUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«SecondaryMedicines»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"medicine-revamp-controller"
				],
				"summary": "fetchMedicinesForApproval",
				"operationId": "fetchMedicinesForApprovalUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "approvalDto",
					"description": "approvalDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ApprovalDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SecondaryMedicines"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine/revamp/merge": {
			"post": {
				"tags": [
					"medicine-revamp-controller"
				],
				"summary": "mergeMedicines",
				"operationId": "mergeMedicinesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineMergeDto",
					"description": "medicineMergeDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicineMergeDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/MergeErrorDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine/revamp/merge/bulk": {
			"post": {
				"tags": [
					"medicine-revamp-controller"
				],
				"summary": "mergeMedicinesInBulk",
				"operationId": "mergeMedicinesInBulkUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineMergeDtos",
					"description": "medicineMergeDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineMergeDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MergeErrorDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicine/universe/bulk-edit": {
			"post": {
				"tags": [
					"medicine-controller"
				],
				"summary": "postMedicineUniverse",
				"operationId": "postMedicineUniverseUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineUniverseBulkUploadDtos",
					"description": "medicineUniverseBulkUploadDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineUniverseBulkUploadDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findAllMedicineInClinic",
				"operationId": "findAllMedicineInClinicUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "saveMedicineInClinic",
				"operationId": "saveMedicineInClinicUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicineInClinic"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/countDistinctByBatchNumber": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "countDistinctByBatchNumberMedicineInClinic",
				"operationId": "countDistinctByBatchNumberMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "batchNumber",
					"in": "query",
					"description": "batchNumber",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/fetchAllMedicinesInClinicByClinicId": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "fetchAllMedicinesInClinicByClinicIdMedicineInClinic",
				"operationId": "fetchAllMedicinesInClinicByClinicIdMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicId",
					"in": "query",
					"description": "clinicId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/fetchMedicineInClinicLessThanQuantity": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "fetchMedicineInClinicLessThanQuantityMedicineInClinic",
				"operationId": "fetchMedicineInClinicLessThanQuantityMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "string"
					},
					{
						"name": "quantity",
						"in": "query",
						"description": "quantity",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/fetchMedicinesByClinicAndName": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "fetchMedicinesByClinicAndNameMedicineInClinic",
				"operationId": "fetchMedicinesByClinicAndNameMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/fetchMedicinesInClinic": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "fetchMedicinesInClinicMedicineInClinic",
				"operationId": "fetchMedicinesInClinicMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicId",
					"in": "query",
					"description": "clinicId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/fetchMedicinesInClinicByClinicIdIn": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "fetchMedicinesInClinicByClinicIdInMedicineInClinic",
				"operationId": "fetchMedicinesInClinicByClinicIdInMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicId",
					"in": "query",
					"description": "clinicId",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByClinicIdAndMedicineId": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByClinicIdAndMedicineIdMedicineInClinic",
				"operationId": "findByClinicIdAndMedicineIdMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByClinicIdAndMedicineIdOrderById": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByClinicIdAndMedicineIdOrderByIdMedicineInClinic",
				"operationId": "findByClinicIdAndMedicineIdOrderByIdMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByClinicIdIn": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByClinicIdInMedicineInClinic",
				"operationId": "findByClinicIdInMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByClinicIdInAndIsActiveTrue": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByClinicIdInAndIsActiveTrueMedicineInClinic",
				"operationId": "findByClinicIdInAndIsActiveTrueMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByClinicIdInAndMedicineNameContaining": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByClinicIdInAndMedicineNameContainingMedicineInClinic",
				"operationId": "findByClinicIdInAndMedicineNameContainingMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByClinicIdInAndMedicineNameContainingAndIsActiveTrue": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByClinicIdInAndMedicineNameContainingAndIsActiveTrueMedicineInClinic",
				"operationId": "findByClinicIdInAndMedicineNameContainingAndIsActiveTrueMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByIdInAndClinicId": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByIdInAndClinicIdMedicineInClinic",
				"operationId": "findByIdInAndClinicIdMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByMedicineId": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByMedicineIdMedicineInClinic",
				"operationId": "findByMedicineIdMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByMedicineIdAndClinicIdAndIsActiveTrue": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByMedicineIdAndClinicIdAndIsActiveTrueMedicineInClinic",
				"operationId": "findByMedicineIdAndClinicIdAndIsActiveTrueMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineId",
						"in": "query",
						"description": "medicineId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByMedicineIdIn": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByMedicineIdInMedicineInClinic",
				"operationId": "findByMedicineIdInMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findByMedicineIdInAndClinicIdAndIsActiveTrue": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByMedicineIdInAndClinicIdAndIsActiveTrueMedicineInClinic",
				"operationId": "findByMedicineIdInAndClinicIdAndIsActiveTrueMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineIds",
						"in": "query",
						"description": "medicineIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findDistinctByClinicIdAndMedicineNameContaining": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findDistinctByClinicIdAndMedicineNameContainingMedicineInClinic",
				"operationId": "findDistinctByClinicIdAndMedicineNameContainingMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/search/findDistinctByMedicineNameContaining": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findDistinctByMedicineNameContainingMedicineInClinic",
				"operationId": "findDistinctByMedicineNameContainingMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/{id}": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "findByIdMedicineInClinic",
				"operationId": "findByIdMedicineInClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "saveMedicineInClinic",
				"operationId": "saveMedicineInClinicUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicineInClinic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "deleteMedicineInClinic",
				"operationId": "deleteMedicineInClinicUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "saveMedicineInClinic",
				"operationId": "saveMedicineInClinicUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicineInClinic"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/{id}/clinic": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicClinic",
				"operationId": "medicineInClinicClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicClinic",
				"operationId": "medicineInClinicClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicClinic",
				"operationId": "medicineInClinicClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicClinic",
				"operationId": "medicineInClinicClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicClinic",
				"operationId": "medicineInClinicClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/{id}/medicine": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicine",
				"operationId": "medicineInClinicMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicine",
				"operationId": "medicineInClinicMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicine",
				"operationId": "medicineInClinicMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicine",
				"operationId": "medicineInClinicMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicine",
				"operationId": "medicineInClinicMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/{id}/medicineInventories": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicineInventories",
				"operationId": "medicineInClinicMedicineInventoriesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicineInventories",
				"operationId": "medicineInClinicMedicineInventoriesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicineInventories",
				"operationId": "medicineInClinicMedicineInventoriesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicineInventories",
				"operationId": "medicineInClinicMedicineInventoriesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicineInventories",
				"operationId": "medicineInClinicMedicineInventoriesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/{id}/medicineInventories/{medicineinventoryId}": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicineInventories",
				"operationId": "medicineInClinicMedicineInventoriesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineinventoryId",
						"in": "path",
						"description": "medicineinventoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicMedicineInventories",
				"operationId": "medicineInClinicMedicineInventoriesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineinventoryId",
						"in": "path",
						"description": "medicineinventoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/{id}/prescriptions": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicPrescriptions",
				"operationId": "medicineInClinicPrescriptionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicPrescriptions",
				"operationId": "medicineInClinicPrescriptionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicPrescriptions",
				"operationId": "medicineInClinicPrescriptionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicPrescriptions",
				"operationId": "medicineInClinicPrescriptionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicPrescriptions",
				"operationId": "medicineInClinicPrescriptionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinclinics/{id}/prescriptions/{prescriptionId}": {
			"get": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicPrescriptions",
				"operationId": "medicineInClinicPrescriptionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionId",
						"in": "path",
						"description": "prescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInClinic Entity"
				],
				"summary": "medicineInClinicPrescriptions",
				"operationId": "medicineInClinicPrescriptionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionId",
						"in": "path",
						"description": "prescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "findAllMedicineInventory",
				"operationId": "findAllMedicineInventoryUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "saveMedicineInventory",
				"operationId": "saveMedicineInventoryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicineInventory"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/search/fetchByMedicineInClinicId": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "fetchByMedicineInClinicIdMedicineInventory",
				"operationId": "fetchByMedicineInClinicIdMedicineInventoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "micId",
					"in": "query",
					"description": "micId",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/search/fetchByMedicineInClinicIdAndBatchId": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "fetchByMedicineInClinicIdAndBatchIdMedicineInventory",
				"operationId": "fetchByMedicineInClinicIdAndBatchIdMedicineInventoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchId",
						"in": "query",
						"description": "batchId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "micId",
						"in": "query",
						"description": "micId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/search/findByBatchId": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "findByBatchIdMedicineInventory",
				"operationId": "findByBatchIdMedicineInventoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/search/findByIdIn": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "findByIdInMedicineInventory",
				"operationId": "findByIdInMedicineInventoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/search/findByMedicineInClinicId": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "findByMedicineInClinicIdMedicineInventory",
				"operationId": "findByMedicineInClinicIdMedicineInventoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/search/findByMedicineInClinicIdAndBatchBatchNumberAndQuantityGreaterThan": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "findByMedicineInClinicIdAndBatchBatchNumberAndQuantityGreaterThanMedicineInventory",
				"operationId": "findByMedicineInClinicIdAndBatchBatchNumberAndQuantityGreaterThanMedicineInventoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchNumber",
						"in": "query",
						"description": "batchNumber",
						"required": false,
						"type": "string"
					},
					{
						"name": "medicineInClinicId",
						"in": "query",
						"description": "medicineInClinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "quantity",
						"in": "query",
						"description": "quantity",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/search/findByMedicineInClinicIdAndBatchId": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "findByMedicineInClinicIdAndBatchIdMedicineInventory",
				"operationId": "findByMedicineInClinicIdAndBatchIdMedicineInventoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchId",
						"in": "query",
						"description": "batchId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "micId",
						"in": "query",
						"description": "micId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/{id}": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "findByIdMedicineInventory",
				"operationId": "findByIdMedicineInventoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "saveMedicineInventory",
				"operationId": "saveMedicineInventoryUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicineInventory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "deleteMedicineInventory",
				"operationId": "deleteMedicineInventoryUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "saveMedicineInventory",
				"operationId": "saveMedicineInventoryUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicineInventory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/{id}/batch": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryBatch",
				"operationId": "medicineInventoryBatchUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryBatch",
				"operationId": "medicineInventoryBatchUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryBatch",
				"operationId": "medicineInventoryBatchUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryBatch",
				"operationId": "medicineInventoryBatchUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryBatch",
				"operationId": "medicineInventoryBatchUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicineinventories/{id}/medicineInClinic": {
			"get": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryMedicineInClinic",
				"operationId": "medicineInventoryMedicineInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryMedicineInClinic",
				"operationId": "medicineInventoryMedicineInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryMedicineInClinic",
				"operationId": "medicineInventoryMedicineInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryMedicineInClinic",
				"operationId": "medicineInventoryMedicineInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicineInventory Entity"
				],
				"summary": "medicineInventoryMedicineInClinic",
				"operationId": "medicineInventoryMedicineInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findAllMedicine",
				"operationId": "findAllMedicineUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "saveMedicine",
				"operationId": "saveMedicineUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Medicine"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/medicineInClinic": {
			"get": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "MedicineFilter",
				"operationId": "MedicineFilterUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "MedicineFilter",
				"operationId": "MedicineFilterUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "MedicineFilter",
				"operationId": "MedicineFilterUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "MedicineFilter",
				"operationId": "MedicineFilterUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "MedicineFilter",
				"operationId": "MedicineFilterUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "MedicineFilter",
				"operationId": "MedicineFilterUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "MedicineFilter",
				"operationId": "MedicineFilterUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSearchInTranscription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/existsByIdAndIsActiveTrue": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "existsByIdAndIsActiveTrueMedicine",
				"operationId": "existsByIdAndIsActiveTrueMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/fetchActiveMedicine": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "fetchActiveMedicineMedicine",
				"operationId": "fetchActiveMedicineMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/fetchActiveMedicines": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "fetchActiveMedicinesMedicine",
				"operationId": "fetchActiveMedicinesMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/fetchActiveMedicinesWithName": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "fetchActiveMedicinesWithNameMedicine",
				"operationId": "fetchActiveMedicinesWithNameMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/fetchAllMedicinesWithName": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "fetchAllMedicinesWithNameMedicine",
				"operationId": "fetchAllMedicinesWithNameMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findByIdIn": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByIdInMedicine",
				"operationId": "findByIdInMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findByIdInAndIsActiveTrue": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByIdInAndIsActiveTrueMedicine",
				"operationId": "findByIdInAndIsActiveTrueMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findByIdInAndIsActiveTrueAndIdIsNotNull": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByIdInAndIsActiveTrueAndIdIsNotNullMedicine",
				"operationId": "findByIdInAndIsActiveTrueAndIdIsNotNullMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineForTranscription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findByIsActiveIsNullOrIsActive": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByIsActiveIsNullOrIsActiveMedicine",
				"operationId": "findByIsActiveIsNullOrIsActiveMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "active",
						"in": "query",
						"description": "active",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByIsActiveTrueMedicine",
				"operationId": "findByIsActiveTrueMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findByMedicineName": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByMedicineNameMedicine",
				"operationId": "findByMedicineNameMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "medicineName",
						"in": "query",
						"description": "medicineName",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findByNameContainingAndIsActiveTrue": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByNameContainingAndIsActiveTrueMedicine",
				"operationId": "findByNameContainingAndIsActiveTrueMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findByNameContainingAndIsActiveTrueAndIdNotIn": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByNameContainingAndIsActiveTrueAndIdNotInMedicine",
				"operationId": "findByNameContainingAndIsActiveTrueAndIdNotInMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findDistinctByIsActiveTrueAndNameContaining": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findDistinctByIsActiveTrueAndNameContainingMedicine",
				"operationId": "findDistinctByIsActiveTrueAndNameContainingMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/search/findDistinctByNameStartsWithOrNameContaining": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findDistinctByNameStartsWithOrNameContainingMedicine",
				"operationId": "findDistinctByNameStartsWithOrNameContainingMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "input1",
						"in": "query",
						"description": "input1",
						"required": false,
						"type": "string"
					},
					{
						"name": "input2",
						"in": "query",
						"description": "input2",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "findByIdMedicine",
				"operationId": "findByIdMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "saveMedicine",
				"operationId": "saveMedicineUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Medicine"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "deleteMedicine",
				"operationId": "deleteMedicineUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "saveMedicine",
				"operationId": "saveMedicineUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Medicine"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/batches": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBatches",
				"operationId": "medicineBatchesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBatches",
				"operationId": "medicineBatchesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBatches",
				"operationId": "medicineBatchesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBatches",
				"operationId": "medicineBatchesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBatches",
				"operationId": "medicineBatchesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Batch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/batches/{batchId}": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBatches",
				"operationId": "medicineBatchesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchId",
						"in": "path",
						"description": "batchId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Batch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBatches",
				"operationId": "medicineBatchesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "batchId",
						"in": "path",
						"description": "batchId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/brandForMedicine": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBrandForMedicine",
				"operationId": "medicineBrandForMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBrandForMedicine",
				"operationId": "medicineBrandForMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBrandForMedicine",
				"operationId": "medicineBrandForMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBrandForMedicine",
				"operationId": "medicineBrandForMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineBrandForMedicine",
				"operationId": "medicineBrandForMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Brand»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/medicineGeneralForMedicine": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineGeneralForMedicine",
				"operationId": "medicineMedicineGeneralForMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineGeneralForMedicine",
				"operationId": "medicineMedicineGeneralForMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineGeneralForMedicine",
				"operationId": "medicineMedicineGeneralForMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineGeneralForMedicine",
				"operationId": "medicineMedicineGeneralForMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineGeneralForMedicine",
				"operationId": "medicineMedicineGeneralForMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/medicineInClinics": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineInClinics",
				"operationId": "medicineMedicineInClinicsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineInClinics",
				"operationId": "medicineMedicineInClinicsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineInClinics",
				"operationId": "medicineMedicineInClinicsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineInClinics",
				"operationId": "medicineMedicineInClinicsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineInClinics",
				"operationId": "medicineMedicineInClinicsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/medicineInClinics/{medicineinclinicId}": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineInClinics",
				"operationId": "medicineMedicineInClinicsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineinclinicId",
						"in": "path",
						"description": "medicineinclinicId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineMedicineInClinics",
				"operationId": "medicineMedicineInClinicsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicineinclinicId",
						"in": "path",
						"description": "medicineinclinicId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/prescriptions": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicinePrescriptions",
				"operationId": "medicinePrescriptionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicinePrescriptions",
				"operationId": "medicinePrescriptionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicinePrescriptions",
				"operationId": "medicinePrescriptionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicinePrescriptions",
				"operationId": "medicinePrescriptionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicinePrescriptions",
				"operationId": "medicinePrescriptionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/prescriptions/{prescriptionId}": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicinePrescriptions",
				"operationId": "medicinePrescriptionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionId",
						"in": "path",
						"description": "prescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicinePrescriptions",
				"operationId": "medicinePrescriptionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionId",
						"in": "path",
						"description": "prescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/medicines/{id}/secondaryMedicine": {
			"get": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineSecondaryMedicine",
				"operationId": "medicineSecondaryMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineSecondaryMedicine",
				"operationId": "medicineSecondaryMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineSecondaryMedicine",
				"operationId": "medicineSecondaryMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineSecondaryMedicine",
				"operationId": "medicineSecondaryMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Medicine Entity"
				],
				"summary": "medicineSecondaryMedicine",
				"operationId": "medicineSecondaryMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/movePatientToAnotherQueue": {
			"get": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "movePatientToAnotherQueue",
				"operationId": "movePatientToAnotherQueueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "priorityQueue",
						"in": "query",
						"description": "priorityQueue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "movePatientToAnotherQueue",
				"operationId": "movePatientToAnotherQueueUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "priorityQueue",
						"in": "query",
						"description": "priorityQueue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "movePatientToAnotherQueue",
				"operationId": "movePatientToAnotherQueueUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "priorityQueue",
						"in": "query",
						"description": "priorityQueue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "movePatientToAnotherQueue",
				"operationId": "movePatientToAnotherQueueUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "priorityQueue",
						"in": "query",
						"description": "priorityQueue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "movePatientToAnotherQueue",
				"operationId": "movePatientToAnotherQueueUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "priorityQueue",
						"in": "query",
						"description": "priorityQueue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "movePatientToAnotherQueue",
				"operationId": "movePatientToAnotherQueueUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "priorityQueue",
						"in": "query",
						"description": "priorityQueue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "movePatientToAnotherQueue",
				"operationId": "movePatientToAnotherQueueUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "priorityQueue",
						"in": "query",
						"description": "priorityQueue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/mycare/patient/appointment": {
			"get": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "todayAppointment",
				"operationId": "todayAppointmentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "todayAppointment",
				"operationId": "todayAppointmentUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "todayAppointment",
				"operationId": "todayAppointmentUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "todayAppointment",
				"operationId": "todayAppointmentUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "todayAppointment",
				"operationId": "todayAppointmentUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "todayAppointment",
				"operationId": "todayAppointmentUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "todayAppointment",
				"operationId": "todayAppointmentUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/mycare/patient/diagnostic/test": {
			"get": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getDiagnosticForPatient",
				"operationId": "getDiagnosticForPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getDiagnosticForPatient",
				"operationId": "getDiagnosticForPatientUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getDiagnosticForPatient",
				"operationId": "getDiagnosticForPatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getDiagnosticForPatient",
				"operationId": "getDiagnosticForPatientUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getDiagnosticForPatient",
				"operationId": "getDiagnosticForPatientUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getDiagnosticForPatient",
				"operationId": "getDiagnosticForPatientUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getDiagnosticForPatient",
				"operationId": "getDiagnosticForPatientUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/mycare/patient/recent/activity": {
			"get": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getRecentActivityOfPatient",
				"operationId": "getRecentActivityOfPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getRecentActivityOfPatient",
				"operationId": "getRecentActivityOfPatientUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getRecentActivityOfPatient",
				"operationId": "getRecentActivityOfPatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getRecentActivityOfPatient",
				"operationId": "getRecentActivityOfPatientUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getRecentActivityOfPatient",
				"operationId": "getRecentActivityOfPatientUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getRecentActivityOfPatient",
				"operationId": "getRecentActivityOfPatientUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getRecentActivityOfPatient",
				"operationId": "getRecentActivityOfPatientUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/mycare/patient/recent/activity/segregated-on-pht": {
			"get": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getSegregatedRecentActivityOfPatient",
				"operationId": "getSegregatedRecentActivityOfPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": true,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getSegregatedRecentActivityOfPatient",
				"operationId": "getSegregatedRecentActivityOfPatientUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": true,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getSegregatedRecentActivityOfPatient",
				"operationId": "getSegregatedRecentActivityOfPatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": true,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getSegregatedRecentActivityOfPatient",
				"operationId": "getSegregatedRecentActivityOfPatientUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": true,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getSegregatedRecentActivityOfPatient",
				"operationId": "getSegregatedRecentActivityOfPatientUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": true,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getSegregatedRecentActivityOfPatient",
				"operationId": "getSegregatedRecentActivityOfPatientUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": true,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-my-care-controller"
				],
				"summary": "getSegregatedRecentActivityOfPatient",
				"operationId": "getSegregatedRecentActivityOfPatientUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": true,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/mycarepage/patient/app": {
			"get": {
				"tags": [
					"patient-app-consolidate-controller"
				],
				"summary": "clubMyCareApi",
				"operationId": "clubMyCareApiUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": false,
						"type": "string"
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/netpromoterscore": {
			"get": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "findAllNetPromoterScore",
				"operationId": "findAllNetPromoterScoreUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«NetPromoterScore»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "saveNetPromoterScore",
				"operationId": "saveNetPromoterScoreUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/NetPromoterScore"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«NetPromoterScore»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/netpromoterscore/{id}": {
			"get": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "findByIdNetPromoterScore",
				"operationId": "findByIdNetPromoterScoreUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«NetPromoterScore»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "saveNetPromoterScore",
				"operationId": "saveNetPromoterScoreUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/NetPromoterScore"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«NetPromoterScore»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "deleteNetPromoterScore",
				"operationId": "deleteNetPromoterScoreUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "saveNetPromoterScore",
				"operationId": "saveNetPromoterScoreUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/NetPromoterScore"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«NetPromoterScore»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/netpromoterscore/{id}/doctorInClinic": {
			"get": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreDoctorInClinic",
				"operationId": "netPromoterScoreDoctorInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreDoctorInClinic",
				"operationId": "netPromoterScoreDoctorInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreDoctorInClinic",
				"operationId": "netPromoterScoreDoctorInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreDoctorInClinic",
				"operationId": "netPromoterScoreDoctorInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreDoctorInClinic",
				"operationId": "netPromoterScoreDoctorInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/netpromoterscore/{id}/parameter": {
			"get": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreParameter",
				"operationId": "netPromoterScoreParameterUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreParameter",
				"operationId": "netPromoterScoreParameterUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreParameter",
				"operationId": "netPromoterScoreParameterUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreParameter",
				"operationId": "netPromoterScoreParameterUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"NetPromoterScore Entity"
				],
				"summary": "netPromoterScoreParameter",
				"operationId": "netPromoterScoreParameterUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«FeedbackParameter»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/order/address": {
			"get": {
				"tags": [
					"order-swagger-controller"
				],
				"summary": "fetchAddressDetails",
				"operationId": "fetchAddressDetailsUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AddressOrderBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/order/address-update": {
			"post": {
				"tags": [
					"order-swagger-controller"
				],
				"summary": "fetchAddressIdAndConsultation",
				"operationId": "fetchAddressIdAndConsultationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "addressDto",
					"description": "addressDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AddressDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/AddressConsultationDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/order/consultation": {
			"get": {
				"tags": [
					"order-swagger-controller"
				],
				"summary": "fetchConsultationDetails",
				"operationId": "fetchConsultationDetailsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationOrderBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/order/consultation/ids": {
			"get": {
				"tags": [
					"order-swagger-controller"
				],
				"summary": "fetchConsultationIds",
				"operationId": "fetchConsultationIdsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "integer",
								"format": "int64"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient-history/diagnosticReport": {
			"post": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "uploadDiagnosticReportForPatientHistory",
				"operationId": "uploadDiagnosticReportForPatientHistoryUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticIds",
						"in": "query",
						"description": "diagnosticIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "file",
						"in": "query",
						"description": "file",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient-history/diagnosticReport/v2": {
			"post": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "uploadDiagnosticReportForPatientHistory",
				"operationId": "uploadDiagnosticReportForPatientHistoryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticReportDto",
					"description": "diagnosticReportDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/DiagnosticReportDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient-history/recent-activity": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getSpecialityWiseDoctors",
				"operationId": "getSpecialityWiseDoctorsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientHistoryId",
					"in": "query",
					"description": "patientHistoryId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient-history/report": {
			"post": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "uploadReportForPatientHistory",
				"operationId": "uploadReportForPatientHistoryUsingPOST",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "diagnosticIds",
						"in": "query",
						"description": "diagnosticIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "file",
						"in": "formData",
						"description": "file",
						"required": true,
						"type": "file"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/by-id": {
			"get": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "diagnosticById",
				"operationId": "diagnosticByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosticId",
					"in": "query",
					"description": "diagnosticId",
					"required": true,
						"type": "integer",
						"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticsForOrder"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/update/dtilId": {
			"post": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "diagnosticUpdateDtilId",
				"operationId": "diagnosticUpdateDtilIdUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticUpdateDtilDto",
					"description": "diagnosticUpdateDtilDto",
					"required": true,
					"schema": {
							"$ref": "#/definitions/DiagnosticUpdateDtilDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
								"$ref": "#/definitions/DiagnosticUpdateDtilDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/diagnostic/bulk/update/dtilId": {
			"post": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "diagnosticBulkUpdateDtilId",
				"operationId": "diagnosticBulkUpdateDtilIdUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "diagnosticUpdateDtilDto",
					"description": "diagnosticUpdateDtilDto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/DiagnosticUpdateDtilDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticUpdateDtilDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient-history/report/get-links": {
			"get": {
				"tags": [
					"diagnostic-controller"
				],
				"summary": "createPatientHistoryForReportAndGetPutUrls",
				"operationId": "createPatientHistoryForReportAndGetPutUrlsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "diagnosticIds",
						"in": "query",
						"description": "diagnosticIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "ext",
						"in": "query",
						"description": "ext",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient-search": {
			"get": {
				"tags": [
					"patient-and-order-controller"
				],
				"summary": "searchPatients",
				"operationId": "searchPatientsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginationDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/add": {
			"post": {
				"tags": [
					"patient-and-order-controller"
				],
				"summary": "addPatient",
				"operationId": "addPatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientsForConsultation"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/add-family": {
			"get": {
				"tags": [
					"family-controller"
				],
				"summary": "createFamilyForUnlinkedPatients",
				"operationId": "createFamilyForUnlinkedPatientsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/add-to-queue": {
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "patientAddToQueue",
				"operationId": "patientAddToQueueUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "patientBody",
					"description": "patientBody",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientAddToQueue"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationForPatientAddToQueues"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/all-doctors": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getSpecialityWiseDoctors",
				"operationId": "getSpecialityWiseDoctorsUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "asc",
						"in": "query",
						"description": "asc",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "available",
						"in": "query",
						"description": "available",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "city",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "cluster",
						"in": "query",
						"description": "cluster",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "currentDate",
						"in": "query",
						"description": "currentDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isCamp",
						"in": "query",
						"description": "isCamp",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "isListed",
						"in": "query",
						"description": "isListed",
						"required": false,
						"type": "boolean",
						"default": true
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "slug",
						"in": "query",
						"description": "slug",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "sortBy",
						"required": false,
						"type": "string"
					},
					{
						"name": "speciality",
						"in": "query",
						"description": "speciality",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/all-doctors-v2": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "fetchDoctorsWithSortAndFilter",
				"operationId": "fetchDoctorsWithSortAndFilterUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "asc",
						"in": "query",
						"description": "asc",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "available",
						"in": "query",
						"description": "available",
						"required": false,
						"type": "string"
					},
					{
						"name": "city",
						"in": "query",
						"description": "city",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "cluster",
						"in": "query",
						"description": "cluster",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "currentDate",
						"in": "query",
						"description": "currentDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isCamp",
						"in": "query",
						"description": "isCamp",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"name": "isListed",
						"in": "query",
						"description": "isListed",
						"required": false,
						"type": "boolean",
						"default": true
					},
					{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": false,
						"type": "number",
						"format": "double"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "slug",
						"in": "query",
						"description": "slug",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "sortBy",
						"required": false,
						"type": "string"
					},
					{
						"name": "speciality",
						"in": "query",
						"description": "speciality",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/all-family": {
			"get": {
				"tags": [
					"patient-and-order-controller"
				],
				"summary": "getAllPatients",
				"operationId": "getAllPatientsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientAndConsultationIdDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/attach-family": {
			"get": {
				"tags": [
					"family-controller"
				],
				"summary": "linkPatientsToFamilies",
				"operationId": "linkPatientsToFamiliesUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/by-clinic": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "fetchPatientsByClinic",
				"operationId": "fetchPatientsByClinicUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PatientsForClinics"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/by-patient-id": {
			"get": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "getPatientById",
				"operationId": "getPatientByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientForConsumer"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/get-patient-list-patient-id": {
			"get": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "getPatientListByPatientId",
				"operationId": "getPatientListByPatientIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
							"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PatientDtoForOrder"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/create-validate": {
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "postPatientOrValidatePatient",
				"operationId": "postPatientOrValidatePatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientAddToQueue"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PatientsForClinics"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/doctor/base/speciality": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getDoctorBasedSpeciality",
				"operationId": "getDoctorBasedSpecialityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getDoctorBasedSpeciality",
				"operationId": "getDoctorBasedSpecialityUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getDoctorBasedSpeciality",
				"operationId": "getDoctorBasedSpecialityUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getDoctorBasedSpeciality",
				"operationId": "getDoctorBasedSpecialityUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getDoctorBasedSpeciality",
				"operationId": "getDoctorBasedSpecialityUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getDoctorBasedSpeciality",
				"operationId": "getDoctorBasedSpecialityUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getDoctorBasedSpeciality",
				"operationId": "getDoctorBasedSpecialityUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/edit/{id}": {
			"patch": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "editPatientDetails",
				"operationId": "editPatientDetailsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"in": "body",
						"name": "patientDetailsEditDto",
						"description": "patientDetailsEditDto",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientDetailsEditDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientWithFamilyAndAddress"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/family/person": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/get-patient-by-patient-id": {
			"get": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "getPatientForPushNotificationById",
				"operationId": "getPatientForPushNotificationByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientForPushNotification"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/history/es-populator": {
			"post": {
				"tags": [
					"elasticsearch-controller"
				],
				"summary": "loadDataInElastic",
				"operationId": "loadDataInElasticUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "patientHistory",
					"description": "patientHistory",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientHistory"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/history/es-populator/all": {
			"get": {
				"tags": [
					"elasticsearch-controller"
				],
				"summary": "addAllPatientHistory",
				"operationId": "addAllPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"elasticsearch-controller"
				],
				"summary": "addAllPatientHistory",
				"operationId": "addAllPatientHistoryUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"elasticsearch-controller"
				],
				"summary": "addAllPatientHistory",
				"operationId": "addAllPatientHistoryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"elasticsearch-controller"
				],
				"summary": "addAllPatientHistory",
				"operationId": "addAllPatientHistoryUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"elasticsearch-controller"
				],
				"summary": "addAllPatientHistory",
				"operationId": "addAllPatientHistoryUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"elasticsearch-controller"
				],
				"summary": "addAllPatientHistory",
				"operationId": "addAllPatientHistoryUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"elasticsearch-controller"
				],
				"summary": "addAllPatientHistory",
				"operationId": "addAllPatientHistoryUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/ongoing/medication": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/ongoing/medication-by-patient": {
			"get": {
				"tags": [
					"prescription-by-date-controller"
				],
				"summary": "getOngoingMedicationPercentage",
				"operationId": "getOngoingMedicationPercentageUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "date",
					"in": "query",
					"description": "date",
					"required": false,
					"type": "string",
					"format": "date-time"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDateAndPatient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/previous/medication": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPreviousMedication",
				"operationId": "getPreviousMedicationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPreviousMedication",
				"operationId": "getPreviousMedicationUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPreviousMedication",
				"operationId": "getPreviousMedicationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPreviousMedication",
				"operationId": "getPreviousMedicationUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPreviousMedication",
				"operationId": "getPreviousMedicationUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPreviousMedication",
				"operationId": "getPreviousMedicationUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPreviousMedication",
				"operationId": "getPreviousMedicationUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/recent/care/provider": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getRecentCareProvider",
				"operationId": "getRecentCareProviderUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getRecentCareProvider",
				"operationId": "getRecentCareProviderUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getRecentCareProvider",
				"operationId": "getRecentCareProviderUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getRecentCareProvider",
				"operationId": "getRecentCareProviderUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getRecentCareProvider",
				"operationId": "getRecentCareProviderUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getRecentCareProvider",
				"operationId": "getRecentCareProviderUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getRecentCareProvider",
				"operationId": "getRecentCareProviderUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/remove-family-member": {
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "removeFamilyMember",
				"operationId": "removeFamilyMemberUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Patients"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/search-by-name-or-phone": {
			"get": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "findDistinctByNameStartingWithOrPhoneContaining",
				"operationId": "findDistinctByNameStartingWithOrPhoneContainingUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForNameSearch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "findDistinctByNameStartingWithOrPhoneContaining",
				"operationId": "findDistinctByNameStartingWithOrPhoneContainingUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForNameSearch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "findDistinctByNameStartingWithOrPhoneContaining",
				"operationId": "findDistinctByNameStartingWithOrPhoneContainingUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForNameSearch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "findDistinctByNameStartingWithOrPhoneContaining",
				"operationId": "findDistinctByNameStartingWithOrPhoneContainingUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForNameSearch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "findDistinctByNameStartingWithOrPhoneContaining",
				"operationId": "findDistinctByNameStartingWithOrPhoneContainingUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForNameSearch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "findDistinctByNameStartingWithOrPhoneContaining",
				"operationId": "findDistinctByNameStartingWithOrPhoneContainingUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForNameSearch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "findDistinctByNameStartingWithOrPhoneContaining",
				"operationId": "findDistinctByNameStartingWithOrPhoneContainingUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "search",
						"in": "query",
						"description": "search",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForNameSearch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/speciality/Doctor": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getSpecialityWiseDoctors",
				"operationId": "getSpecialityWiseDoctorsUsingGET_2",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "latitude",
						"in": "query",
						"description": "latitude",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "longitude",
						"in": "query",
						"description": "longitude",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"name": "speciality",
						"in": "query",
						"description": "speciality",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/today/medication/for-all": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPatientPrescription",
				"operationId": "getPatientPrescriptionUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "basedOn",
						"in": "query",
						"description": "basedOn",
						"required": true,
						"type": "string"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/update": {
			"post": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "fetchOrPatchPatientDetails",
				"operationId": "fetchOrPatchPatientDetailsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "patientDto",
					"description": "patientDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientWithWallet"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/update/image": {
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "patchPatientProfilePic",
				"operationId": "patchPatientProfilePicUsingPATCH",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "file",
						"in": "formData",
						"description": "file",
						"required": true,
						"type": "file"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patient/upload/documents": {
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "uploadImage",
				"operationId": "uploadImageUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "comment",
						"in": "query",
						"description": "comment",
						"required": true,
						"type": "string"
					},
					{
						"name": "documentCreatedDate",
						"in": "query",
						"description": "documentCreatedDate",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "file",
						"in": "formData",
						"description": "file",
						"required": true,
						"type": "array",
						"items": {
							"type": "file"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "patientDocumentType",
						"in": "query",
						"description": "patientDocumentType",
						"required": true,
						"type": "string",
						"enum": [
							"PRESCRIPTION",
							"DIAGNOSTIC_REPORT",
							"NONE"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/CommentOnDocuments"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/upload/image": {
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "savePatientProfilePic",
				"operationId": "savePatientProfilePicUsingPOST",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "file",
						"in": "formData",
						"description": "file",
						"required": true,
						"type": "file"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/UploadStatus"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patient/view/prescription": {
			"get": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "viewPrescription",
				"operationId": "viewPrescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "viewPrescription",
				"operationId": "viewPrescriptionUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "viewPrescription",
				"operationId": "viewPrescriptionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "viewPrescription",
				"operationId": "viewPrescriptionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "viewPrescription",
				"operationId": "viewPrescriptionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "viewPrescription",
				"operationId": "viewPrescriptionUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "viewPrescription",
				"operationId": "viewPrescriptionUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorInClinicId",
						"in": "query",
						"description": "doctorInClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patientHistory-search": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllPatientHistory",
				"operationId": "findAllPatientHistoryUsingGET_1",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "savePatientHistory",
				"operationId": "savePatientHistoryUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientHistory"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patientHistory-search/{id}": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByIdPatientHistory",
				"operationId": "findByIdPatientHistoryUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "savePatientHistory",
				"operationId": "savePatientHistoryUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientHistory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "deletePatientHistory",
				"operationId": "deletePatientHistoryUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "savePatientHistory",
				"operationId": "savePatientHistoryUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientHistory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patientInQueue": {
			"get": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "getPatientQueues",
				"operationId": "getPatientQueuesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinics",
					"in": "query",
					"description": "doctorInClinics",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientInQueue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "getPatientQueues",
				"operationId": "getPatientQueuesUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinics",
					"in": "query",
					"description": "doctorInClinics",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientInQueue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "getPatientQueues",
				"operationId": "getPatientQueuesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinics",
					"in": "query",
					"description": "doctorInClinics",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientInQueue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "getPatientQueues",
				"operationId": "getPatientQueuesUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinics",
					"in": "query",
					"description": "doctorInClinics",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientInQueue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "getPatientQueues",
				"operationId": "getPatientQueuesUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinics",
					"in": "query",
					"description": "doctorInClinics",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientInQueue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "getPatientQueues",
				"operationId": "getPatientQueuesUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinics",
					"in": "query",
					"description": "doctorInClinics",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientInQueue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "getPatientQueues",
				"operationId": "getPatientQueuesUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinics",
					"in": "query",
					"description": "doctorInClinics",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientInQueue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patientPreviousDocument": {
			"get": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "findAllPatientPreviousDocument",
				"operationId": "findAllPatientPreviousDocumentUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientPreviousDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "savePatientPreviousDocument",
				"operationId": "savePatientPreviousDocumentUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientPreviousDocument"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientPreviousDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patientPreviousDocument/search/findByDocumenturl": {
			"get": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "findByDocumenturlPatientPreviousDocument",
				"operationId": "findByDocumenturlPatientPreviousDocumentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "documentUrl",
					"in": "query",
					"description": "documentUrl",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientPreviousDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patientPreviousDocument/{id}": {
			"get": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "findByIdPatientPreviousDocument",
				"operationId": "findByIdPatientPreviousDocumentUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientPreviousDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "savePatientPreviousDocument",
				"operationId": "savePatientPreviousDocumentUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientPreviousDocument"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientPreviousDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "deletePatientPreviousDocument",
				"operationId": "deletePatientPreviousDocumentUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "savePatientPreviousDocument",
				"operationId": "savePatientPreviousDocumentUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientPreviousDocument"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientPreviousDocument»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patientPreviousDocument/{id}/commentOnDocument": {
			"get": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "patientPreviousDocumentCommentOnDocument",
				"operationId": "patientPreviousDocumentCommentOnDocumentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "patientPreviousDocumentCommentOnDocument",
				"operationId": "patientPreviousDocumentCommentOnDocumentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "patientPreviousDocumentCommentOnDocument",
				"operationId": "patientPreviousDocumentCommentOnDocumentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "patientPreviousDocumentCommentOnDocument",
				"operationId": "patientPreviousDocumentCommentOnDocumentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientPreviousDocument Entity"
				],
				"summary": "patientPreviousDocumentCommentOnDocument",
				"operationId": "patientPreviousDocumentCommentOnDocumentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patientSymptoms": {
			"get": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "findAllPatientSymptom",
				"operationId": "findAllPatientSymptomUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "savePatientSymptom",
				"operationId": "savePatientSymptomUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientSymptom"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientSymptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patientSymptoms/{id}": {
			"get": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "findByIdPatientSymptom",
				"operationId": "findByIdPatientSymptomUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientSymptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "savePatientSymptom",
				"operationId": "savePatientSymptomUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientSymptom"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientSymptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "deletePatientSymptom",
				"operationId": "deletePatientSymptomUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "savePatientSymptom",
				"operationId": "savePatientSymptomUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientSymptom"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientSymptom»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patientSymptoms/{id}/consultation": {
			"get": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomConsultation",
				"operationId": "patientSymptomConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomConsultation",
				"operationId": "patientSymptomConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomConsultation",
				"operationId": "patientSymptomConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomConsultation",
				"operationId": "patientSymptomConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomConsultation",
				"operationId": "patientSymptomConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patientSymptoms/{id}/patient": {
			"get": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomPatient",
				"operationId": "patientSymptomPatientUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomPatient",
				"operationId": "patientSymptomPatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomPatient",
				"operationId": "patientSymptomPatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomPatient",
				"operationId": "patientSymptomPatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientSymptom Entity"
				],
				"summary": "patientSymptomPatient",
				"operationId": "patientSymptomPatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllPatientHistory",
				"operationId": "findAllPatientHistoryUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "savePatientHistory",
				"operationId": "savePatientHistoryUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientHistory"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/fetchThroughConsultationId": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "fetchThroughConsultationIdPatientHistory",
				"operationId": "fetchThroughConsultationIdPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findAllByPatientId": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllByPatientIdPatientHistory",
				"operationId": "findAllByPatientIdPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "aLong",
					"in": "query",
					"description": "aLong",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findAllByPatientIdAndConsultationDoctorInClinicIdAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllByPatientIdAndConsultationDoctorInClinicIdAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findAllByPatientIdAndConsultationDoctorInClinicIdAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "aLong",
						"in": "query",
						"description": "aLong",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findAllByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findAllByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "aLong",
						"in": "query",
						"description": "aLong",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findAllByPatientIdAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllByPatientIdAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findAllByPatientIdAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "aLong",
						"in": "query",
						"description": "aLong",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findAllByPatientIdAndLastModifiedBetweenOrderByLastModifiedDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllByPatientIdAndLastModifiedBetweenOrderByLastModifiedDescPatientHistory",
				"operationId": "findAllByPatientIdAndLastModifiedBetweenOrderByLastModifiedDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "aLong",
						"in": "query",
						"description": "aLong",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findAllByPatientIdAndPatientHistoryTypeOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllByPatientIdAndPatientHistoryTypeOrderByCreatedAtDescPatientHistory",
				"operationId": "findAllByPatientIdAndPatientHistoryTypeOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findAllByPatientIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllByPatientIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findAllByPatientIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "aLong",
						"in": "query",
						"description": "aLong",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findAllByPatientIdOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findAllByPatientIdOrderByCreatedAtDescPatientHistory",
				"operationId": "findAllByPatientIdOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationDoctorInClinicDoctorIdIn": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicDoctorIdInPatientHistory",
				"operationId": "findByConsultationDoctorInClinicDoctorIdInPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationDoctorInClinicDoctorIdInAndPatientHistoryType": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicDoctorIdInAndPatientHistoryTypePatientHistory",
				"operationId": "findByConsultationDoctorInClinicDoctorIdInAndPatientHistoryTypePatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqual": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqualPatientHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqualPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "visitedAt",
						"in": "query",
						"description": "visitedAt",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqualAndCreatedAtLessThanOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqualAndCreatedAtLessThanOrderByCreatedAtDescPatientHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqualAndCreatedAtLessThanOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "date1",
						"in": "query",
						"description": "date1",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqualOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqualOrderByCreatedAtDescPatientHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndCreatedAtGreaterThanEqualOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "visitedAt",
						"in": "query",
						"description": "visitedAt",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationDoctorInClinicIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationDoctorInClinicIdInAndPatientNameContainingAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndPatientNameContainingAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndPatientNameContainingAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationDoctorInClinicIdInAndPatientPhoneContainingAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInAndPatientPhoneContainingAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findByConsultationDoctorInClinicIdInAndPatientPhoneContainingAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationId": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationIdPatientHistory",
				"operationId": "findByConsultationIdPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationIdAndPatientIdAndPatientHistoryType": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationIdAndPatientIdAndPatientHistoryTypePatientHistory",
				"operationId": "findByConsultationIdAndPatientIdAndPatientHistoryTypePatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByConsultationIdOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByConsultationIdOrderByCreatedAtDescPatientHistory",
				"operationId": "findByConsultationIdOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByIdAndPatientHistoryType": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByIdAndPatientHistoryTypePatientHistory",
				"operationId": "findByIdAndPatientHistoryTypePatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientHistoryId": {
			"get": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "patientHistoryByPatientHistoryId",
				"operationId": "patientHistoryByPatientHistoryIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientHistoryId",
					"in": "query",
					"description": "patientHistoryId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistoryForMessageRouter»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientId": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdPatientHistory",
				"operationId": "findByPatientIdPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtGreaterThanEqualAndCreatedAtLessThanEqualOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtGreaterThanEqualAndCreatedAtLessThanEqualOrderByCreatedAtDescPatientHistory",
				"operationId": "findByPatientIdAndConsultationDoctorInClinicIdAndPatientHistoryTypeAndCreatedAtGreaterThanEqualAndCreatedAtLessThanEqualOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findByPatientIdAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdAndPatientHistoryTypeNotInOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdAndPatientHistoryTypeNotInOrderByCreatedAtDescPatientHistory",
				"operationId": "findByPatientIdAndPatientHistoryTypeNotInOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdAndVendorRefLink": {
			"get": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "findByPatientIdAndVendorRefLink",
				"operationId": "findByPatientIdAndVendorRefLinkUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "vendorRefLink",
						"in": "query",
						"description": "vendorRefLink",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PatientHistoryForIntegration"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdAndVendorRefLinkAndCreatedAtGreaterThanEqual": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdAndVendorRefLinkAndCreatedAtGreaterThanEqualPatientHistory",
				"operationId": "findByPatientIdAndVendorRefLinkAndCreatedAtGreaterThanEqualPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "createdAt",
						"in": "query",
						"description": "createdAt",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "vendorRefLink",
						"in": "query",
						"description": "vendorRefLink",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdInAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdInAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findByPatientIdInAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistory",
				"operationId": "findByPatientIdInAndPatientHistoryTypeAndCreatedAtBetweenOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "aLong",
						"in": "query",
						"description": "aLong",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdInAndPatientHistoryTypeAndRefLinkNotNullAndCreatedAtGreaterThanOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdInAndPatientHistoryTypeAndRefLinkNotNullAndCreatedAtGreaterThanOrderByCreatedAtDescPatientHistory",
				"operationId": "findByPatientIdInAndPatientHistoryTypeAndRefLinkNotNullAndCreatedAtGreaterThanOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "interval",
						"in": "query",
						"description": "interval",
						"required": false,
						"type": "string"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientIds",
						"in": "query",
						"description": "patientIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdOrder": {
			"get": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "patientHistoryFindByPatientIdInOrderByCreatedDesc",
				"operationId": "patientHistoryFindByPatientIdInOrderByCreatedDescUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PagedResources«Resource«PatientHistoryForRecentActivitiesForDoctor»»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByPatientIdOrderByCreatedAtDescPatientHistory",
				"operationId": "findByPatientIdOrderByCreatedAtDescPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findByPatientIdOrderv2": {
			"get": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "patientHistoryFindByPatientIdInOrderByCreatedDescv2",
				"operationId": "patientHistoryFindByPatientIdInOrderByCreatedDescv2UsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "integer",
						"default": 500,
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationForPatientHistoryForDoctorWithPaginationDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findDoctorRatings": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findDoctorRatingsPatientHistory",
				"operationId": "findDoctorRatingsPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientHistoryType",
					"in": "query",
					"description": "patientHistoryType",
					"required": false,
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findPatientByPatientHistoryId": {
			"get": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "patientHistoryForPushByPatientHistoryId",
				"operationId": "patientHistoryForPushByPatientHistoryIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientHistoryId",
					"in": "query",
					"description": "patientHistoryId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistoryForPushNotification»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findPatientHistoriesForReportByPatientIdsIn": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findPatientHistoriesForReportByPatientIdsInPatientHistory",
				"operationId": "findPatientHistoriesForReportByPatientIdsInPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "interval",
						"in": "query",
						"description": "interval",
						"required": false,
						"type": "string"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "patientIds",
						"in": "query",
						"description": "patientIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findPatientHistoryByConsultationId": {
			"get": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "patientHistoryByConsultationId",
				"operationId": "patientHistoryByConsultationIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ReportAndScribbleByConsultationIdDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/search/findRecentCareForPatient": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findRecentCareForPatientPatientHistory",
				"operationId": "findRecentCareForPatientPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "aLong",
						"in": "query",
						"description": "aLong",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientHistoryType",
						"in": "query",
						"description": "patientHistoryType",
						"required": false,
						"type": "string",
						"enum": [
							"REPORT",
							"CONSULTATION",
							"UPLOAD_DOCUMENT",
							"FOLLOWUP"
						]
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/update/url": {
			"patch": {
				"tags": [
					"patient-history-search-controller"
				],
				"summary": "updatePatientHistoryReportUrl",
				"operationId": "updatePatientHistoryReportUrlUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "patientHistoryForMiddlewareDto",
					"description": "patientHistoryForMiddlewareDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PatientHistoryForMiddlewareDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientHistoryForIntegration"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "findByIdPatientHistory",
				"operationId": "findByIdPatientHistoryUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "savePatientHistory",
				"operationId": "savePatientHistoryUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientHistory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "deletePatientHistory",
				"operationId": "deletePatientHistoryUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "savePatientHistory",
				"operationId": "savePatientHistoryUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PatientHistory"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}/commentOnDocument": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentOnDocument",
				"operationId": "patientHistoryCommentOnDocumentUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentOnDocument",
				"operationId": "patientHistoryCommentOnDocumentUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentOnDocument",
				"operationId": "patientHistoryCommentOnDocumentUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentOnDocument",
				"operationId": "patientHistoryCommentOnDocumentUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentOnDocument",
				"operationId": "patientHistoryCommentOnDocumentUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}/commentsForPatientHistory": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentsForPatientHistory",
				"operationId": "patientHistoryCommentsForPatientHistoryUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentsForPatientHistory",
				"operationId": "patientHistoryCommentsForPatientHistoryUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentsForPatientHistory",
				"operationId": "patientHistoryCommentsForPatientHistoryUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentsForPatientHistory",
				"operationId": "patientHistoryCommentsForPatientHistoryUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentsForPatientHistory",
				"operationId": "patientHistoryCommentsForPatientHistoryUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Comment»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}/commentsForPatientHistory/{commentId}": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentsForPatientHistory",
				"operationId": "patientHistoryCommentsForPatientHistoryUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "commentId",
						"in": "path",
						"description": "commentId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Comment»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryCommentsForPatientHistory",
				"operationId": "patientHistoryCommentsForPatientHistoryUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "commentId",
						"in": "path",
						"description": "commentId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}/consultation": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryConsultation",
				"operationId": "patientHistoryConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryConsultation",
				"operationId": "patientHistoryConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryConsultation",
				"operationId": "patientHistoryConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryConsultation",
				"operationId": "patientHistoryConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryConsultation",
				"operationId": "patientHistoryConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}/diagnostic": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnostic",
				"operationId": "patientHistoryDiagnosticUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnostic",
				"operationId": "patientHistoryDiagnosticUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnostic",
				"operationId": "patientHistoryDiagnosticUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnostic",
				"operationId": "patientHistoryDiagnosticUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnostic",
				"operationId": "patientHistoryDiagnosticUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Diagnostic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}/diagnosticAndPatientHistories": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnosticAndPatientHistories",
				"operationId": "patientHistoryDiagnosticAndPatientHistoriesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnosticAndPatientHistories",
				"operationId": "patientHistoryDiagnosticAndPatientHistoriesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnosticAndPatientHistories",
				"operationId": "patientHistoryDiagnosticAndPatientHistoriesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnosticAndPatientHistories",
				"operationId": "patientHistoryDiagnosticAndPatientHistoriesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnosticAndPatientHistories",
				"operationId": "patientHistoryDiagnosticAndPatientHistoriesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticAndPatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}/diagnosticAndPatientHistories/{diagnosticandpatienthistoryId}": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnosticAndPatientHistories",
				"operationId": "patientHistoryDiagnosticAndPatientHistoriesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticandpatienthistoryId",
						"in": "path",
						"description": "diagnosticandpatienthistoryId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticAndPatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryDiagnosticAndPatientHistories",
				"operationId": "patientHistoryDiagnosticAndPatientHistoriesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticandpatienthistoryId",
						"in": "path",
						"description": "diagnosticandpatienthistoryId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patienthistory/{id}/patient": {
			"get": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryPatient",
				"operationId": "patientHistoryPatientUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryPatient",
				"operationId": "patientHistoryPatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryPatient",
				"operationId": "patientHistoryPatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryPatient",
				"operationId": "patientHistoryPatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PatientHistory Entity"
				],
				"summary": "patientHistoryPatient",
				"operationId": "patientHistoryPatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findAllPatient",
				"operationId": "findAllPatientUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "savePatient",
				"operationId": "savePatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Patient"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/patientDetail": {
			"get": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "patientInfo",
				"operationId": "patientInfoUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "moblieno",
						"in": "query",
						"description": "moblieno",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "patientInfo",
				"operationId": "patientInfoUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "moblieno",
						"in": "query",
						"description": "moblieno",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "patientInfo",
				"operationId": "patientInfoUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "moblieno",
						"in": "query",
						"description": "moblieno",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "patientInfo",
				"operationId": "patientInfoUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "moblieno",
						"in": "query",
						"description": "moblieno",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "patientInfo",
				"operationId": "patientInfoUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "moblieno",
						"in": "query",
						"description": "moblieno",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "patientInfo",
				"operationId": "patientInfoUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "moblieno",
						"in": "query",
						"description": "moblieno",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "patientInfo",
				"operationId": "patientInfoUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinic",
						"in": "query",
						"description": "doctorinclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "moblieno",
						"in": "query",
						"description": "moblieno",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«object»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/fetchById": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "fetchByIdPatient",
				"operationId": "fetchByIdPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/fetchByPhone": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "fetchByPhonePatient",
				"operationId": "fetchByPhonePatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "phone",
					"in": "query",
					"description": "phone",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByCodeIn": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByCodeInPatient",
				"operationId": "findByCodeInPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "query",
					"description": "code",
					"required": false,
					"type": "array",
					"items": {
						"type": "string"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByConsultationDoctorInClinicIdIn": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByConsultationDoctorInClinicIdInPatient",
				"operationId": "findByConsultationDoctorInClinicIdInPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByFamilyId": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByFamilyIdPatient",
				"operationId": "findByFamilyIdPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByFamilyIdIn": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByFamilyIdInPatient",
				"operationId": "findByFamilyIdInPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByFamilyIsNull": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByFamilyIsNullPatient",
				"operationId": "findByFamilyIsNullPatientUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByIdIn": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByIdInPatient",
				"operationId": "findByIdInPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByName": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByNamePatient",
				"operationId": "findByNamePatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByNameContaining": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByNameContainingPatient",
				"operationId": "findByNameContainingPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByNameContainingAndPhone": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByNameContainingAndPhonePatient",
				"operationId": "findByNameContainingAndPhonePatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByNameStartingWithOrderByNameAsc": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByNameStartingWithOrderByNameAscPatient",
				"operationId": "findByNameStartingWithOrderByNameAscPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findByPhoneContaining": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findByPhoneContainingPatient",
				"operationId": "findByPhoneContainingPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByConsultationDoctorInClinicClinicIdIn": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByConsultationDoctorInClinicClinicIdInPatient",
				"operationId": "findDistinctByConsultationDoctorInClinicClinicIdInPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeGreaterThanEqual": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeGreaterThanEqualPatient",
				"operationId": "findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeGreaterThanEqualPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeGreaterThanEqualAndConsultationAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeGreaterThanEqualAndConsultationAppointmentTimeLessThanPatient",
				"operationId": "findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeGreaterThanEqualAndConsultationAppointmentTimeLessThanPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeLessThanEqual": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeLessThanEqualPatient",
				"operationId": "findDistinctByConsultationDoctorInClinicClinicIdInAndConsultationAppointmentTimeLessThanEqualPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByConsultationDoctorInClinicClinicNameContaining": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByConsultationDoctorInClinicClinicNameContainingPatient",
				"operationId": "findDistinctByConsultationDoctorInClinicClinicNameContainingPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeGreaterThanEqual": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeGreaterThanEqualPatient",
				"operationId": "findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeGreaterThanEqualPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeGreaterThanEqualAndConsultationAppointmentTimeLessThan": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeGreaterThanEqualAndConsultationAppointmentTimeLessThanPatient",
				"operationId": "findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeGreaterThanEqualAndConsultationAppointmentTimeLessThanPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeLessThanEqual": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeLessThanEqualPatient",
				"operationId": "findDistinctByConsultationDoctorInClinicClinicNameContainingAndConsultationAppointmentTimeLessThanEqualPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByNameContainingOrPhoneContaining": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByNameContainingOrPhoneContainingPatient",
				"operationId": "findDistinctByNameContainingOrPhoneContainingPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findDistinctByNameStartsWithOrPhoneStartsWith": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findDistinctByNameStartsWithOrPhoneStartsWithPatient",
				"operationId": "findDistinctByNameStartsWithOrPhoneStartsWithPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "phone",
						"in": "query",
						"description": "phone",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/findPatientIdsByFamilyId": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "findPatientIdsByFamilyIdPatient",
				"operationId": "findPatientIdsByFamilyIdPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "familyId",
					"in": "query",
					"description": "familyId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«long»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/search/getAllCodes": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "getAllCodesPatient",
				"operationId": "getAllCodesPatientUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«string»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}": {
			"get": {
				"tags": [
					"patient-repository-controller"
				],
				"summary": "getPatient",
				"operationId": "getPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientWithFamilyAndAddress"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "savePatient",
				"operationId": "savePatientUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Patient"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "deletePatient",
				"operationId": "deletePatientUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "savePatient",
				"operationId": "savePatientUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Patient"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/addresses": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientAddresses",
				"operationId": "patientAddressesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientAddresses",
				"operationId": "patientAddressesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientAddresses",
				"operationId": "patientAddressesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientAddresses",
				"operationId": "patientAddressesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientAddresses",
				"operationId": "patientAddressesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Address»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/addresses/{addressId}": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientAddresses",
				"operationId": "patientAddressesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "addressId",
						"in": "path",
						"description": "addressId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Address»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientAddresses",
				"operationId": "patientAddressesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "addressId",
						"in": "path",
						"description": "addressId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/commentOnDocuments": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientCommentOnDocuments",
				"operationId": "patientCommentOnDocumentsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«CommentOnDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientCommentOnDocuments",
				"operationId": "patientCommentOnDocumentsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«CommentOnDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientCommentOnDocuments",
				"operationId": "patientCommentOnDocumentsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«CommentOnDocument»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientCommentOnDocuments",
				"operationId": "patientCommentOnDocumentsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientCommentOnDocuments",
				"operationId": "patientCommentOnDocumentsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«CommentOnDocument»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/commentOnDocuments/{commentondocumentId}": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientCommentOnDocuments",
				"operationId": "patientCommentOnDocumentsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "commentondocumentId",
						"in": "path",
						"description": "commentondocumentId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«CommentOnDocument»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientCommentOnDocuments",
				"operationId": "patientCommentOnDocumentsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "commentondocumentId",
						"in": "path",
						"description": "commentondocumentId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/consultation": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientConsultation",
				"operationId": "patientConsultationUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientConsultation",
				"operationId": "patientConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientConsultation",
				"operationId": "patientConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientConsultation",
				"operationId": "patientConsultationUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientConsultation",
				"operationId": "patientConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/consultation/{consultationId}": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientConsultation",
				"operationId": "patientConsultationUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "path",
						"description": "consultationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientConsultation",
				"operationId": "patientConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "path",
						"description": "consultationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/diagnosticReportValues": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientDiagnosticReportValues",
				"operationId": "patientDiagnosticReportValuesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientDiagnosticReportValues",
				"operationId": "patientDiagnosticReportValuesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientDiagnosticReportValues",
				"operationId": "patientDiagnosticReportValuesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientDiagnosticReportValues",
				"operationId": "patientDiagnosticReportValuesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientDiagnosticReportValues",
				"operationId": "patientDiagnosticReportValuesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticReportValue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/diagnosticReportValues/{diagnosticreportvalueId}": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientDiagnosticReportValues",
				"operationId": "patientDiagnosticReportValuesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticreportvalueId",
						"in": "path",
						"description": "diagnosticreportvalueId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticReportValue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientDiagnosticReportValues",
				"operationId": "patientDiagnosticReportValuesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticreportvalueId",
						"in": "path",
						"description": "diagnosticreportvalueId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/family": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientFamily",
				"operationId": "patientFamilyUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Family»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientFamily",
				"operationId": "patientFamilyUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Family»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientFamily",
				"operationId": "patientFamilyUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Family»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientFamily",
				"operationId": "patientFamilyUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientFamily",
				"operationId": "patientFamilyUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Family»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/patientHistories": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientHistories",
				"operationId": "patientPatientHistoriesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientHistories",
				"operationId": "patientPatientHistoriesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientHistories",
				"operationId": "patientPatientHistoriesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientHistories",
				"operationId": "patientPatientHistoriesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientHistories",
				"operationId": "patientPatientHistoriesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientHistory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/patientHistories/{patienthistoryId}": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientHistories",
				"operationId": "patientPatientHistoriesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patienthistoryId",
						"in": "path",
						"description": "patienthistoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientHistory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientHistories",
				"operationId": "patientPatientHistoriesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patienthistoryId",
						"in": "path",
						"description": "patienthistoryId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/patientSymptom": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientSymptom",
				"operationId": "patientPatientSymptomUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientSymptom",
				"operationId": "patientPatientSymptomUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientSymptom",
				"operationId": "patientPatientSymptomUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientSymptom",
				"operationId": "patientPatientSymptomUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientSymptom",
				"operationId": "patientPatientSymptomUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientSymptom»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/patientSymptom/{patientsymptomId}": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientSymptom",
				"operationId": "patientPatientSymptomUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientsymptomId",
						"in": "path",
						"description": "patientsymptomId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PatientSymptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPatientSymptom",
				"operationId": "patientPatientSymptomUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientsymptomId",
						"in": "path",
						"description": "patientsymptomId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/prescriptionByDates": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPrescriptionByDates",
				"operationId": "patientPrescriptionByDatesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPrescriptionByDates",
				"operationId": "patientPrescriptionByDatesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPrescriptionByDates",
				"operationId": "patientPrescriptionByDatesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPrescriptionByDates",
				"operationId": "patientPrescriptionByDatesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPrescriptionByDates",
				"operationId": "patientPrescriptionByDatesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/patients/{id}/prescriptionByDates/{prescriptionbydateId}": {
			"get": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPrescriptionByDates",
				"operationId": "patientPrescriptionByDatesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionbydateId",
						"in": "path",
						"description": "prescriptionbydateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Patient Entity"
				],
				"summary": "patientPrescriptionByDates",
				"operationId": "patientPrescriptionByDatesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionbydateId",
						"in": "path",
						"description": "prescriptionbydateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/pos/consultation": {
			"post": {
				"tags": [
					"order-swagger-controller"
				],
				"summary": "fetchOrPostConsultationDetailsForPos",
				"operationId": "fetchOrPostConsultationDetailsForPosUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SummaryDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationsForEPrescription"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/post/state": {
			"post": {
				"tags": [
					"state-and-city-controller"
				],
				"summary": "postStates",
				"operationId": "postStatesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/StateCity"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/precautions": {
			"get": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "findAllPrecaution",
				"operationId": "findAllPrecautionUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Precaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "savePrecaution",
				"operationId": "savePrecautionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Precaution"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Precaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/precautions/{id}": {
			"get": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "findByIdPrecaution",
				"operationId": "findByIdPrecautionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Precaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "savePrecaution",
				"operationId": "savePrecautionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Precaution"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Precaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "deletePrecaution",
				"operationId": "deletePrecautionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "savePrecaution",
				"operationId": "savePrecautionUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Precaution"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Precaution»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/precautions/{id}/diagnosticTypePrecautions": {
			"get": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "precautionDiagnosticTypePrecautions",
				"operationId": "precautionDiagnosticTypePrecautionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "precautionDiagnosticTypePrecautions",
				"operationId": "precautionDiagnosticTypePrecautionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "precautionDiagnosticTypePrecautions",
				"operationId": "precautionDiagnosticTypePrecautionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "precautionDiagnosticTypePrecautions",
				"operationId": "precautionDiagnosticTypePrecautionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "precautionDiagnosticTypePrecautions",
				"operationId": "precautionDiagnosticTypePrecautionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypePrecaution»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/precautions/{id}/diagnosticTypePrecautions/{diagnostictypeprecautionId}": {
			"get": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "precautionDiagnosticTypePrecautions",
				"operationId": "precautionDiagnosticTypePrecautionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeprecautionId",
						"in": "path",
						"description": "diagnostictypeprecautionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypePrecaution»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Precaution Entity"
				],
				"summary": "precautionDiagnosticTypePrecautions",
				"operationId": "precautionDiagnosticTypePrecautionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeprecautionId",
						"in": "path",
						"description": "diagnostictypeprecautionId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescription-description": {
			"get": {
				"tags": [
					"prescription-controller"
				],
				"summary": "populatePrescriptions",
				"operationId": "populatePrescriptionsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "request",
					"description": "request",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/PrescriptionMetadataRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PrescriptionWithDescription"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"prescription-controller"
				],
				"summary": "populatePrescriptions",
				"operationId": "populatePrescriptionsUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "request",
					"description": "request",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/PrescriptionMetadataRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PrescriptionWithDescription"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"prescription-controller"
				],
				"summary": "populatePrescriptions",
				"operationId": "populatePrescriptionsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "request",
					"description": "request",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/PrescriptionMetadataRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PrescriptionWithDescription"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"prescription-controller"
				],
				"summary": "populatePrescriptions",
				"operationId": "populatePrescriptionsUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "request",
					"description": "request",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/PrescriptionMetadataRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PrescriptionWithDescription"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"prescription-controller"
				],
				"summary": "populatePrescriptions",
				"operationId": "populatePrescriptionsUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "request",
					"description": "request",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/PrescriptionMetadataRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PrescriptionWithDescription"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"prescription-controller"
				],
				"summary": "populatePrescriptions",
				"operationId": "populatePrescriptionsUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "request",
					"description": "request",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/PrescriptionMetadataRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PrescriptionWithDescription"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"prescription-controller"
				],
				"summary": "populatePrescriptions",
				"operationId": "populatePrescriptionsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "request",
					"description": "request",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/PrescriptionMetadataRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PrescriptionWithDescription"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescription/reason-coding": {
			"delete": {
				"tags": [
					"reason-coding-controller"
				],
				"summary": "markPrescriptionDeleted",
				"operationId": "markPrescriptionDeletedUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "prescriptionId",
						"in": "query",
						"description": "prescriptionId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "reasonId",
						"in": "query",
						"description": "reasonId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findAllPrescriptionByDate",
				"operationId": "findAllPrescriptionByDateUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "savePrescriptionByDate",
				"operationId": "savePrescriptionByDateUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findAllByPrescriptionIdAndDate": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findAllByPrescriptionIdAndDatePrescriptionByDate",
				"operationId": "findAllByPrescriptionIdAndDatePrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findAllWithDateAfter": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findAllWithDateAfterPrescriptionByDate",
				"operationId": "findAllWithDateAfterPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByConsultationId": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByConsultationIdPrescriptionByDate",
				"operationId": "findByConsultationIdPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByConsultationIdIn": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByConsultationIdInPrescriptionByDate",
				"operationId": "findByConsultationIdInPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByConsultationIdInOrderByDateDesc": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByConsultationIdInOrderByDateDescPrescriptionByDate",
				"operationId": "findByConsultationIdInOrderByDateDescPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByConsultationIdWithCurrent": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByConsultationIdWithCurrentPrescriptionByDate",
				"operationId": "findByConsultationIdWithCurrentPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "currentDate",
						"in": "query",
						"description": "currentDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByDateGreaterThanEqualAndDateLessThan": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByDateGreaterThanEqualAndDateLessThanPrescriptionByDate",
				"operationId": "findByDateGreaterThanEqualAndDateLessThanPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "date",
						"in": "query",
						"description": "date",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "date1",
						"in": "query",
						"description": "date1",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByPatientId": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByPatientIdPrescriptionByDate",
				"operationId": "findByPatientIdPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByPatientIdAndConsultationIdNotInAndDateBetweenOrderByDateDesc": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByPatientIdAndConsultationIdNotInAndDateBetweenOrderByDateDescPrescriptionByDate",
				"operationId": "findByPatientIdAndConsultationIdNotInAndDateBetweenOrderByDateDescPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByPatientIdInAndDateBetweenOrderByDateDesc": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByPatientIdInAndDateBetweenOrderByDateDescPrescriptionByDate",
				"operationId": "findByPatientIdInAndDateBetweenOrderByDateDescPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByPatientIdInAndDateGreaterThanEqualAndDateLessThanOrderByDateDesc": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByPatientIdInAndDateGreaterThanEqualAndDateLessThanOrderByDateDescPrescriptionByDate",
				"operationId": "findByPatientIdInAndDateGreaterThanEqualAndDateLessThanOrderByDateDescPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date-time"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/search/findByPrescriptionDescriptionId": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByPrescriptionDescriptionIdPrescriptionByDate",
				"operationId": "findByPrescriptionDescriptionIdPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/{id}": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "findByIdPrescriptionByDate",
				"operationId": "findByIdPrescriptionByDateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "savePrescriptionByDate",
				"operationId": "savePrescriptionByDateUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PrescriptionByDate"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "deletePrescriptionByDate",
				"operationId": "deletePrescriptionByDateUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "savePrescriptionByDate",
				"operationId": "savePrescriptionByDateUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PrescriptionByDate"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionByDate»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/{id}/consultation": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDateConsultation",
				"operationId": "prescriptionByDateConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDateConsultation",
				"operationId": "prescriptionByDateConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDateConsultation",
				"operationId": "prescriptionByDateConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDateConsultation",
				"operationId": "prescriptionByDateConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDateConsultation",
				"operationId": "prescriptionByDateConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/{id}/patient": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePatient",
				"operationId": "prescriptionByDatePatientUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePatient",
				"operationId": "prescriptionByDatePatientUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePatient",
				"operationId": "prescriptionByDatePatientUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePatient",
				"operationId": "prescriptionByDatePatientUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePatient",
				"operationId": "prescriptionByDatePatientUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Patient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/{id}/prescription": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescription",
				"operationId": "prescriptionByDatePrescriptionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescription",
				"operationId": "prescriptionByDatePrescriptionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescription",
				"operationId": "prescriptionByDatePrescriptionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescription",
				"operationId": "prescriptionByDatePrescriptionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescription",
				"operationId": "prescriptionByDatePrescriptionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionByDates/{id}/prescriptionDescription": {
			"get": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescriptionDescription",
				"operationId": "prescriptionByDatePrescriptionDescriptionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescriptionDescription",
				"operationId": "prescriptionByDatePrescriptionDescriptionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescriptionDescription",
				"operationId": "prescriptionByDatePrescriptionDescriptionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescriptionDescription",
				"operationId": "prescriptionByDatePrescriptionDescriptionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionByDate Entity"
				],
				"summary": "prescriptionByDatePrescriptionDescription",
				"operationId": "prescriptionByDatePrescriptionDescriptionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "findAllPrescriptionDescription",
				"operationId": "findAllPrescriptionDescriptionUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionDescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "savePrescriptionDescription",
				"operationId": "savePrescriptionDescriptionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PrescriptionDescription"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/search/deleteByCode": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "deleteByCodePrescriptionDescription",
				"operationId": "deleteByCodePrescriptionDescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "code",
					"in": "query",
					"description": "code",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/search/findAllByPrescriptionId": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "findAllByPrescriptionIdPrescriptionDescription",
				"operationId": "findAllByPrescriptionIdPrescriptionDescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionDescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/search/findByConsultationId": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "findByConsultationIdPrescriptionDescription",
				"operationId": "findByConsultationIdPrescriptionDescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionDescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "findByIdPrescriptionDescription",
				"operationId": "findByIdPrescriptionDescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "savePrescriptionDescription",
				"operationId": "savePrescriptionDescriptionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PrescriptionDescription"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "deleteByIdPrescriptionDescription",
				"operationId": "deleteByIdPrescriptionDescriptionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "savePrescriptionDescription",
				"operationId": "savePrescriptionDescriptionUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PrescriptionDescription"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}/consultationReason": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionConsultationReason",
				"operationId": "prescriptionDescriptionConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionConsultationReason",
				"operationId": "prescriptionDescriptionConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionConsultationReason",
				"operationId": "prescriptionDescriptionConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionConsultationReason",
				"operationId": "prescriptionDescriptionConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionConsultationReason",
				"operationId": "prescriptionDescriptionConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}/dates": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionDates",
				"operationId": "prescriptionDescriptionDatesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicationDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionDates",
				"operationId": "prescriptionDescriptionDatesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicationDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionDates",
				"operationId": "prescriptionDescriptionDatesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicationDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionDates",
				"operationId": "prescriptionDescriptionDatesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionDates",
				"operationId": "prescriptionDescriptionDatesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicationDate»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}/dates/{medicationdateId}": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionDates",
				"operationId": "prescriptionDescriptionDatesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicationdateId",
						"in": "path",
						"description": "medicationdateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicationDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionDates",
				"operationId": "prescriptionDescriptionDatesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicationdateId",
						"in": "path",
						"description": "medicationdateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}/medicine": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionMedicine",
				"operationId": "prescriptionDescriptionMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionMedicine",
				"operationId": "prescriptionDescriptionMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionMedicine",
				"operationId": "prescriptionDescriptionMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionMedicine",
				"operationId": "prescriptionDescriptionMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionMedicine",
				"operationId": "prescriptionDescriptionMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}/prescription": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescription",
				"operationId": "prescriptionDescriptionPrescriptionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescription",
				"operationId": "prescriptionDescriptionPrescriptionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescription",
				"operationId": "prescriptionDescriptionPrescriptionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescription",
				"operationId": "prescriptionDescriptionPrescriptionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescription",
				"operationId": "prescriptionDescriptionPrescriptionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}/prescriptionByDate": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescriptionByDate",
				"operationId": "prescriptionDescriptionPrescriptionByDateUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescriptionByDate",
				"operationId": "prescriptionDescriptionPrescriptionByDateUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescriptionByDate",
				"operationId": "prescriptionDescriptionPrescriptionByDateUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescriptionByDate",
				"operationId": "prescriptionDescriptionPrescriptionByDateUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescriptionByDate",
				"operationId": "prescriptionDescriptionPrescriptionByDateUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}/prescriptionByDate/{prescriptionbydateId}": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescriptionByDate",
				"operationId": "prescriptionDescriptionPrescriptionByDateUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionbydateId",
						"in": "path",
						"description": "prescriptionbydateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionPrescriptionByDate",
				"operationId": "prescriptionDescriptionPrescriptionByDateUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionbydateId",
						"in": "path",
						"description": "prescriptionbydateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptionDescriptions/{id}/secondaryMedicine": {
			"get": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionSecondaryMedicine",
				"operationId": "prescriptionDescriptionSecondaryMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionSecondaryMedicine",
				"operationId": "prescriptionDescriptionSecondaryMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionSecondaryMedicine",
				"operationId": "prescriptionDescriptionSecondaryMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionSecondaryMedicine",
				"operationId": "prescriptionDescriptionSecondaryMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"PrescriptionDescription Entity"
				],
				"summary": "prescriptionDescriptionSecondaryMedicine",
				"operationId": "prescriptionDescriptionSecondaryMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "findAllPrescription",
				"operationId": "findAllPrescriptionUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "savePrescription",
				"operationId": "savePrescriptionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Prescription"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "fetchDetailsThroughIdPrescription",
				"operationId": "fetchDetailsThroughIdPrescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/search/fetchInvoicedPrescription": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "fetchInvoicedPrescriptionPrescription",
				"operationId": "fetchInvoicedPrescriptionPrescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/search/findByConsultationId": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "findByConsultationIdPrescription",
				"operationId": "findByConsultationIdPrescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/search/findByDoctorInClinicIn": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "findByDoctorInClinicInPrescription",
				"operationId": "findByDoctorInClinicInPrescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dateFrom",
						"in": "query",
						"description": "dateFrom",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dateTill",
						"in": "query",
						"description": "dateTill",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "findByIdPrescription",
				"operationId": "findByIdPrescriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "savePrescription",
				"operationId": "savePrescriptionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Prescription"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "deletePrescription",
				"operationId": "deletePrescriptionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "savePrescription",
				"operationId": "savePrescriptionUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Prescription"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/consultation": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultation",
				"operationId": "prescriptionConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultation",
				"operationId": "prescriptionConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultation",
				"operationId": "prescriptionConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultation",
				"operationId": "prescriptionConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultation",
				"operationId": "prescriptionConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/consultationReason": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultationReason",
				"operationId": "prescriptionConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultationReason",
				"operationId": "prescriptionConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultationReason",
				"operationId": "prescriptionConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultationReason",
				"operationId": "prescriptionConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionConsultationReason",
				"operationId": "prescriptionConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/declineReason": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionDeclineReason",
				"operationId": "prescriptionDeclineReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionDeclineReason",
				"operationId": "prescriptionDeclineReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionDeclineReason",
				"operationId": "prescriptionDeclineReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionDeclineReason",
				"operationId": "prescriptionDeclineReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionDeclineReason",
				"operationId": "prescriptionDeclineReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/medicine": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicine",
				"operationId": "prescriptionMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicine",
				"operationId": "prescriptionMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicine",
				"operationId": "prescriptionMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicine",
				"operationId": "prescriptionMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicine",
				"operationId": "prescriptionMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/medicineGeneral": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineGeneral",
				"operationId": "prescriptionMedicineGeneralUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineGeneral",
				"operationId": "prescriptionMedicineGeneralUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineGeneral",
				"operationId": "prescriptionMedicineGeneralUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineGeneral",
				"operationId": "prescriptionMedicineGeneralUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineGeneral",
				"operationId": "prescriptionMedicineGeneralUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineGeneral»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/medicineInClinic": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInClinic",
				"operationId": "prescriptionMedicineInClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInClinic",
				"operationId": "prescriptionMedicineInClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInClinic",
				"operationId": "prescriptionMedicineInClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInClinic",
				"operationId": "prescriptionMedicineInClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInClinic",
				"operationId": "prescriptionMedicineInClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/medicineInventory": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInventory",
				"operationId": "prescriptionMedicineInventoryUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInventory",
				"operationId": "prescriptionMedicineInventoryUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInventory",
				"operationId": "prescriptionMedicineInventoryUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInventory",
				"operationId": "prescriptionMedicineInventoryUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionMedicineInventory",
				"operationId": "prescriptionMedicineInventoryUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineInventory»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/prescriptionByDates": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionByDates",
				"operationId": "prescriptionPrescriptionByDatesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionByDates",
				"operationId": "prescriptionPrescriptionByDatesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionByDates",
				"operationId": "prescriptionPrescriptionByDatesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionByDates",
				"operationId": "prescriptionPrescriptionByDatesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionByDates",
				"operationId": "prescriptionPrescriptionByDatesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionByDate»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/prescriptionByDates/{prescriptionbydateId}": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionByDates",
				"operationId": "prescriptionPrescriptionByDatesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionbydateId",
						"in": "path",
						"description": "prescriptionbydateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionByDate»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionByDates",
				"operationId": "prescriptionPrescriptionByDatesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptionbydateId",
						"in": "path",
						"description": "prescriptionbydateId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/prescriptionDescriptions": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionDescriptions",
				"operationId": "prescriptionPrescriptionDescriptionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionDescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionDescriptions",
				"operationId": "prescriptionPrescriptionDescriptionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionDescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionDescriptions",
				"operationId": "prescriptionPrescriptionDescriptionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionDescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionDescriptions",
				"operationId": "prescriptionPrescriptionDescriptionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionDescriptions",
				"operationId": "prescriptionPrescriptionDescriptionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PrescriptionDescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/prescriptionDescriptions/{prescriptiondescriptionId}": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionDescriptions",
				"operationId": "prescriptionPrescriptionDescriptionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptiondescriptionId",
						"in": "path",
						"description": "prescriptiondescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«PrescriptionDescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionPrescriptionDescriptions",
				"operationId": "prescriptionPrescriptionDescriptionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "prescriptiondescriptionId",
						"in": "path",
						"description": "prescriptiondescriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/secondaryMedicine": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionSecondaryMedicine",
				"operationId": "prescriptionSecondaryMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionSecondaryMedicine",
				"operationId": "prescriptionSecondaryMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionSecondaryMedicine",
				"operationId": "prescriptionSecondaryMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionSecondaryMedicine",
				"operationId": "prescriptionSecondaryMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionSecondaryMedicine",
				"operationId": "prescriptionSecondaryMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/transcriptionIssues": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionTranscriptionIssues",
				"operationId": "prescriptionTranscriptionIssuesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionTranscriptionIssues",
				"operationId": "prescriptionTranscriptionIssuesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionTranscriptionIssues",
				"operationId": "prescriptionTranscriptionIssuesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionTranscriptionIssues",
				"operationId": "prescriptionTranscriptionIssuesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionTranscriptionIssues",
				"operationId": "prescriptionTranscriptionIssuesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/prescriptions/{id}/transcriptionIssues/{transcriptionissueId}": {
			"get": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionTranscriptionIssues",
				"operationId": "prescriptionTranscriptionIssuesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionissueId",
						"in": "path",
						"description": "transcriptionissueId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Prescription Entity"
				],
				"summary": "prescriptionTranscriptionIssues",
				"operationId": "prescriptionTranscriptionIssuesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionissueId",
						"in": "path",
						"description": "transcriptionissueId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/procedureType-search": {
			"get": {
				"tags": [
					"ESProcedureType Entity"
				],
				"summary": "findAllESProcedureType",
				"operationId": "findAllESProcedureTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ESProcedureType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ESProcedureType Entity"
				],
				"summary": "saveESProcedureType",
				"operationId": "saveESProcedureTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ESProcedureType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESProcedureType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/procedureType-search/{id}": {
			"get": {
				"tags": [
					"ESProcedureType Entity"
				],
				"summary": "findByIdESProcedureType",
				"operationId": "findByIdESProcedureTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESProcedureType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ESProcedureType Entity"
				],
				"summary": "saveESProcedureType",
				"operationId": "saveESProcedureTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESProcedureType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESProcedureType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ESProcedureType Entity"
				],
				"summary": "deleteESProcedureType",
				"operationId": "deleteESProcedureTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ESProcedureType Entity"
				],
				"summary": "saveESProcedureType",
				"operationId": "saveESProcedureTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESProcedureType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESProcedureType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/procedures": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "findAllMedicalProcedure",
				"operationId": "findAllMedicalProcedureUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "saveMedicalProcedure",
				"operationId": "saveMedicalProcedureUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicalProcedure"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicalProcedure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/procedures/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "fetchDetailsThroughIdMedicalProcedure",
				"operationId": "fetchDetailsThroughIdMedicalProcedureUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/procedures/search/findByConsultationId": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "findByConsultationIdMedicalProcedure",
				"operationId": "findByConsultationIdMedicalProcedureUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/procedures/search/findByDoctorInClinicIn": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "findByDoctorInClinicInMedicalProcedure",
				"operationId": "findByDoctorInClinicInMedicalProcedureUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dateFrom",
						"in": "query",
						"description": "dateFrom",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dateTill",
						"in": "query",
						"description": "dateTill",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/procedures/{id}": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "findByIdMedicalProcedure",
				"operationId": "findByIdMedicalProcedureUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "saveMedicalProcedure",
				"operationId": "saveMedicalProcedureUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicalProcedure"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicalProcedure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "deleteMedicalProcedure",
				"operationId": "deleteMedicalProcedureUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "saveMedicalProcedure",
				"operationId": "saveMedicalProcedureUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/MedicalProcedure"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicalProcedure»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/procedures/{id}/consultation": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultation",
				"operationId": "medicalProcedureConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultation",
				"operationId": "medicalProcedureConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultation",
				"operationId": "medicalProcedureConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultation",
				"operationId": "medicalProcedureConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultation",
				"operationId": "medicalProcedureConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/procedures/{id}/consultationReason": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultationReason",
				"operationId": "medicalProcedureConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultationReason",
				"operationId": "medicalProcedureConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultationReason",
				"operationId": "medicalProcedureConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultationReason",
				"operationId": "medicalProcedureConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureConsultationReason",
				"operationId": "medicalProcedureConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/procedures/{id}/declineReason": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureDeclineReason",
				"operationId": "medicalProcedureDeclineReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureDeclineReason",
				"operationId": "medicalProcedureDeclineReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureDeclineReason",
				"operationId": "medicalProcedureDeclineReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureDeclineReason",
				"operationId": "medicalProcedureDeclineReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureDeclineReason",
				"operationId": "medicalProcedureDeclineReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/procedures/{id}/procedureType": {
			"get": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureProcedureType",
				"operationId": "medicalProcedureProcedureTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ProcedureType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureProcedureType",
				"operationId": "medicalProcedureProcedureTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ProcedureType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureProcedureType",
				"operationId": "medicalProcedureProcedureTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ProcedureType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureProcedureType",
				"operationId": "medicalProcedureProcedureTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"MedicalProcedure Entity"
				],
				"summary": "medicalProcedureProcedureType",
				"operationId": "medicalProcedureProcedureTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ProcedureType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/proceduretypes": {
			"get": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "findAllProcedureType",
				"operationId": "findAllProcedureTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ProcedureType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "saveProcedureType",
				"operationId": "saveProcedureTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ProcedureType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ProcedureType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/proceduretypes/search/findAllByClinic_Id": {
			"get": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "findAllByClinic_IdProcedureType",
				"operationId": "findAllByClinic_IdProcedureTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ProcedureType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/proceduretypes/search/findAllByNameIgnoreCaseContainingAndClinic_Id": {
			"get": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "findAllByNameIgnoreCaseContainingAndClinic_IdProcedureType",
				"operationId": "findAllByNameIgnoreCaseContainingAndClinic_IdProcedureTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ProcedureType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/proceduretypes/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "findByIsActiveTrueProcedureType",
				"operationId": "findByIsActiveTrueProcedureTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ProcedureType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/proceduretypes/{id}": {
			"get": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "findByIdProcedureType",
				"operationId": "findByIdProcedureTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ProcedureType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "saveProcedureType",
				"operationId": "saveProcedureTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ProcedureType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ProcedureType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "deleteProcedureType",
				"operationId": "deleteProcedureTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "saveProcedureType",
				"operationId": "saveProcedureTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ProcedureType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ProcedureType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/proceduretypes/{id}/clinic": {
			"get": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeClinic",
				"operationId": "procedureTypeClinicUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeClinic",
				"operationId": "procedureTypeClinicUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeClinic",
				"operationId": "procedureTypeClinicUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeClinic",
				"operationId": "procedureTypeClinicUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeClinic",
				"operationId": "procedureTypeClinicUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Clinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/proceduretypes/{id}/medicalProcedures": {
			"get": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeMedicalProcedures",
				"operationId": "procedureTypeMedicalProceduresUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeMedicalProcedures",
				"operationId": "procedureTypeMedicalProceduresUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeMedicalProcedures",
				"operationId": "procedureTypeMedicalProceduresUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeMedicalProcedures",
				"operationId": "procedureTypeMedicalProceduresUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeMedicalProcedures",
				"operationId": "procedureTypeMedicalProceduresUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicalProcedure»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/proceduretypes/{id}/medicalProcedures/{medicalprocedureId}": {
			"get": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeMedicalProcedures",
				"operationId": "procedureTypeMedicalProceduresUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicalprocedureId",
						"in": "path",
						"description": "medicalprocedureId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicalProcedure»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ProcedureType Entity"
				],
				"summary": "procedureTypeMedicalProcedures",
				"operationId": "procedureTypeMedicalProceduresUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicalprocedureId",
						"in": "path",
						"description": "medicalprocedureId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/profile": {
			"get": {
				"tags": [
					"profile-controller"
				],
				"summary": "listAllFormsOfMetadata",
				"operationId": "listAllFormsOfMetadataUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ResourceSupport"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"options": {
				"tags": [
					"profile-controller"
				],
				"summary": "profileOptions",
				"operationId": "profileOptionsUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/queueSummery": {
			"get": {
				"tags": [
					"dashboard-summary-controller"
				],
				"summary": "getSummeryDetail",
				"operationId": "getSummeryDetailUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "doctorInClinic",
					"in": "query",
					"description": "doctorInClinic",
					"required": true,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SummeryData»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/reason/by/id": {
			"get": {
				"tags": [
					"consultation-reason-controller"
				],
				"summary": "getReasonsById",
				"operationId": "getReasonsByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationReasons"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/reason/create": {
			"post": {
				"tags": [
					"consultation-reason-controller"
				],
				"summary": "createReasons",
				"operationId": "createReasonsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "reasons",
					"description": "reasons",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ReasonDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StringBuilder"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/reason/edit": {
			"patch": {
				"tags": [
					"consultation-reason-controller"
				],
				"summary": "editReasons",
				"operationId": "editReasonsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "bodies",
					"description": "bodies",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ReasonEditDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StringBuilder"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/reason/fetch/all": {
			"get": {
				"tags": [
					"consultation-reason-controller"
				],
				"summary": "fetchAllReasons",
				"operationId": "fetchAllReasonsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "reasonType",
						"in": "query",
						"description": "reasonType",
						"required": false,
						"type": "string",
						"default": "MEDICINE",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"OVER_ALL"
						]
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation-engine/consultation": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchDetailsFromConsultation",
				"operationId": "fetchDetailsFromConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationConsultationBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation-engine/fetch": {
			"post": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchRecommendationsForConsultation",
				"operationId": "fetchRecommendationsForConsultationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"in": "body",
						"name": "recommendationDto",
						"description": "recommendationDto",
						"required": true,
						"schema": {
							"$ref": "#/definitions/RecommendationDto"
						}
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationEngineResponseBody"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/advice": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAdviceBasedOnAdviceId",
				"operationId": "fetchAdviceBasedOnAdviceIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "adviceId",
					"in": "query",
					"description": "adviceId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationAdviceDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/advice/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllAdviceBasedOnAdviceId",
				"operationId": "fetchAllAdviceBasedOnAdviceIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationAdviceBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/advice/search/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllAdviceBasedOnAdviceIdForSearch",
				"operationId": "fetchAllAdviceBasedOnAdviceIdForSearchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationAdviceBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/bulk-post": {
			"post": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "postRecommendationDetails",
				"operationId": "postRecommendationDetailsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "recommendationBulkUploadDto",
					"description": "recommendationBulkUploadDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/RecommendationBulkUploadDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/diagnosis-type": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchDiagnosisTypeBasedOnDiagnosis",
				"operationId": "fetchDiagnosisTypeBasedOnDiagnosisUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosisId",
					"in": "query",
					"description": "diagnosisId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationDiagnosisTypeDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/diagnosis-type/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllDiagnosisTypeBasedOnDiagnosis",
				"operationId": "fetchAllDiagnosisTypeBasedOnDiagnosisUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationDiagnosisTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/diagnosis-type/search/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllDiagnosisTypeBasedOnDiagnosisForSearch",
				"operationId": "fetchAllDiagnosisTypeBasedOnDiagnosisForSearchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationDiagnosisTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/diagnostic-type": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchDiagnosticTypeBasedOnDiagnostic",
				"operationId": "fetchDiagnosticTypeBasedOnDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosticId",
					"in": "query",
					"description": "diagnosticId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationDiagnosticTypeDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/diagnostic-type/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllDiagnosticTypeBasedOnDiagnostic",
				"operationId": "fetchAllDiagnosticTypeBasedOnDiagnosticUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationDiagnosticTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/diagnostic-type/search/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllDiagnosticTypeBasedOnDiagnosticForSearch",
				"operationId": "fetchAllDiagnosticTypeBasedOnDiagnosticForSearchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationDiagnosticTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/edit-body": {
			"get": {
				"tags": [
					"converter-controller"
				],
				"summary": "convertResponseFormatToRequestForEPrescriptionEdit",
				"operationId": "convertResponseFormatToRequestForEPrescriptionEditUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationBulkUploadDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/medicine": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchMedicineBasedOnMedicineIdForSearch",
				"operationId": "fetchMedicineBasedOnMedicineIdForSearchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "medicineId",
					"in": "query",
					"description": "medicineId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationMedicineDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/prescription": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchMedicineBasedOnMedicineId",
				"operationId": "fetchMedicineBasedOnMedicineIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "prescriptionId",
					"in": "query",
					"description": "prescriptionId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationMedicineDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/prescription/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllMedicineBasedOnMedicine",
				"operationId": "fetchAllMedicineBasedOnMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationMedicineBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/prescription/search/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllMedicineBasedOnMedicineForSearch",
				"operationId": "fetchAllMedicineBasedOnMedicineForSearchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationMedicineBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/procedure-type": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchProcedureTypeBasedOnProcedure",
				"operationId": "fetchProcedureTypeBasedOnProcedureUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "procedureId",
					"in": "query",
					"description": "procedureId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationProcedureTypeDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/procedure-type/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllProcedureTypeBasedOnProcedure",
				"operationId": "fetchAllProcedureTypeBasedOnProcedureUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationProcedureTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/procedure-type/search/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllProcedureTypeBasedOnProcedureForSearch",
				"operationId": "fetchAllProcedureTypeBasedOnProcedureForSearchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationProcedureTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/search": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "getRecommendationsBySearchAndType",
				"operationId": "getRecommendationsBySearchAndTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/symptom-type": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchSymptomTypeBasedOnSymptom",
				"operationId": "fetchSymptomTypeBasedOnSymptomUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomId",
					"in": "query",
					"description": "symptomId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationSymptomTypeDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/symptom-type/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllSymptomTypeBasedOnSymptom",
				"operationId": "fetchAllSymptomTypeBasedOnSymptomUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationSymptomTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/symptom-type/byId": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchSymptomType",
				"operationId": "fetchSymptomTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomTypeId",
					"in": "query",
					"description": "symptomTypeId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationSymptomTypeDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/symptom-type/search/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllSymptomTypeBasedOnSymptomForSearch",
				"operationId": "fetchAllSymptomTypeBasedOnSymptomForSearchUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationSymptomTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/allergy-type": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllergyTypeBasedOnAllergy",
				"operationId": "fetchAllergyTypeBasedOnAllergyUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "allergyId",
					"in": "query",
					"description": "allergyId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationAllergyTypeDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/allergy-type/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllAllergyTypeBasedOnAllergy",
				"operationId": "fetchAllAllergyTypeBasedOnAllergyUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationAllergyTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/clinical-finding-type": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchClinicalFindingTypeBasedOnClinicalFinding",
				"operationId": "fetchClinicalFindingTypeBasedOnClinicalFindingUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicalFindingId",
					"in": "query",
					"description": "clinicalFindingId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/RecommendationClinicalFindingTypeDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/recommendation/clinical-finding-type/all": {
			"get": {
				"tags": [
					"recommendation-controller"
				],
				"summary": "fetchAllClinicalFindingTypeBasedOnClinicalFinding",
				"operationId": "fetchAllClinicalFindingTypeBasedOnClinicalFindingUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedRecommendationClinicalFindingTypeBody"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/referrals": {
			"get": {
				"tags": [
					"Referral Entity"
				],
				"summary": "findAllReferral",
				"operationId": "findAllReferralUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Referral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Referral Entity"
				],
				"summary": "saveReferral",
				"operationId": "saveReferralUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Referral"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Referral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/referrals/search/findByConsultationId": {
			"get": {
				"tags": [
					"Referral Entity"
				],
				"summary": "findByConsultationIdReferral",
				"operationId": "findByConsultationIdReferralUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Referral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/referrals/{id}": {
			"get": {
				"tags": [
					"Referral Entity"
				],
				"summary": "findByIdReferral",
				"operationId": "findByIdReferralUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Referral»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Referral Entity"
				],
				"summary": "saveReferral",
				"operationId": "saveReferralUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Referral"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Referral»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Referral Entity"
				],
				"summary": "deleteReferral",
				"operationId": "deleteReferralUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Referral Entity"
				],
				"summary": "saveReferral",
				"operationId": "saveReferralUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Referral"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Referral»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/referrals/{id}/consultation": {
			"get": {
				"tags": [
					"Referral Entity"
				],
				"summary": "referralConsultation",
				"operationId": "referralConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Referral Entity"
				],
				"summary": "referralConsultation",
				"operationId": "referralConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Referral Entity"
				],
				"summary": "referralConsultation",
				"operationId": "referralConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Referral Entity"
				],
				"summary": "referralConsultation",
				"operationId": "referralConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Referral Entity"
				],
				"summary": "referralConsultation",
				"operationId": "referralConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/reschedule-appointment": {
			"patch": {
				"tags": [
					"consultation-controller"
				],
				"summary": "rescheduleAppointment",
				"operationId": "rescheduleAppointmentUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "appointmentTime",
						"in": "query",
						"description": "appointmentTime",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "timeslotId",
						"in": "query",
						"description": "timeslotId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Consultations"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/reset/reminder/consultation-level": {
			"post": {
				"tags": [
					"medication-reminder-controller"
				],
				"summary": "resetPatientReminderOnConsultationLevel",
				"operationId": "resetPatientReminderOnConsultationLevelUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "optOutReasonDto",
					"description": "optOutReasonDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OptOutReasonDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/reset/reminder/patient-level": {
			"post": {
				"tags": [
					"medication-reminder-controller"
				],
				"summary": "resetPatientReminder",
				"operationId": "resetPatientReminderUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "optOutReasonDto",
					"description": "optOutReasonDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/OptOutReasonDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/salts": {
			"get": {
				"tags": [
					"Salt Entity"
				],
				"summary": "findAllSalt",
				"operationId": "findAllSaltUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Salt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saveSalt",
				"operationId": "saveSaltUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Salt"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Salt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/salts/{id}": {
			"get": {
				"tags": [
					"Salt Entity"
				],
				"summary": "findByIdSalt",
				"operationId": "findByIdSaltUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Salt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saveSalt",
				"operationId": "saveSaltUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Salt"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Salt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Salt Entity"
				],
				"summary": "deleteSalt",
				"operationId": "deleteSaltUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saveSalt",
				"operationId": "saveSaltUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Salt"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Salt»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/salts/{id}/medicineSalts": {
			"get": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saltMedicineSalts",
				"operationId": "saltMedicineSaltsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saltMedicineSalts",
				"operationId": "saltMedicineSaltsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saltMedicineSalts",
				"operationId": "saltMedicineSaltsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saltMedicineSalts",
				"operationId": "saltMedicineSaltsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saltMedicineSalts",
				"operationId": "saltMedicineSaltsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«MedicineSalt»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/salts/{id}/medicineSalts/{medicinesaltId}": {
			"get": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saltMedicineSalts",
				"operationId": "saltMedicineSaltsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicinesaltId",
						"in": "path",
						"description": "medicinesaltId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«MedicineSalt»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Salt Entity"
				],
				"summary": "saltMedicineSalts",
				"operationId": "saltMedicineSaltsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "medicinesaltId",
						"in": "path",
						"description": "medicinesaltId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/sampleIds/using-labId-diagnosticType": {
			"get": {
				"tags": [
					"specimen-type-and-diagnostic-lab-controller"
				],
				"summary": "getSampleIdsUsingLabIdAndDiagnosticType",
				"operationId": "getSampleIdsUsingLabIdAndDiagnosticTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticTypeId",
						"in": "query",
						"description": "diagnosticTypeId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/scribble/doxper/storage/get-link": {
			"get": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "createScribbleAndGetPutUrlsForDoxper",
				"operationId": "createScribbleAndGetPutUrlsForDoxperUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ext",
						"in": "query",
						"description": "ext",
						"required": true,
						"type": "string"
					},
					{
						"name": "qrCode",
						"in": "query",
						"description": "qrCode",
						"required": true,
						"type": "string"
					},
					{
						"name": "scribbleType",
						"in": "query",
						"description": "scribbleType",
						"required": false,
						"type": "string",
						"enum": [
							"SIGNED_UPLOAD",
							"UPLOAD",
							"CAMERA",
							"DOXPER",
							"E_PRESCRIPTION",
							"APPLE_PENCIL",
							"WACOM",
							"UPLOAD_POS",
							"SCANNER"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/scribbles": {
			"get": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "findAllScribble",
				"operationId": "findAllScribbleUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Scribble»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "saveScribble",
				"operationId": "saveScribbleUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Scribble"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/add/vendor/patient/document": {
			"post": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "addVendorPatientDocument",
				"operationId": "addVendorPatientDocumentUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "vendorPatientDocumentDto",
					"description": "vendorPatientDocumentDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/VendorPatientDocumentDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Scribbles"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/scribbles/by/consultationId": {
			"get": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "getScribblesByConsultationId",
				"operationId": "getScribblesByConsultationIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Scribbles"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/scribbles/search/findByConsultationId": {
			"get": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "findByConsultationIdScribble",
				"operationId": "findByConsultationIdScribbleUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Scribble»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/scribbles/search/findByConsultationIdOrderByLastModifiedAsc": {
			"get": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "findByConsultationIdOrderByLastModifiedAscScribble",
				"operationId": "findByConsultationIdOrderByLastModifiedAscScribbleUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Scribble»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/scribbles/{id}": {
			"get": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "findByIdScribble",
				"operationId": "findByIdScribbleUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "saveScribble",
				"operationId": "saveScribbleUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Scribble"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "deleteScribble",
				"operationId": "deleteScribbleUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "saveScribble",
				"operationId": "saveScribbleUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Scribble"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Scribble»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/scribbles/{id}/consultation": {
			"get": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultation",
				"operationId": "scribbleConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultation",
				"operationId": "scribbleConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultation",
				"operationId": "scribbleConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultation",
				"operationId": "scribbleConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultation",
				"operationId": "scribbleConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/scribbles/{id}/consultationAndDoxpers": {
			"get": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultationAndDoxpers",
				"operationId": "scribbleConsultationAndDoxpersUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultationAndDoxpers",
				"operationId": "scribbleConsultationAndDoxpersUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultationAndDoxpers",
				"operationId": "scribbleConsultationAndDoxpersUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultationAndDoxpers",
				"operationId": "scribbleConsultationAndDoxpersUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultationAndDoxpers",
				"operationId": "scribbleConsultationAndDoxpersUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationAndDoxper»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/scribbles/{id}/consultationAndDoxpers/{consultationanddoxperId}": {
			"get": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultationAndDoxpers",
				"operationId": "scribbleConsultationAndDoxpersUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationanddoxperId",
						"in": "path",
						"description": "consultationanddoxperId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationAndDoxper»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Scribble Entity"
				],
				"summary": "scribbleConsultationAndDoxpers",
				"operationId": "scribbleConsultationAndDoxpersUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationanddoxperId",
						"in": "path",
						"description": "consultationanddoxperId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search-by-barcode": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "getBarcodeBatchDetailsByBarcode",
				"operationId": "getBarcodeBatchDetailsByBarcodeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "barcode",
						"in": "query",
						"description": "barcode",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MedicineSearchInTranscription"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/search-medicines-in-clinic": {
			"get": {
				"tags": [
					"medicine-controller"
				],
				"summary": "fetchMedicines",
				"operationId": "fetchMedicinesUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "activeFlag",
						"in": "query",
						"description": "activeFlag",
						"required": false,
						"type": "boolean",
						"default": true
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "integer",
						"default": 1,
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "integer",
						"default": 50,
						"format": "int32"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/MedicineAndMedicineInClinicDetailsWithPaginationDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/search/advice": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/consultation/patient": {
			"get": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatient",
				"operationId": "searchPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForSearchPatient»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatient",
				"operationId": "searchPatientUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForSearchPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatient",
				"operationId": "searchPatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForSearchPatient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatient",
				"operationId": "searchPatientUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForSearchPatient»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatient",
				"operationId": "searchPatientUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForSearchPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatient",
				"operationId": "searchPatientUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForSearchPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatient",
				"operationId": "searchPatientUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«PatientForSearchPatient»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/diagnosis-type": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/diagnostic-type": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/diagnostic-type-for-transcriber": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},		"/api/v1/emr/fetch-dic-id-list-from-dic-id": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "fetchDicIdListFromDicId",
				"operationId": "fetchDicIdListFromDicIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "dicId",
					"in": "query",
					"description": "dicId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "integer",
								"format": "int64"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/search/doctor-clinic": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "getDoctorsOrClinics",
				"operationId": "getDoctorsOrClinicsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ClinicForAdminDashboard"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/search/doctor-clinic-id": {
			"get": {
				"tags": [
					"doctor-and-clinic-controller"
				],
				"summary": "getDoctorsOrClinicsBasedOnId",
				"operationId": "getDoctorsOrClinicsBasedOnIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "name",
					"in": "query",
					"description": "name",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ClinicForAdminDashboard"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/search/medicine": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/medicine-for-transcriber": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/patient/for": {
			"get": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchApiForPatient",
				"operationId": "searchApiForPatientUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchApiForPatient",
				"operationId": "searchApiForPatientUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchApiForPatient",
				"operationId": "searchApiForPatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchApiForPatient",
				"operationId": "searchApiForPatientUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchApiForPatient",
				"operationId": "searchApiForPatientUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchApiForPatient",
				"operationId": "searchApiForPatientUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchApiForPatient",
				"operationId": "searchApiForPatientUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "condition",
						"in": "query",
						"description": "condition",
						"required": false,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "doctorInclinic",
						"in": "query",
						"description": "doctorInclinic",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "endDate",
						"in": "query",
						"description": "endDate",
						"required": false,
						"type": "string",
						"format": "date"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "startDate",
						"in": "query",
						"description": "startDate",
						"required": false,
						"type": "string",
						"format": "date"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/patient/using/consultation": {
			"get": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatientUsingConsultation",
				"operationId": "searchPatientUsingConsultationUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationForPatientSearch»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatientUsingConsultation",
				"operationId": "searchPatientUsingConsultationUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationForPatientSearch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatientUsingConsultation",
				"operationId": "searchPatientUsingConsultationUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationForPatientSearch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatientUsingConsultation",
				"operationId": "searchPatientUsingConsultationUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationForPatientSearch»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatientUsingConsultation",
				"operationId": "searchPatientUsingConsultationUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationForPatientSearch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatientUsingConsultation",
				"operationId": "searchPatientUsingConsultationUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationForPatientSearch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"patient-medical-history-controller"
				],
				"summary": "searchPatientUsingConsultation",
				"operationId": "searchPatientUsingConsultationUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicId",
						"in": "query",
						"description": "dicId",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ConsultationForPatientSearch»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/procedure-type": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/speciality/for/doctors": {
			"get": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "searchSpeciality",
				"operationId": "searchSpecialityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "searchSpeciality",
				"operationId": "searchSpecialityUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "searchSpeciality",
				"operationId": "searchSpecialityUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "searchSpeciality",
				"operationId": "searchSpecialityUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "searchSpeciality",
				"operationId": "searchSpecialityUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "searchSpeciality",
				"operationId": "searchSpecialityUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"common-symptom-controller"
				],
				"summary": "searchSpeciality",
				"operationId": "searchSpecialityUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "searchQuery",
						"in": "query",
						"description": "searchQuery",
						"required": true,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/symptom-type": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/symptom-type-for-transcriber": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/search/test/by-lab": {
			"get": {
				"tags": [
					"order-controller"
				],
				"summary": "searchDiagnosticTypesByLab",
				"operationId": "searchDiagnosticTypesByLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dtilId",
						"in": "query",
						"description": "dtilId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/OrderSearchObject"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/secondary-medicines": {
			"get": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "findAllSecondaryMedicine",
				"operationId": "findAllSecondaryMedicineUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SecondaryMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "saveSecondaryMedicine",
				"operationId": "saveSecondaryMedicineUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SecondaryMedicine"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/secondary-medicines/{id}": {
			"get": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "findByIdSecondaryMedicine",
				"operationId": "findByIdSecondaryMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "saveSecondaryMedicine",
				"operationId": "saveSecondaryMedicineUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SecondaryMedicine"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "deleteSecondaryMedicine",
				"operationId": "deleteSecondaryMedicineUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "saveSecondaryMedicine",
				"operationId": "saveSecondaryMedicineUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SecondaryMedicine"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SecondaryMedicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/secondary-medicines/{id}/medicine": {
			"get": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "secondaryMedicineMedicine",
				"operationId": "secondaryMedicineMedicineUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "secondaryMedicineMedicine",
				"operationId": "secondaryMedicineMedicineUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "secondaryMedicineMedicine",
				"operationId": "secondaryMedicineMedicineUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "secondaryMedicineMedicine",
				"operationId": "secondaryMedicineMedicineUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SecondaryMedicine Entity"
				],
				"summary": "secondaryMedicineMedicine",
				"operationId": "secondaryMedicineMedicineUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Medicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specialitiesDiagnosisType": {
			"get": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "findAllSpecialityDiagnosisType",
				"operationId": "findAllSpecialityDiagnosisTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityDiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "saveSpecialityDiagnosisType",
				"operationId": "saveSpecialityDiagnosisTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SpecialityDiagnosisType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityDiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/specialitiesDiagnosisType/{id}": {
			"get": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "findByIdSpecialityDiagnosisType",
				"operationId": "findByIdSpecialityDiagnosisTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityDiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "saveSpecialityDiagnosisType",
				"operationId": "saveSpecialityDiagnosisTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecialityDiagnosisType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityDiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "deleteSpecialityDiagnosisType",
				"operationId": "deleteSpecialityDiagnosisTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "saveSpecialityDiagnosisType",
				"operationId": "saveSpecialityDiagnosisTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecialityDiagnosisType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityDiagnosisType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specialitiesDiagnosisType/{id}/diagnosisType": {
			"get": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeDiagnosisType",
				"operationId": "specialityDiagnosisTypeDiagnosisTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeDiagnosisType",
				"operationId": "specialityDiagnosisTypeDiagnosisTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeDiagnosisType",
				"operationId": "specialityDiagnosisTypeDiagnosisTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeDiagnosisType",
				"operationId": "specialityDiagnosisTypeDiagnosisTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeDiagnosisType",
				"operationId": "specialityDiagnosisTypeDiagnosisTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosisType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specialitiesDiagnosisType/{id}/speciality": {
			"get": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeSpeciality",
				"operationId": "specialityDiagnosisTypeSpecialityUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeSpeciality",
				"operationId": "specialityDiagnosisTypeSpecialityUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeSpeciality",
				"operationId": "specialityDiagnosisTypeSpecialityUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeSpeciality",
				"operationId": "specialityDiagnosisTypeSpecialityUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecialityDiagnosisType Entity"
				],
				"summary": "specialityDiagnosisTypeSpeciality",
				"operationId": "specialityDiagnosisTypeSpecialityUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specialitiesVitalType": {
			"get": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "findAllSpecialityVitalType",
				"operationId": "findAllSpecialityVitalTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityVitalType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "saveSpecialityVitalType",
				"operationId": "saveSpecialityVitalTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SpecialityVitalType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityVitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/specialitiesVitalType/{id}": {
			"get": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "findByIdSpecialityVitalType",
				"operationId": "findByIdSpecialityVitalTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityVitalType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "saveSpecialityVitalType",
				"operationId": "saveSpecialityVitalTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecialityVitalType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityVitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "deleteSpecialityVitalType",
				"operationId": "deleteSpecialityVitalTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "saveSpecialityVitalType",
				"operationId": "saveSpecialityVitalTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecialityVitalType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityVitalType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specialitiesVitalType/{id}/speciality": {
			"get": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeSpeciality",
				"operationId": "specialityVitalTypeSpecialityUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeSpeciality",
				"operationId": "specialityVitalTypeSpecialityUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeSpeciality",
				"operationId": "specialityVitalTypeSpecialityUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeSpeciality",
				"operationId": "specialityVitalTypeSpecialityUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeSpeciality",
				"operationId": "specialityVitalTypeSpecialityUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specialitiesVitalType/{id}/vitalType": {
			"get": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeVitalType",
				"operationId": "specialityVitalTypeVitalTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeVitalType",
				"operationId": "specialityVitalTypeVitalTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeVitalType",
				"operationId": "specialityVitalTypeVitalTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeVitalType",
				"operationId": "specialityVitalTypeVitalTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecialityVitalType Entity"
				],
				"summary": "specialityVitalTypeVitalType",
				"operationId": "specialityVitalTypeVitalTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "findAllSpeciality",
				"operationId": "findAllSpecialityUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "saveSpeciality",
				"operationId": "saveSpecialityUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Speciality"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/speciality/search/findByDoctorsNotNull": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "findByDoctorsNotNullSpeciality",
				"operationId": "findByDoctorsNotNullSpecialityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/speciality/search/findByNameContaining": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "findByNameContainingSpeciality",
				"operationId": "findByNameContainingSpecialityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/speciality/search/searchWithName": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "searchWithNameSpeciality",
				"operationId": "searchWithNameSpecialityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "specialityName",
					"in": "query",
					"description": "specialityName",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "findByIdSpeciality",
				"operationId": "findByIdSpecialityUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "saveSpeciality",
				"operationId": "saveSpecialityUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Speciality"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "deleteSpeciality",
				"operationId": "deleteSpecialityUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "saveSpeciality",
				"operationId": "saveSpecialityUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Speciality"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Speciality»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}/doctors": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityDoctors",
				"operationId": "specialityDoctorsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityDoctors",
				"operationId": "specialityDoctorsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityDoctors",
				"operationId": "specialityDoctorsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityDoctors",
				"operationId": "specialityDoctorsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityDoctors",
				"operationId": "specialityDoctorsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Doctor»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}/doctors/{doctorId}": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityDoctors",
				"operationId": "specialityDoctorsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorId",
						"in": "path",
						"description": "doctorId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Doctor»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityDoctors",
				"operationId": "specialityDoctorsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorId",
						"in": "path",
						"description": "doctorId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}/healthProblemTagsForSpeciality": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityHealthProblemTagsForSpeciality",
				"operationId": "specialityHealthProblemTagsForSpecialityUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForSpeciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityHealthProblemTagsForSpeciality",
				"operationId": "specialityHealthProblemTagsForSpecialityUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForSpeciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityHealthProblemTagsForSpeciality",
				"operationId": "specialityHealthProblemTagsForSpecialityUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForSpeciality»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityHealthProblemTagsForSpeciality",
				"operationId": "specialityHealthProblemTagsForSpecialityUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityHealthProblemTagsForSpeciality",
				"operationId": "specialityHealthProblemTagsForSpecialityUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«HealthProblemTagsForSpeciality»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}/healthProblemTagsForSpeciality/{healthproblemtagsforspecialityId}": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityHealthProblemTagsForSpeciality",
				"operationId": "specialityHealthProblemTagsForSpecialityUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "healthproblemtagsforspecialityId",
						"in": "path",
						"description": "healthproblemtagsforspecialityId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«HealthProblemTagsForSpeciality»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialityHealthProblemTagsForSpeciality",
				"operationId": "specialityHealthProblemTagsForSpecialityUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "healthproblemtagsforspecialityId",
						"in": "path",
						"description": "healthproblemtagsforspecialityId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}/specialityDiagnosisTypes": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityDiagnosisTypes",
				"operationId": "specialitySpecialityDiagnosisTypesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityDiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityDiagnosisTypes",
				"operationId": "specialitySpecialityDiagnosisTypesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityDiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityDiagnosisTypes",
				"operationId": "specialitySpecialityDiagnosisTypesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityDiagnosisType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityDiagnosisTypes",
				"operationId": "specialitySpecialityDiagnosisTypesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityDiagnosisTypes",
				"operationId": "specialitySpecialityDiagnosisTypesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityDiagnosisType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}/specialityDiagnosisTypes/{specialitydiagnosistypeId}": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityDiagnosisTypes",
				"operationId": "specialitySpecialityDiagnosisTypesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specialitydiagnosistypeId",
						"in": "path",
						"description": "specialitydiagnosistypeId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityDiagnosisType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityDiagnosisTypes",
				"operationId": "specialitySpecialityDiagnosisTypesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specialitydiagnosistypeId",
						"in": "path",
						"description": "specialitydiagnosistypeId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}/specialityVitalTypes": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityVitalTypes",
				"operationId": "specialitySpecialityVitalTypesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityVitalType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityVitalTypes",
				"operationId": "specialitySpecialityVitalTypesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityVitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityVitalTypes",
				"operationId": "specialitySpecialityVitalTypesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityVitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityVitalTypes",
				"operationId": "specialitySpecialityVitalTypesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityVitalTypes",
				"operationId": "specialitySpecialityVitalTypesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecialityVitalType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/speciality/{id}/specialityVitalTypes/{specialityvitaltypeId}": {
			"get": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityVitalTypes",
				"operationId": "specialitySpecialityVitalTypesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specialityvitaltypeId",
						"in": "path",
						"description": "specialityvitaltypeId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecialityVitalType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Speciality Entity"
				],
				"summary": "specialitySpecialityVitalTypes",
				"operationId": "specialitySpecialityVitalTypesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specialityvitaltypeId",
						"in": "path",
						"description": "specialityvitaltypeId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypeanddiagnosticlabs": {
			"get": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "findAllSpecimenTypeAndDiagnosticLab",
				"operationId": "findAllSpecimenTypeAndDiagnosticLabUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "saveSpecimenTypeAndDiagnosticLab",
				"operationId": "saveSpecimenTypeAndDiagnosticLabUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SpecimenTypeAndDiagnosticLab"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/specimentypeanddiagnosticlabs/search/findByDiagnosticLabIdAndSpecimenTypeId": {
			"get": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "findByDiagnosticLabIdAndSpecimenTypeIdSpecimenTypeAndDiagnosticLab",
				"operationId": "findByDiagnosticLabIdAndSpecimenTypeIdSpecimenTypeAndDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticLabId",
						"in": "query",
						"description": "diagnosticLabId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specimenTypeId",
						"in": "query",
						"description": "specimenTypeId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/specimentypeanddiagnosticlabs/search/getSampleIdUsingDiagnosticTypeIdAndLabId": {
			"get": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "getSampleIdUsingDiagnosticTypeIdAndLabIdSpecimenTypeAndDiagnosticLab",
				"operationId": "getSampleIdUsingDiagnosticTypeIdAndLabIdSpecimenTypeAndDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticTypeId",
						"in": "query",
						"description": "diagnosticTypeId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "labId",
						"in": "query",
						"description": "labId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/specimentypeanddiagnosticlabs/{id}": {
			"get": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "findByIdSpecimenTypeAndDiagnosticLab",
				"operationId": "findByIdSpecimenTypeAndDiagnosticLabUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "saveSpecimenTypeAndDiagnosticLab",
				"operationId": "saveSpecimenTypeAndDiagnosticLabUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecimenTypeAndDiagnosticLab"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "deleteSpecimenTypeAndDiagnosticLab",
				"operationId": "deleteSpecimenTypeAndDiagnosticLabUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "saveSpecimenTypeAndDiagnosticLab",
				"operationId": "saveSpecimenTypeAndDiagnosticLabUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecimenTypeAndDiagnosticLab"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypeanddiagnosticlabs/{id}/diagnosticLab": {
			"get": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticLab",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticLabUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticLab",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticLab",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticLab",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticLab",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypeanddiagnosticlabs/{id}/diagnosticTypeSpecimenType": {
			"get": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabDiagnosticTypeSpecimenTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypeanddiagnosticlabs/{id}/specimenType": {
			"get": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabSpecimenTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabSpecimenTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabSpecimenTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabSpecimenTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenTypeAndDiagnosticLab Entity"
				],
				"summary": "specimenTypeAndDiagnosticLabSpecimenType",
				"operationId": "specimenTypeAndDiagnosticLabSpecimenTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypes": {
			"get": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "findAllSpecimenType",
				"operationId": "findAllSpecimenTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "saveSpecimenType",
				"operationId": "saveSpecimenTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SpecimenType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/specimentypes/{id}": {
			"get": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "findByIdSpecimenType",
				"operationId": "findByIdSpecimenTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "saveSpecimenType",
				"operationId": "saveSpecimenTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecimenType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "deleteSpecimenType",
				"operationId": "deleteSpecimenTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "saveSpecimenType",
				"operationId": "saveSpecimenTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SpecimenType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypes/{id}/diagnosticTypeSpecimenTypes": {
			"get": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeDiagnosticTypeSpecimenTypes",
				"operationId": "specimenTypeDiagnosticTypeSpecimenTypesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeDiagnosticTypeSpecimenTypes",
				"operationId": "specimenTypeDiagnosticTypeSpecimenTypesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeDiagnosticTypeSpecimenTypes",
				"operationId": "specimenTypeDiagnosticTypeSpecimenTypesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeDiagnosticTypeSpecimenTypes",
				"operationId": "specimenTypeDiagnosticTypeSpecimenTypesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeDiagnosticTypeSpecimenTypes",
				"operationId": "specimenTypeDiagnosticTypeSpecimenTypesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeSpecimenType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypes/{id}/diagnosticTypeSpecimenTypes/{diagnostictypespecimentypeId}": {
			"get": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeDiagnosticTypeSpecimenTypes",
				"operationId": "specimenTypeDiagnosticTypeSpecimenTypesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypespecimentypeId",
						"in": "path",
						"description": "diagnostictypespecimentypeId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeSpecimenType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeDiagnosticTypeSpecimenTypes",
				"operationId": "specimenTypeDiagnosticTypeSpecimenTypesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypespecimentypeId",
						"in": "path",
						"description": "diagnostictypespecimentypeId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypes/{id}/specimenTypeAndDiagnosticLabs": {
			"get": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "specimenTypeSpecimenTypeAndDiagnosticLabsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "specimenTypeSpecimenTypeAndDiagnosticLabsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "specimenTypeSpecimenTypeAndDiagnosticLabsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "specimenTypeSpecimenTypeAndDiagnosticLabsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "specimenTypeSpecimenTypeAndDiagnosticLabsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/specimentypes/{id}/specimenTypeAndDiagnosticLabs/{specimentypeanddiagnosticlabId}": {
			"get": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "specimenTypeSpecimenTypeAndDiagnosticLabsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specimentypeanddiagnosticlabId",
						"in": "path",
						"description": "specimentypeanddiagnosticlabId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SpecimenTypeAndDiagnosticLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SpecimenType Entity"
				],
				"summary": "specimenTypeSpecimenTypeAndDiagnosticLabs",
				"operationId": "specimenTypeSpecimenTypeAndDiagnosticLabsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specimentypeanddiagnosticlabId",
						"in": "path",
						"description": "specimentypeanddiagnosticlabId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/state/get": {
			"get": {
				"tags": [
					"state-and-city-controller"
				],
				"summary": "getStates",
				"operationId": "getStatesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "stateIds",
					"in": "query",
					"description": "stateIds",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/StateResponseDto"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/states": {
			"get": {
				"tags": [
					"State Entity"
				],
				"summary": "findAllState",
				"operationId": "findAllStateUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«State»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"State Entity"
				],
				"summary": "saveState",
				"operationId": "saveStateUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/State"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«State»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/states/search/findByIdIn": {
			"get": {
				"tags": [
					"State Entity"
				],
				"summary": "findByIdInState",
				"operationId": "findByIdInStateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "ids",
					"in": "query",
					"description": "ids",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«State»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/states/{id}": {
			"get": {
				"tags": [
					"State Entity"
				],
				"summary": "findByIdState",
				"operationId": "findByIdStateUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«State»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"State Entity"
				],
				"summary": "saveState",
				"operationId": "saveStateUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/State"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«State»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"State Entity"
				],
				"summary": "deleteState",
				"operationId": "deleteStateUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"State Entity"
				],
				"summary": "saveState",
				"operationId": "saveStateUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/State"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«State»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/states/{id}/cities": {
			"get": {
				"tags": [
					"State Entity"
				],
				"summary": "stateCities",
				"operationId": "stateCitiesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"State Entity"
				],
				"summary": "stateCities",
				"operationId": "stateCitiesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"State Entity"
				],
				"summary": "stateCities",
				"operationId": "stateCitiesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"State Entity"
				],
				"summary": "stateCities",
				"operationId": "stateCitiesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"State Entity"
				],
				"summary": "stateCities",
				"operationId": "stateCitiesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«City»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/states/{id}/cities/{cityId}": {
			"get": {
				"tags": [
					"State Entity"
				],
				"summary": "stateCities",
				"operationId": "stateCitiesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "cityId",
						"in": "path",
						"description": "cityId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«City»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"State Entity"
				],
				"summary": "stateCities",
				"operationId": "stateCitiesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "cityId",
						"in": "path",
						"description": "cityId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/storage/deleteFile": {
			"delete": {
				"tags": [
					"bucket-controller"
				],
				"summary": "deleteFile",
				"operationId": "deleteFileUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "formData",
					"name": "url",
					"description": "url",
					"required": true,
					"schema": {
						"type": "string"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/storage/get-file-links": {
			"post": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "createScribbleFromFilesAndGetPutUrls",
				"operationId": "createScribbleFromFilesAndGetPutUrlsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "files",
						"in": "query",
						"description": "files",
						"required": true,
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "scribbleType",
						"in": "query",
						"description": "scribbleType",
						"required": false,
						"type": "string",
						"enum": [
							"SIGNED_UPLOAD",
							"UPLOAD",
							"CAMERA",
							"DOXPER",
							"E_PRESCRIPTION",
							"APPLE_PENCIL",
							"WACOM",
							"UPLOAD_POS",
							"SCANNER"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/storage/get-file-upload-link": {
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "imageUploadAndGetPutUrls",
				"operationId": "imageUploadAndGetPutUrlsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "imageUploadUrlsDto",
					"description": "imageUploadUrlsDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ImageUploadUrlsDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/storage/get-links": {
			"post": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "createScribbleAndGetPutUrls",
				"operationId": "createScribbleAndGetPutUrlsUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "count",
						"in": "query",
						"description": "count",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ext",
						"in": "query",
						"description": "ext",
						"required": true,
						"type": "string"
					},
					{
						"name": "scribbleType",
						"in": "query",
						"description": "scribbleType",
						"required": false,
						"type": "string",
						"enum": [
							"SIGNED_UPLOAD",
							"UPLOAD",
							"CAMERA",
							"DOXPER",
							"E_PRESCRIPTION",
							"APPLE_PENCIL",
							"WACOM",
							"UPLOAD_POS",
							"SCANNER"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/storage/transcribe/last/consultation": {
			"get": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "findPreviousConsultationByIdForSameDoctor",
				"operationId": "findPreviousConsultationByIdForSameDoctorUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorClinicId",
						"in": "query",
						"description": "doctorClinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "patientId",
						"in": "query",
						"description": "patientId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Scribbles"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/storage/update/get-link": {
			"get": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "updateScribbleAndGetPutUrls",
				"operationId": "updateScribbleAndGetPutUrlsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ext",
						"in": "query",
						"description": "ext",
						"required": true,
						"type": "string"
					},
					{
						"name": "scribbleType",
						"in": "query",
						"description": "scribbleType",
						"required": false,
						"type": "string",
						"enum": [
							"SIGNED_UPLOAD",
							"UPLOAD",
							"CAMERA",
							"DOXPER",
							"E_PRESCRIPTION",
							"APPLE_PENCIL",
							"WACOM",
							"UPLOAD_POS",
							"SCANNER"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/storage/update/using/scribbleId/get-link": {
			"get": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "updateScribbleUsingScribbleIdAndGetPutUrls",
				"operationId": "updateScribbleUsingScribbleIdAndGetPutUrlsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "ext",
						"in": "query",
						"description": "ext",
						"required": true,
						"type": "string"
					},
					{
						"name": "scribbleId",
						"in": "query",
						"description": "scribbleId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "scribbleType",
						"in": "query",
						"description": "scribbleType",
						"required": false,
						"type": "string",
						"enum": [
							"SIGNED_UPLOAD",
							"UPLOAD",
							"CAMERA",
							"DOXPER",
							"E_PRESCRIPTION",
							"APPLE_PENCIL",
							"WACOM",
							"UPLOAD_POS",
							"SCANNER"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/storage/upload-files": {
			"post": {
				"tags": [
					"patient-app-controller"
				],
				"summary": "getPresignedGetUrl",
				"operationId": "getPresignedGetUrlUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "presignedGetUrlDto",
					"description": "presignedGetUrlDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/PresignedGetUrlDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/storage/upload/get-link": {
			"get": {
				"tags": [
					"scribble-upload-controller"
				],
				"summary": "createPutUrls",
				"operationId": "createPutUrlsUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "count",
						"in": "query",
						"description": "count",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ext",
						"in": "query",
						"description": "ext",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DoctorMessageImageUploadUrlDto"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/storage/uploadFile": {
			"post": {
				"tags": [
					"bucket-controller"
				],
				"summary": "uploadFile",
				"operationId": "uploadFileUsingPOST",
				"consumes": [
					"multipart/form-data"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "file",
					"in": "formData",
					"description": "file",
					"required": true,
					"type": "file"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/summary-dashboard": {
			"get": {
				"tags": [
					"transcribe-controller"
				],
				"summary": "transcriberDashboard",
				"operationId": "transcriberDashboardUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/DashboardSummaryDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptomType-search": {
			"get": {
				"tags": [
					"ESSymptomType Entity"
				],
				"summary": "findAllESSymptomType",
				"operationId": "findAllESSymptomTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«ESSymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"ESSymptomType Entity"
				],
				"summary": "saveESSymptomType",
				"operationId": "saveESSymptomTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ESSymptomType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESSymptomType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptomType-search/{id}": {
			"get": {
				"tags": [
					"ESSymptomType Entity"
				],
				"summary": "findByIdESSymptomType",
				"operationId": "findByIdESSymptomTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESSymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"ESSymptomType Entity"
				],
				"summary": "saveESSymptomType",
				"operationId": "saveESSymptomTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESSymptomType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESSymptomType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"ESSymptomType Entity"
				],
				"summary": "deleteESSymptomType",
				"operationId": "deleteESSymptomTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"ESSymptomType Entity"
				],
				"summary": "saveESSymptomType",
				"operationId": "saveESSymptomTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ESSymptomType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ESSymptomType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes": {
			"get": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "findAllSymptomType",
				"operationId": "findAllSymptomTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "saveSymptomType",
				"operationId": "saveSymptomTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SymptomType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/add": {
			"post": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "addSymptom",
				"operationId": "addSymptomUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "symptomsDto",
					"description": "symptomsDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/SymptomsDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomTypes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "fetchDetailsThroughIdSymptomType",
				"operationId": "fetchDetailsThroughIdSymptomTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/search/findByIsActiveIsNullOrIsActive": {
			"get": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "findByIsActiveIsNullOrIsActiveSymptomType",
				"operationId": "findByIsActiveIsNullOrIsActiveSymptomTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "active",
						"in": "query",
						"description": "active",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "findByIsActiveTrueSymptomType",
				"operationId": "findByIsActiveTrueSymptomTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/search/findSymptomTypeByName": {
			"get": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "findSymptomTypeByNameSymptomType",
				"operationId": "findSymptomTypeByNameSymptomTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptoms",
					"in": "query",
					"description": "symptoms",
					"required": false,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/symptomsList": {
			"get": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInSymptomsType",
				"operationId": "findInSymptomsTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomTypes»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInSymptomsType",
				"operationId": "findInSymptomsTypeUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomTypes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInSymptomsType",
				"operationId": "findInSymptomsTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomTypes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInSymptomsType",
				"operationId": "findInSymptomsTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomTypes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInSymptomsType",
				"operationId": "findInSymptomsTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomTypes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInSymptomsType",
				"operationId": "findInSymptomsTypeUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomTypes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"diagnosis-type-controller"
				],
				"summary": "findInSymptomsType",
				"operationId": "findInSymptomsTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "symptomName",
					"in": "query",
					"description": "symptomName",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«SymptomTypes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/{id}": {
			"get": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "findByIdSymptomType",
				"operationId": "findByIdSymptomTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "saveSymptomType",
				"operationId": "saveSymptomTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SymptomType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "deleteSymptomType",
				"operationId": "deleteSymptomTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "saveSymptomType",
				"operationId": "saveSymptomTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/SymptomType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/{id}/symptoms": {
			"get": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "symptomTypeSymptoms",
				"operationId": "symptomTypeSymptomsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "symptomTypeSymptoms",
				"operationId": "symptomTypeSymptomsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "symptomTypeSymptoms",
				"operationId": "symptomTypeSymptomsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "symptomTypeSymptoms",
				"operationId": "symptomTypeSymptomsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "symptomTypeSymptoms",
				"operationId": "symptomTypeSymptomsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptomTypes/{id}/symptoms/{symptomId}": {
			"get": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "symptomTypeSymptoms",
				"operationId": "symptomTypeSymptomsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "symptomId",
						"in": "path",
						"description": "symptomId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Symptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"SymptomType Entity"
				],
				"summary": "symptomTypeSymptoms",
				"operationId": "symptomTypeSymptomsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "symptomId",
						"in": "path",
						"description": "symptomId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptoms": {
			"get": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "findAllSymptom",
				"operationId": "findAllSymptomUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "saveSymptom",
				"operationId": "saveSymptomUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Symptom"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Symptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptoms/search/fetchDetailsThroughId": {
			"get": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "fetchDetailsThroughIdSymptom",
				"operationId": "fetchDetailsThroughIdSymptomUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Symptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptoms/search/findByDoctorInClinicIn": {
			"get": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "findByDoctorInClinicInSymptom",
				"operationId": "findByDoctorInClinicInSymptomUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dateFrom",
						"in": "query",
						"description": "dateFrom",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dateTill",
						"in": "query",
						"description": "dateTill",
						"required": false,
						"type": "string",
						"format": "date-time"
					},
					{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Symptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/symptoms/{id}": {
			"get": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "findByIdSymptom",
				"operationId": "findByIdSymptomUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Symptom»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "saveSymptom",
				"operationId": "saveSymptomUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Symptom"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Symptom»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "deleteSymptom",
				"operationId": "deleteSymptomUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "saveSymptom",
				"operationId": "saveSymptomUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Symptom"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Symptom»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptoms/{id}/consultation": {
			"get": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultation",
				"operationId": "symptomConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultation",
				"operationId": "symptomConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultation",
				"operationId": "symptomConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultation",
				"operationId": "symptomConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultation",
				"operationId": "symptomConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptoms/{id}/consultationReason": {
			"get": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultationReason",
				"operationId": "symptomConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultationReason",
				"operationId": "symptomConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultationReason",
				"operationId": "symptomConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultationReason",
				"operationId": "symptomConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomConsultationReason",
				"operationId": "symptomConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptoms/{id}/declineReason": {
			"get": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomDeclineReason",
				"operationId": "symptomDeclineReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomDeclineReason",
				"operationId": "symptomDeclineReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomDeclineReason",
				"operationId": "symptomDeclineReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomDeclineReason",
				"operationId": "symptomDeclineReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomDeclineReason",
				"operationId": "symptomDeclineReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DeclineReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/symptoms/{id}/symptomType": {
			"get": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomSymptomType",
				"operationId": "symptomSymptomTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomSymptomType",
				"operationId": "symptomSymptomTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomSymptomType",
				"operationId": "symptomSymptomTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomSymptomType",
				"operationId": "symptomSymptomTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Symptom Entity"
				],
				"summary": "symptomSymptomType",
				"operationId": "symptomSymptomTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«SymptomType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/takenMedicines": {
			"get": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "findAllTakenMedicine",
				"operationId": "findAllTakenMedicineUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TakenMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "saveTakenMedicine",
				"operationId": "saveTakenMedicineUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TakenMedicine"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TakenMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/takenMedicines/{id}": {
			"get": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "findByIdTakenMedicine",
				"operationId": "findByIdTakenMedicineUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TakenMedicine»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "saveTakenMedicine",
				"operationId": "saveTakenMedicineUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TakenMedicine"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TakenMedicine»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "deleteTakenMedicine",
				"operationId": "deleteTakenMedicineUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "saveTakenMedicine",
				"operationId": "saveTakenMedicineUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TakenMedicine"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TakenMedicine»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/takenMedicines/{id}/consultation": {
			"get": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "takenMedicineConsultation",
				"operationId": "takenMedicineConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "takenMedicineConsultation",
				"operationId": "takenMedicineConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "takenMedicineConsultation",
				"operationId": "takenMedicineConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "takenMedicineConsultation",
				"operationId": "takenMedicineConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TakenMedicine Entity"
				],
				"summary": "takenMedicineConsultation",
				"operationId": "takenMedicineConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/taxes": {
			"get": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "findAllTaxes",
				"operationId": "findAllTaxesUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Taxes»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "saveTaxes",
				"operationId": "saveTaxesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Taxes"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Taxes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/taxes/bulk-edit": {
			"post": {
				"tags": [
					"bulk-upload-controller"
				],
				"summary": "editTaxes",
				"operationId": "editTaxesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "operation",
						"in": "query",
						"description": "operation",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "taxes",
						"description": "taxes",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TaxesDto"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Taxes"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/taxes/{id}": {
			"get": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "findByIdTaxes",
				"operationId": "findByIdTaxesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Taxes»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "saveTaxes",
				"operationId": "saveTaxesUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Taxes"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Taxes»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "deleteTaxes",
				"operationId": "deleteTaxesUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "saveTaxes",
				"operationId": "saveTaxesUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Taxes"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Taxes»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/taxes/{id}/diagnosticTypeInLab": {
			"get": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "taxesDiagnosticTypeInLab",
				"operationId": "taxesDiagnosticTypeInLabUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "taxesDiagnosticTypeInLab",
				"operationId": "taxesDiagnosticTypeInLabUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "taxesDiagnosticTypeInLab",
				"operationId": "taxesDiagnosticTypeInLabUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "taxesDiagnosticTypeInLab",
				"operationId": "taxesDiagnosticTypeInLabUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "taxesDiagnosticTypeInLab",
				"operationId": "taxesDiagnosticTypeInLabUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DiagnosticTypeInLab»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/taxes/{id}/diagnosticTypeInLab/{diagnostictypeinlabId}": {
			"get": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "taxesDiagnosticTypeInLab",
				"operationId": "taxesDiagnosticTypeInLabUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeinlabId",
						"in": "path",
						"description": "diagnostictypeinlabId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DiagnosticTypeInLab»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Taxes Entity"
				],
				"summary": "taxesDiagnosticTypeInLab",
				"operationId": "taxesDiagnosticTypeInLabUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnostictypeinlabId",
						"in": "path",
						"description": "diagnostictypeinlabId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/testParameterMaster": {
			"get": {
				"tags": [
					"TestParameterMaster Entity"
				],
				"summary": "findAllTestParameterMaster",
				"operationId": "findAllTestParameterMasterUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TestParameterMaster»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TestParameterMaster Entity"
				],
				"summary": "saveTestParameterMaster",
				"operationId": "saveTestParameterMasterUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TestParameterMaster"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TestParameterMaster»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/testParameterMaster/{id}": {
			"get": {
				"tags": [
					"TestParameterMaster Entity"
				],
				"summary": "findByIdTestParameterMaster",
				"operationId": "findByIdTestParameterMasterUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TestParameterMaster»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TestParameterMaster Entity"
				],
				"summary": "saveTestParameterMaster",
				"operationId": "saveTestParameterMasterUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TestParameterMaster"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TestParameterMaster»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TestParameterMaster Entity"
				],
				"summary": "deleteTestParameterMaster",
				"operationId": "deleteTestParameterMasterUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TestParameterMaster Entity"
				],
				"summary": "saveTestParameterMaster",
				"operationId": "saveTestParameterMasterUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TestParameterMaster"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TestParameterMaster»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslotgroup": {
			"get": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "findAllTimeSlotGroup",
				"operationId": "findAllTimeSlotGroupUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotGroup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "saveTimeSlotGroup",
				"operationId": "saveTimeSlotGroupUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TimeSlotGroup"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlotGroup»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/timeslotgroup/search/findByIsActiveTrue": {
			"get": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "findByIsActiveTrueTimeSlotGroup",
				"operationId": "findByIsActiveTrueTimeSlotGroupUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlotGroup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/timeslotgroup/{id}": {
			"get": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "findByIdTimeSlotGroup",
				"operationId": "findByIdTimeSlotGroupUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlotGroup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "saveTimeSlotGroup",
				"operationId": "saveTimeSlotGroupUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TimeSlotGroup"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlotGroup»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "deleteTimeSlotGroup",
				"operationId": "deleteTimeSlotGroupUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "saveTimeSlotGroup",
				"operationId": "saveTimeSlotGroupUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TimeSlotGroup"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlotGroup»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslotgroup/{id}/timeSlots": {
			"get": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "timeSlotGroupTimeSlots",
				"operationId": "timeSlotGroupTimeSlotsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "timeSlotGroupTimeSlots",
				"operationId": "timeSlotGroupTimeSlotsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "timeSlotGroupTimeSlots",
				"operationId": "timeSlotGroupTimeSlotsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "timeSlotGroupTimeSlots",
				"operationId": "timeSlotGroupTimeSlotsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "timeSlotGroupTimeSlots",
				"operationId": "timeSlotGroupTimeSlotsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslotgroup/{id}/timeSlots/{timeslotId}": {
			"get": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "timeSlotGroupTimeSlots",
				"operationId": "timeSlotGroupTimeSlotsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "timeslotId",
						"in": "path",
						"description": "timeslotId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlotGroup Entity"
				],
				"summary": "timeSlotGroupTimeSlots",
				"operationId": "timeSlotGroupTimeSlotsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "timeslotId",
						"in": "path",
						"description": "timeslotId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslots": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "findAllTimeSlot",
				"operationId": "findAllTimeSlotUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "saveTimeSlot",
				"operationId": "saveTimeSlotUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TimeSlot"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/timeslots/search/findByDoctorInClinicsId": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "findByDoctorInClinicsIdTimeSlot",
				"operationId": "findByDoctorInClinicsIdTimeSlotUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/timeslots/search/findByDoctorInClinicsIdIn": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "findByDoctorInClinicsIdInTimeSlot",
				"operationId": "findByDoctorInClinicsIdInTimeSlotUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": false,
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					},
					"collectionFormat": "multi"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/timeslots/{id}": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "findByIdTimeSlot",
				"operationId": "findByIdTimeSlotUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "saveTimeSlot",
				"operationId": "saveTimeSlotUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TimeSlot"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "deleteTimeSlot",
				"operationId": "deleteTimeSlotUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "saveTimeSlot",
				"operationId": "saveTimeSlotUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TimeSlot"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlot»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslots/{id}/consultations": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotConsultations",
				"operationId": "timeSlotConsultationsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotConsultations",
				"operationId": "timeSlotConsultationsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotConsultations",
				"operationId": "timeSlotConsultationsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotConsultations",
				"operationId": "timeSlotConsultationsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotConsultations",
				"operationId": "timeSlotConsultationsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslots/{id}/consultations/{consultationId}": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotConsultations",
				"operationId": "timeSlotConsultationsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "path",
						"description": "consultationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotConsultations",
				"operationId": "timeSlotConsultationsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "path",
						"description": "consultationId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslots/{id}/doctorInClinics": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotDoctorInClinics",
				"operationId": "timeSlotDoctorInClinicsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotDoctorInClinics",
				"operationId": "timeSlotDoctorInClinicsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotDoctorInClinics",
				"operationId": "timeSlotDoctorInClinicsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotDoctorInClinics",
				"operationId": "timeSlotDoctorInClinicsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotDoctorInClinics",
				"operationId": "timeSlotDoctorInClinicsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«DoctorInClinic»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslots/{id}/doctorInClinics/{doctorinclinicId}": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotDoctorInClinics",
				"operationId": "timeSlotDoctorInClinicsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicId",
						"in": "path",
						"description": "doctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«DoctorInClinic»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotDoctorInClinics",
				"operationId": "timeSlotDoctorInClinicsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "doctorinclinicId",
						"in": "path",
						"description": "doctorinclinicId",
						"required": true,
						"type": "string"
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/timeslots/{id}/timeSlotGroup": {
			"get": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotTimeSlotGroup",
				"operationId": "timeSlotTimeSlotGroupUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlotGroup»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotTimeSlotGroup",
				"operationId": "timeSlotTimeSlotGroupUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlotGroup»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotTimeSlotGroup",
				"operationId": "timeSlotTimeSlotGroupUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlotGroup»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotTimeSlotGroup",
				"operationId": "timeSlotTimeSlotGroupUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TimeSlot Entity"
				],
				"summary": "timeSlotTimeSlotGroup",
				"operationId": "timeSlotTimeSlotGroupUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TimeSlotGroup»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "findAllTranscriptionIssue",
				"operationId": "findAllTranscriptionIssueUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "saveTranscriptionIssue",
				"operationId": "saveTranscriptionIssueUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscriptionIssue"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionIssue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues/search/countByCreatedBy": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "countByCreatedByTranscriptionIssue",
				"operationId": "countByCreatedByTranscriptionIssueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "createdBy",
					"in": "query",
					"description": "createdBy",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues/search/countByIssueType": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "countByIssueTypeTranscriptionIssue",
				"operationId": "countByIssueTypeTranscriptionIssueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "type",
					"in": "query",
					"description": "type",
					"required": false,
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues/search/fetchAllTranscriptionIssues": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "fetchAllTranscriptionIssuesTranscriptionIssue",
				"operationId": "fetchAllTranscriptionIssuesTranscriptionIssueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues/search/findByIssueTypeInOrderByCreatedAtDesc": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "findByIssueTypeInOrderByCreatedAtDescTranscriptionIssue",
				"operationId": "findByIssueTypeInOrderByCreatedAtDescTranscriptionIssueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "types",
						"in": "query",
						"description": "types",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"MEDICINE",
								"DIAGNOSTIC",
								"OTHER",
								"REGISTRATION",
								"CONSULTATION",
								"QA"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues/{id}": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "findByIdTranscriptionIssue",
				"operationId": "findByIdTranscriptionIssueUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "saveTranscriptionIssue",
				"operationId": "saveTranscriptionIssueUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TranscriptionIssue"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionIssue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "deleteTranscriptionIssue",
				"operationId": "deleteTranscriptionIssueUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "saveTranscriptionIssue",
				"operationId": "saveTranscriptionIssueUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TranscriptionIssue"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionIssue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues/{id}/issue": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueIssue",
				"operationId": "transcriptionIssueIssueUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Issue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueIssue",
				"operationId": "transcriptionIssueIssueUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Issue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueIssue",
				"operationId": "transcriptionIssueIssueUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Issue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueIssue",
				"operationId": "transcriptionIssueIssueUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueIssue",
				"operationId": "transcriptionIssueIssueUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Issue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues/{id}/prescription": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssuePrescription",
				"operationId": "transcriptionIssuePrescriptionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssuePrescription",
				"operationId": "transcriptionIssuePrescriptionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssuePrescription",
				"operationId": "transcriptionIssuePrescriptionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssuePrescription",
				"operationId": "transcriptionIssuePrescriptionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssuePrescription",
				"operationId": "transcriptionIssuePrescriptionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Prescription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcription-issues/{id}/transcription": {
			"get": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueTranscription",
				"operationId": "transcriptionIssueTranscriptionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueTranscription",
				"operationId": "transcriptionIssueTranscriptionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueTranscription",
				"operationId": "transcriptionIssueTranscriptionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueTranscription",
				"operationId": "transcriptionIssueTranscriptionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TranscriptionIssue Entity"
				],
				"summary": "transcriptionIssueTranscription",
				"operationId": "transcriptionIssueTranscriptionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcription-state-flows": {
			"get": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "findAllTranscriptionStateFlow",
				"operationId": "findAllTranscriptionStateFlowUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionStateFlow»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "saveTranscriptionStateFlow",
				"operationId": "saveTranscriptionStateFlowUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscriptionStateFlow"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionStateFlow»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription-state-flows/{id}": {
			"get": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "findByIdTranscriptionStateFlow",
				"operationId": "findByIdTranscriptionStateFlowUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionStateFlow»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "saveTranscriptionStateFlow",
				"operationId": "saveTranscriptionStateFlowUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TranscriptionStateFlow"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionStateFlow»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "deleteTranscriptionStateFlow",
				"operationId": "deleteTranscriptionStateFlowUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "saveTranscriptionStateFlow",
				"operationId": "saveTranscriptionStateFlowUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TranscriptionStateFlow"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionStateFlow»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcription-state-flows/{id}/transcription": {
			"get": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "transcriptionStateFlowTranscription",
				"operationId": "transcriptionStateFlowTranscriptionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "transcriptionStateFlowTranscription",
				"operationId": "transcriptionStateFlowTranscriptionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "transcriptionStateFlowTranscription",
				"operationId": "transcriptionStateFlowTranscriptionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "transcriptionStateFlowTranscription",
				"operationId": "transcriptionStateFlowTranscriptionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"TranscriptionStateFlow Entity"
				],
				"summary": "transcriptionStateFlowTranscription",
				"operationId": "transcriptionStateFlowTranscriptionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcription/admin/issue": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchIssuesForAdmin",
				"operationId": "fetchIssuesForAdminUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "types",
						"in": "query",
						"description": "types",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"MEDICINE",
								"DIAGNOSTIC",
								"OTHER",
								"REGISTRATION",
								"CONSULTATION",
								"QA"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«TranscriptionIssuesForAdmin»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/create-task": {
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "createTasks",
				"operationId": "createTasksUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/fetch": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchTranscriptionData",
				"operationId": "fetchTranscriptionDataUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": true,
						"type": "string",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": true,
						"type": "string",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Transcriptions»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/fetch/analytics": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchTranscriptionDataForAdmin",
				"operationId": "fetchTranscriptionDataForAdminUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TranscriptionAdminResponse"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/fetch/analytics/user": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchUserAnalytics",
				"operationId": "fetchUserAnalyticsUsingGET",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TranscriptionAdminResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/fetch/by-state": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchTranscriptionTasksInProgress",
				"operationId": "fetchTranscriptionTasksInProgressUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": false,
						"type": "string",
						"default": "IN_PROGRESS",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Transcriptions»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/fetch/qa": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchTranscriptionQAData",
				"operationId": "fetchTranscriptionQADataUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/issue": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchIssues",
				"operationId": "fetchIssuesUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "types",
						"in": "query",
						"description": "types",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"MEDICINE",
								"DIAGNOSTIC",
								"OTHER",
								"REGISTRATION",
								"CONSULTATION",
								"QA"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Issues»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "createIssues",
				"operationId": "createIssuesUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/IssueDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Issues"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/mark/completed": {
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "markCompleted",
				"operationId": "markCompletedUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscriptionDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/mark/in-progress": {
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "markTranscriptionInProgress",
				"operationId": "markTranscriptionInProgressUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscriptionDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcription/submit": {
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "transcribeAndMarkComplete",
				"operationId": "transcribeAndMarkCompleteUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "transcribeConsultationDto",
					"description": "transcribeConsultationDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscribeConsultationDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "findAllTranscription",
				"operationId": "findAllTranscriptionUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "saveTranscription",
				"operationId": "saveTranscriptionUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Transcription"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/search/countByStateAndUserId": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "countByStateAndUserIdTranscription",
				"operationId": "countByStateAndUserIdTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					},
					{
						"name": "userId",
						"in": "query",
						"description": "userId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/search/countByType": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "countByTypeTranscription",
				"operationId": "countByTypeTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "type",
					"in": "query",
					"description": "type",
					"required": false,
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/search/countByTypeAndState": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "countByTypeAndStateTranscription",
				"operationId": "countByTypeAndStateTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/search/countByUserId": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "countByUserIdTranscription",
				"operationId": "countByUserIdTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "userId",
					"in": "query",
					"description": "userId",
					"required": false,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/search/findByStateAndTypeOrderByCreatedAtAsc": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "findByStateAndTypeOrderByCreatedAtAscTranscription",
				"operationId": "findByStateAndTypeOrderByCreatedAtAscTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/search/findByStateAndUserIdOrderByCreatedAtAsc": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "findByStateAndUserIdOrderByCreatedAtAscTranscription",
				"operationId": "findByStateAndUserIdOrderByCreatedAtAscTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					},
					{
						"name": "userId",
						"in": "query",
						"description": "userId",
						"required": false,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/search/findByTypeAndStateOrderByCreatedAtAsc": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "findByTypeAndStateOrderByCreatedAtAscTranscription",
				"operationId": "findByTypeAndStateOrderByCreatedAtAscTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": false,
						"type": "string",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": false,
						"type": "string",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/{id}": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "findByIdTranscription",
				"operationId": "findByIdTranscriptionUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "saveTranscription",
				"operationId": "saveTranscriptionUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Transcription"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "deleteTranscription",
				"operationId": "deleteTranscriptionUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "saveTranscription",
				"operationId": "saveTranscriptionUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Transcription"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/{id}/childTranscriptions": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionChildTranscriptions",
				"operationId": "transcriptionChildTranscriptionsUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionChildTranscriptions",
				"operationId": "transcriptionChildTranscriptionsUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionChildTranscriptions",
				"operationId": "transcriptionChildTranscriptionsUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionChildTranscriptions",
				"operationId": "transcriptionChildTranscriptionsUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionChildTranscriptions",
				"operationId": "transcriptionChildTranscriptionsUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Transcription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/{id}/childTranscriptions/{transcriptionId}": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionChildTranscriptions",
				"operationId": "transcriptionChildTranscriptionsUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionId",
						"in": "path",
						"description": "transcriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionChildTranscriptions",
				"operationId": "transcriptionChildTranscriptionsUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionId",
						"in": "path",
						"description": "transcriptionId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/{id}/consultation": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionConsultation",
				"operationId": "transcriptionConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionConsultation",
				"operationId": "transcriptionConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionConsultation",
				"operationId": "transcriptionConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionConsultation",
				"operationId": "transcriptionConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionConsultation",
				"operationId": "transcriptionConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/{id}/qaTranscription": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionQaTranscription",
				"operationId": "transcriptionQaTranscriptionUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionQaTranscription",
				"operationId": "transcriptionQaTranscriptionUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionQaTranscription",
				"operationId": "transcriptionQaTranscriptionUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionQaTranscription",
				"operationId": "transcriptionQaTranscriptionUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionQaTranscription",
				"operationId": "transcriptionQaTranscriptionUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Transcription»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/{id}/transcriptionIssues": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionTranscriptionIssues",
				"operationId": "transcriptionTranscriptionIssuesUsingGET_1",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionTranscriptionIssues",
				"operationId": "transcriptionTranscriptionIssuesUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionTranscriptionIssues",
				"operationId": "transcriptionTranscriptionIssuesUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionTranscriptionIssues",
				"operationId": "transcriptionTranscriptionIssuesUsingDELETE_1",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionTranscriptionIssues",
				"operationId": "transcriptionTranscriptionIssuesUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«TranscriptionIssue»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/transcriptions/{id}/transcriptionIssues/{transcriptionissueId}": {
			"get": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionTranscriptionIssues",
				"operationId": "transcriptionTranscriptionIssuesUsingGET",
				"consumes": [
					"application/hal+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionissueId",
						"in": "path",
						"description": "transcriptionissueId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«TranscriptionIssue»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Transcription Entity"
				],
				"summary": "transcriptionTranscriptionIssues",
				"operationId": "transcriptionTranscriptionIssuesUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "transcriptionissueId",
						"in": "path",
						"description": "transcriptionissueId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/update-prescription-description": {
			"patch": {
				"tags": [
					"prescription-controller"
				],
				"summary": "updatePrescriptions",
				"operationId": "updatePrescriptionsUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "request",
					"description": "request",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/PrescriptionMetadataRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PrescriptionWithDescription"
							}
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/update/address": {
			"post": {
				"tags": [
					"order-swagger-controller"
				],
				"summary": "updateAddress",
				"operationId": "updateAddressUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "addressDto",
					"description": "addressDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AddressDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/using-diagnostic-id": {
			"get": {
				"tags": [
					"diagnostic-type-and-specimen-type-controller"
				],
				"summary": "findByDiagnosticTypeId",
				"operationId": "findByDiagnosticTypeIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "diagnosticTypeId",
					"in": "query",
					"description": "diagnosticTypeId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/DiagnosticTypeAndSpecimenTypesForIntegration"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/vendor-sample-id": {
			"get": {
				"tags": [
					"specimen-type-and-vendor-sample-controller"
				],
				"summary": "findVendorSampleIdUsingLabAndSpecimenType",
				"operationId": "findVendorSampleIdUsingLabAndSpecimenTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "diagnosticLabId",
						"in": "query",
						"description": "diagnosticLabId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "specimenTypeId",
						"in": "query",
						"description": "specimenTypeId",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/visitTypes": {
			"get": {
				"tags": [
					"VisitType Entity"
				],
				"summary": "findAllVisitType",
				"operationId": "findAllVisitTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«VisitType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"VisitType Entity"
				],
				"summary": "saveVisitType",
				"operationId": "saveVisitTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/VisitType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VisitType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/visitTypes/{id}": {
			"get": {
				"tags": [
					"VisitType Entity"
				],
				"summary": "findByIdVisitType",
				"operationId": "findByIdVisitTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VisitType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"VisitType Entity"
				],
				"summary": "saveVisitType",
				"operationId": "saveVisitTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/VisitType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VisitType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"VisitType Entity"
				],
				"summary": "deleteVisitType",
				"operationId": "deleteVisitTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"VisitType Entity"
				],
				"summary": "saveVisitType",
				"operationId": "saveVisitTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/VisitType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VisitType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/vitals": {
			"get": {
				"tags": [
					"Vital Entity"
				],
				"summary": "findAllVital",
				"operationId": "findAllVitalUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Vital»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Vital Entity"
				],
				"summary": "saveVital",
				"operationId": "saveVitalUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Vital"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Vital»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/vitals/search/findByConsultationId": {
			"get": {
				"tags": [
					"Vital Entity"
				],
				"summary": "findByConsultationIdVital",
				"operationId": "findByConsultationIdVitalUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "consultationId",
						"in": "query",
						"description": "consultationId",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«Vital»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/vitals/{id}": {
			"get": {
				"tags": [
					"Vital Entity"
				],
				"summary": "findByIdVital",
				"operationId": "findByIdVitalUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Vital»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Vital Entity"
				],
				"summary": "saveVital",
				"operationId": "saveVitalUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Vital"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Vital»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Vital Entity"
				],
				"summary": "deleteVital",
				"operationId": "deleteVitalUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Vital Entity"
				],
				"summary": "saveVital",
				"operationId": "saveVitalUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Vital"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Vital»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/vitals/{id}/consultation": {
			"get": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultation",
				"operationId": "vitalConsultationUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultation",
				"operationId": "vitalConsultationUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultation",
				"operationId": "vitalConsultationUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultation",
				"operationId": "vitalConsultationUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultation",
				"operationId": "vitalConsultationUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Consultation»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/vitals/{id}/consultationReason": {
			"get": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultationReason",
				"operationId": "vitalConsultationReasonUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultationReason",
				"operationId": "vitalConsultationReasonUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultationReason",
				"operationId": "vitalConsultationReasonUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultationReason",
				"operationId": "vitalConsultationReasonUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalConsultationReason",
				"operationId": "vitalConsultationReasonUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«ConsultationReason»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/vitals/{id}/vitalType": {
			"get": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalVitalType",
				"operationId": "vitalVitalTypeUsingGET",
				"produces": [
					"application/hal+json"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalVitalType",
				"operationId": "vitalVitalTypeUsingPOST",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalVitalType",
				"operationId": "vitalVitalTypeUsingPUT",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalVitalType",
				"operationId": "vitalVitalTypeUsingDELETE",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"Vital Entity"
				],
				"summary": "vitalVitalType",
				"operationId": "vitalVitalTypeUsingPATCH",
				"consumes": [
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/vitaltypes": {
			"get": {
				"tags": [
					"VitalType Entity"
				],
				"summary": "findAllVitalType",
				"operationId": "findAllVitalTypeUsingGET",
				"produces": [
					"application/json",
					"application/hal+json",
					"text/uri-list",
					"application/x-spring-data-compact+json"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"description": "page",
						"required": false,
						"type": "string"
					},
					{
						"name": "size",
						"in": "query",
						"description": "size",
						"required": false,
						"type": "string"
					},
					{
						"name": "sort",
						"in": "query",
						"description": "sort",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resources«VitalType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"VitalType Entity"
				],
				"summary": "saveVitalType",
				"operationId": "saveVitalTypeUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "body",
					"description": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/VitalType"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/vitaltypes/{id}": {
			"get": {
				"tags": [
					"VitalType Entity"
				],
				"summary": "findByIdVitalType",
				"operationId": "findByIdVitalTypeUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"VitalType Entity"
				],
				"summary": "saveVitalType",
				"operationId": "saveVitalTypeUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/VitalType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"VitalType Entity"
				],
				"summary": "deleteVitalType",
				"operationId": "deleteVitalTypeUsingDELETE",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"VitalType Entity"
				],
				"summary": "saveVitalType",
				"operationId": "saveVitalTypeUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"in": "body",
						"name": "body",
						"description": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/VitalType"
						}
					},
					{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«VitalType»"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/api/v1/emr/without/consultation/doxper/qrcode": {
			"get": {
				"tags": [
					"consultation-and-doxper-controller"
				],
				"summary": "findConsultationByQrcode",
				"operationId": "findConsultationByQrcodeUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "dicIds",
						"in": "query",
						"description": "dicIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Resource«Page«ConsultationAndDoxpers»»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/patient/create": {
			"post": {
				"tags": [
					"patient-open-api-controller"
				],
				"summary": "onCreatePatient",
				"operationId": "onCreatePatientUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "patient",
					"description": "patient",
					"required": true,
					"schema": {
						"$ref": "#/definitions/Patient"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/patient/family/data": {
			"get": {
				"tags": [
					"patient-open-api-controller"
				],
				"summary": "getFamilyData",
				"operationId": "getFamilyDataUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "familyId",
					"in": "query",
					"description": "familyId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Families"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/patient/find/by/id": {
			"get": {
				"tags": [
					"patient-open-api-controller"
				],
				"summary": "getPatientDetail",
				"operationId": "getPatientDetailUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "patientId",
					"in": "query",
					"description": "patientId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PatientWoAddress"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/patient/find/family": {
			"get": {
				"tags": [
					"patient-open-api-controller"
				],
				"summary": "getFamilyByPhone",
				"operationId": "getFamilyByPhoneUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "mob",
					"in": "query",
					"description": "mob",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Families"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/patient/find/patient": {
			"get": {
				"tags": [
					"patient-open-api-controller"
				],
				"summary": "getPatientByPhone",
				"operationId": "getPatientByPhoneUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "mobile",
					"in": "query",
					"description": "mobile",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PatientWoAddress"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/patient/update/patient": {
			"patch": {
				"tags": [
					"patient-open-api-controller"
				],
				"summary": "onPatch",
				"operationId": "onPatchUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "query",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "mob",
						"in": "query",
						"description": "mob",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "patient",
						"description": "patient",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Patient"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/area/create": {
			"post": {
				"tags": [
					"area-controller"
				],
				"summary": "createAreas",
				"operationId": "createAreasUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dtos",
					"description": "dtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/AreaRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StringBuilder"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/area/exists": {
			"get": {
				"tags": [
					"area-controller"
				],
				"summary": "pincodeExists",
				"operationId": "pincodeExistsUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "value",
					"in": "query",
					"description": "value",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "boolean"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/area/fetch-all": {
			"get": {
				"tags": [
					"area-controller"
				],
				"summary": "fetchAreas",
				"operationId": "fetchAreasUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Areas»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/area/fetch/by-pincode": {
			"get": {
				"tags": [
					"area-controller"
				],
				"summary": "fetchAreaByPinCode",
				"operationId": "fetchAreaByPinCodeUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "pinCode",
					"in": "query",
					"description": "pinCode",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Areas"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/area/search": {
			"get": {
				"tags": [
					"area-controller"
				],
				"summary": "search",
				"operationId": "searchUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "value",
					"in": "query",
					"description": "value",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/clinic-consumable/add": {
			"post": {
				"tags": [
					"clinic-consumable-controller"
				],
				"summary": "addClinicConsumables",
				"operationId": "addClinicConsumablesUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "addClinicConsumableDto",
					"description": "addClinicConsumableDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AddClinicConsumableDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/clinic-consumable/fetch-all": {
			"get": {
				"tags": [
					"clinic-consumable-controller"
				],
				"summary": "fetchConsumabless",
				"operationId": "fetchConsumablessUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«ClinicConsumablesForPos»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/clinic-consumable/find-by-clinic": {
			"get": {
				"tags": [
					"clinic-consumable-controller"
				],
				"summary": "searchByClinicId",
				"operationId": "searchByClinicIdUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ConsumablesByClinic"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/clinic-consumable/search": {
			"get": {
				"tags": [
					"clinic-consumable-controller"
				],
				"summary": "search",
				"operationId": "searchUsingGET_3",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "name",
						"in": "query",
						"description": "name",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ClinicConsumablesForPos"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/cluster-diagnosticLab/activate/{id}": {
			"patch": {
				"tags": [
					"cluster-and-diagnostic-lab-controller"
				],
				"summary": "clusterAndDiagnosticLabActivate",
				"operationId": "clusterAndDiagnosticLabActivateUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isActive",
						"in": "query",
						"description": "isActive",
						"required": false,
						"type": "boolean",
						"default": "1"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ClusterAndDiagnosticLabs"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/cluster-diagnosticLab/add": {
			"post": {
				"tags": [
					"cluster-and-diagnostic-lab-controller"
				],
				"summary": "attachedLabInCluster",
				"operationId": "attachedLabInClusterUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "labInClusterDto",
					"description": "labInClusterDto",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/LabInClusterDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/ClusterAndDiagnosticLabs"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/cluster/activate/{id}": {
			"patch": {
				"tags": [
					"cluster-controller"
				],
				"summary": "clustersActivate",
				"operationId": "clustersActivateUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "id",
						"in": "path",
						"description": "id",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "isActive",
						"in": "query",
						"description": "isActive",
						"required": false,
						"type": "boolean",
						"default": "1"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Clusters"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/cluster/create": {
			"post": {
				"tags": [
					"cluster-controller"
				],
				"summary": "createClusters",
				"operationId": "createClustersUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dtos",
					"description": "dtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ClusterRequestDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Clusters"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/cluster/fetch-all": {
			"get": {
				"tags": [
					"cluster-controller"
				],
				"summary": "fetchClusters",
				"operationId": "fetchClustersUsingGET_2",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Clusters»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/cluster/fetch-all/with-lab/clinic": {
			"get": {
				"tags": [
					"cluster-controller"
				],
				"summary": "fetchClustersWithLabAndClinic",
				"operationId": "fetchClustersWithLabAndClinicUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«ClustersWithLabsAndClinics»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/cluster/fetch/{id}": {
			"get": {
				"tags": [
					"cluster-controller"
				],
				"summary": "fetchClusters",
				"operationId": "fetchClustersUsingGET_3",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "path",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Clusters"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/consumable/add": {
			"post": {
				"tags": [
					"consumable-controller"
				],
				"summary": "addConsumables",
				"operationId": "addConsumablesUsingPOST_2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "addConsumableDto",
					"description": "addConsumableDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/AddConsumableDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/consumable/bulk-add": {
			"post": {
				"tags": [
					"consumable-controller"
				],
				"summary": "addConsumables",
				"operationId": "addConsumablesUsingPOST_3",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "addConsumableDtos",
					"description": "addConsumableDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/AddConsumableDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/consumable/get-consumable": {
			"get": {
				"tags": [
					"consumable-controller"
				],
				"summary": "getConsumableByCCID",
				"operationId": "getConsumableByCCIDUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "clinicConsumableId",
					"in": "query",
					"description": "clinicConsumableId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsumablesForPos"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/error": {
			"get": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingGET",
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingHEAD",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPOST",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPUT",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingDELETE",
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingOPTIONS",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"basic-error-controller"
				],
				"summary": "errorHtml",
				"operationId": "errorHtmlUsingPATCH",
				"consumes": [
					"application/json"
				],
				"produces": [
					"text/html"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ModelAndView"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/meddo-lite/leads": {
			"get": {
				"tags": [
					"meddo-lite-controller"
				],
				"summary": "fetchDataForLeads",
				"operationId": "fetchDataForLeadsUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "deferred",
						"in": "query",
						"description": "deferred",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«ConsultationsForTranscriptionRevamp»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/medicine/revamp/approval": {
			"get": {
				"tags": [
					"medicine-revamp-controller"
				],
				"summary": "fetchMedicinesForApproval",
				"operationId": "fetchMedicinesForApprovalUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«SecondaryMedicines»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"medicine-revamp-controller"
				],
				"summary": "fetchMedicinesForApproval",
				"operationId": "fetchMedicinesForApprovalUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "approvalDto",
					"description": "approvalDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/ApprovalDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/SecondaryMedicines"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/medicine/revamp/merge": {
			"post": {
				"tags": [
					"medicine-revamp-controller"
				],
				"summary": "mergeMedicines",
				"operationId": "mergeMedicinesUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineMergeDto",
					"description": "medicineMergeDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/MedicineMergeDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/MergeErrorDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/medicine/revamp/merge/bulk": {
			"post": {
				"tags": [
					"medicine-revamp-controller"
				],
				"summary": "mergeMedicinesInBulk",
				"operationId": "mergeMedicinesInBulkUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "medicineMergeDtos",
					"description": "medicineMergeDtos",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/MedicineMergeDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MergeErrorDto"
							}
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/patient/add-family": {
			"get": {
				"tags": [
					"family-controller"
				],
				"summary": "createFamilyForUnlinkedPatients",
				"operationId": "createFamilyForUnlinkedPatientsUsingGET_1",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/patient/attach-family": {
			"get": {
				"tags": [
					"family-controller"
				],
				"summary": "linkPatientsToFamilies",
				"operationId": "linkPatientsToFamiliesUsingGET_1",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/reason/by/id": {
			"get": {
				"tags": [
					"consultation-reason-controller"
				],
				"summary": "getReasonsById",
				"operationId": "getReasonsByIdUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/ConsultationReasons"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/reason/create": {
			"post": {
				"tags": [
					"consultation-reason-controller"
				],
				"summary": "createReasons",
				"operationId": "createReasonsUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "reasons",
					"description": "reasons",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ReasonDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StringBuilder"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/reason/edit": {
			"patch": {
				"tags": [
					"consultation-reason-controller"
				],
				"summary": "editReasons",
				"operationId": "editReasonsUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "bodies",
					"description": "bodies",
					"required": true,
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/definitions/ReasonEditDto"
						}
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/StringBuilder"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/reason/fetch/all": {
			"get": {
				"tags": [
					"consultation-reason-controller"
				],
				"summary": "fetchAllReasons",
				"operationId": "fetchAllReasonsUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "reasonType",
						"in": "query",
						"description": "reasonType",
						"required": false,
						"type": "string",
						"default": "MEDICINE",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"OVER_ALL"
						]
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "object"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/search/advice": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchAdvise",
				"operationId": "searchAdviseUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/search/diagnosis-type": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosis",
				"operationId": "searchDiagnosisUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/search/diagnostic-type": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesPreferenceWise",
				"operationId": "searchDiagnosticTypesPreferenceWiseUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "labIds",
						"in": "query",
						"description": "labIds",
						"required": true,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/search/diagnostic-type-for-transcriber": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchDiagnosticTypesForTranscriber",
				"operationId": "searchDiagnosticTypesForTranscriberUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/search/medicine": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesPreferenceWise",
				"operationId": "searchMedicinesPreferenceWiseUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "clinicId",
						"in": "query",
						"description": "clinicId",
						"required": true,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/search/medicine-for-transcriber": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchMedicinesForTranscriber",
				"operationId": "searchMedicinesForTranscriberUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/search/procedure-type": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingHEAD_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingPUT_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingDELETE_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingOPTIONS_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchProcedureType",
				"operationId": "searchProcedureTypeUsingPATCH_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/search/symptom-type": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingGET_3",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingHEAD_3",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPOST_3",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPUT_3",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingDELETE_3",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingOPTIONS_3",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPATCH_3",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "authorization",
						"in": "header",
						"description": "authorization",
						"required": true,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "query",
						"description": "ids",
						"required": false,
						"type": "array",
						"items": {
							"type": "integer",
							"format": "int64"
						},
						"collectionFormat": "multi"
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/search/symptom-type-for-transcriber": {
			"get": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingGET_2",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"head": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingHEAD_2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"post": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPOST_2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"put": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPUT_2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"delete": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingDELETE_2",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"options": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingOPTIONS_2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			},
			"patch": {
				"tags": [
					"search-controller"
				],
				"summary": "searchSymptom",
				"operationId": "searchSymptomUsingPATCH_2",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"description": "value",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedDto"
						}
					},
					"204": {
						"description": "No Content"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					}
				}
			}
		},
		"/transcription/admin/issue": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchIssuesForAdmin",
				"operationId": "fetchIssuesForAdminUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "types",
						"in": "query",
						"description": "types",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"MEDICINE",
								"DIAGNOSTIC",
								"OTHER",
								"REGISTRATION",
								"CONSULTATION",
								"QA"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«TranscriptionIssuesForAdmin»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/create-task": {
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "createTasks",
				"operationId": "createTasksUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "consultationId",
					"in": "query",
					"description": "consultationId",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/fetch": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchTranscriptionData",
				"operationId": "fetchTranscriptionDataUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": true,
						"type": "string",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					},
					{
						"name": "type",
						"in": "query",
						"description": "type",
						"required": true,
						"type": "string",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Transcriptions»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/fetch/analytics": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchTranscriptionDataForAdmin",
				"operationId": "fetchTranscriptionDataForAdminUsingGET_1",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TranscriptionAdminResponse"
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/fetch/analytics/user": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchUserAnalytics",
				"operationId": "fetchUserAnalyticsUsingGET_1",
				"produces": [
					"*/*"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/TranscriptionAdminResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/fetch/by-state": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchTranscriptionTasksInProgress",
				"operationId": "fetchTranscriptionTasksInProgressUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "state",
						"in": "query",
						"description": "state",
						"required": false,
						"type": "string",
						"default": "IN_PROGRESS",
						"enum": [
							"PENDING",
							"IN_PROGRESS",
							"COMPLETED"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Transcriptions»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/fetch/qa": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchTranscriptionQAData",
				"operationId": "fetchTranscriptionQADataUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/PaginatedResponse"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/issue": {
			"get": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "fetchIssues",
				"operationId": "fetchIssuesUsingGET_1",
				"produces": [
					"*/*"
				],
				"parameters": [{
						"name": "page",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "sort",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "types",
						"in": "query",
						"description": "types",
						"required": false,
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"MEDICINE",
								"DIAGNOSTIC",
								"OTHER",
								"REGISTRATION",
								"CONSULTATION",
								"QA"
							]
						},
						"collectionFormat": "multi",
						"enum": [
							"MEDICINE",
							"DIAGNOSTIC",
							"OTHER",
							"REGISTRATION",
							"CONSULTATION",
							"QA"
						]
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Page«Issues»"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			},
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "createIssues",
				"operationId": "createIssuesUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/IssueDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Issues"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/mark/completed": {
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "markCompleted",
				"operationId": "markCompletedUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscriptionDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/mark/in-progress": {
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "markTranscriptionInProgress",
				"operationId": "markTranscriptionInProgressUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "dto",
					"description": "dto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscriptionDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/transcription/submit": {
			"post": {
				"tags": [
					"transcription-revamp-controller"
				],
				"summary": "transcribeAndMarkComplete",
				"operationId": "transcribeAndMarkCompleteUsingPOST_1",
				"consumes": [
					"application/json"
				],
				"produces": [
					"*/*"
				],
				"parameters": [{
					"in": "body",
					"name": "transcribeConsultationDto",
					"description": "transcribeConsultationDto",
					"required": true,
					"schema": {
						"$ref": "#/definitions/TranscribeConsultationDto"
					}
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "string"
						}
					},
					"201": {
						"description": "Created"
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		},
		"/api/v1/emr/meddo-lite/lead/id": {
			"get": {
				"tags": [
					"meddo-lite-controller"
				],
				"summary": "fetchDataForLeadById",
				"operationId": "fetchDataForLeadByIdUsingGET",
				"produces": [
					"*/*"
				],
				"parameters": [{
					"name": "id",
					"in": "query",
					"description": "id",
					"required": true,
					"type": "integer",
					"format": "int64"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/LiteConsultations"
						}
					},
					"401": {
						"description": "Unauthorized"
					},
					"403": {
						"description": "Forbidden"
					},
					"404": {
						"description": "Not Found"
					}
				}
			}
		}
	},
	"definitions": {
		"AddClinicConsumableDto": {
			"type": "object",
			"properties": {
				"clinicId": {
					"type": "integer",
					"format": "int64"
				},
				"consumableId": {
					"type": "integer",
					"format": "int64"
				},
				"expectedDeliveryTime": {
					"$ref": "#/definitions/Timestamp"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"remarks": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			},
			"title": "AddClinicConsumableDto"
		},
		"AddConsumableDto": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "double"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"refCode": {
					"type": "string"
				},
				"sku": {
					"type": "string"
				}
			},
			"title": "AddConsumableDto"
		},
		"Address": {
			"type": "object",
			"properties": {
				"addressTag": {
					"type": "string",
					"enum": [
						"HOME",
						"OFFICE",
						"OTHERS"
					]
				},
				"apartment": {
					"type": "string"
				},
				"area": {
					"type": "string"
				},
				"city": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"landmark": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"line": {
					"type": "string"
				},
				"locality": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"mobile": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"otherType": {
					"type": "string"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"pincode": {
					"type": "string"
				},
				"specialInstruction": {
					"type": "string"
				},
				"state": {
					"type": "string"
				}
			},
			"title": "Address"
		},
		"AddressConsultationDto": {
			"type": "object",
			"properties": {
				"addressId": {
					"type": "integer",
					"format": "int64"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationOrderBody"
				}
			},
			"title": "AddressConsultationDto"
		},
		"AddressDto": {
			"type": "object",
			"properties": {
				"addressId": {
					"type": "integer",
					"format": "int64"
				},
				"addressTag": {
					"type": "string",
					"enum": [
						"HOME",
						"OFFICE",
						"OTHERS"
					]
				},
				"apartment": {
					"type": "string"
				},
				"area": {
					"type": "string"
				},
				"city": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"landmark": {
					"type": "string"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"line": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"mobile": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"otherType": {
					"type": "string"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"pinCode": {
					"type": "string"
				},
				"state": {
					"type": "string"
				}
			},
			"title": "AddressDto"
		},
		"AddressOrderBody": {
			"type": "object",
			"properties": {
				"addressTag": {
					"type": "string",
					"enum": [
						"HOME",
						"OFFICE",
						"OTHERS"
					]
				},
				"apartment": {
					"type": "string"
				},
				"area": {
					"type": "string"
				},
				"city": {
					"type": "string"
				},
				"landmark": {
					"type": "string"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"line": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"mobile": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"otherType": {
					"type": "string"
				},
				"state": {
					"type": "string"
				}
			},
			"title": "AddressOrderBody"
		},
		"Addresses": {
			"type": "object",
			"properties": {
				"addressTag": {
					"type": "string",
					"enum": [
						"HOME",
						"OFFICE",
						"OTHERS"
					]
				},
				"apartment": {
					"type": "string"
				},
				"area": {
					"type": "string"
				},
				"city": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"landmark": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"line": {
					"type": "string"
				},
				"locality": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"mobile": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"otherType": {
					"type": "string"
				},
				"pincode": {
					"type": "string"
				},
				"specialInstruction": {
					"type": "string"
				},
				"state": {
					"type": "string"
				}
			},
			"title": "Addresses"
		},
		"Advice": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"text": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Advice"
		},
		"AdviceDto": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"length": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "AdviceDto"
		},
		"AdviceForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "AdviceForRecommendation"
		},
		"Advices": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"text": {
					"type": "string"
				}
			},
			"title": "Advices"
		},
		"AdvicesForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "AdvicesForRecommendation"
		},
		"AfterOrderPaidStatus": {
			"type": "object",
			"properties": {
				"afterBatchDesc": {
					"type": "integer",
					"format": "int64"
				},
				"afterDesc": {
					"type": "integer",
					"format": "int64"
				},
				"afterInventoryDesc": {
					"type": "integer",
					"format": "int64"
				},
				"batchId": {
					"type": "integer",
					"format": "int64"
				},
				"beforeBatchDesc": {
					"type": "integer",
					"format": "int64"
				},
				"beforeDesc": {
					"type": "integer",
					"format": "int64"
				},
				"beforeInventoryDesc": {
					"type": "integer",
					"format": "int64"
				},
				"code": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"inventoryId": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"orderItemId": {
					"type": "integer",
					"format": "int64"
				},
				"quantityToDesc": {
					"type": "integer",
					"format": "int64"
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "AfterOrderPaidStatus"
		},
		"Allergies": {
			"type": "object",
			"properties": {
				"allergyType": {
					"$ref": "#/definitions/AllergyTypes"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Allergies"
		},
		"Allergy": {
			"type": "object",
			"properties": {
				"allergyType": {
					"$ref": "#/definitions/AllergyType"
				},
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Allergy"
		},
		"AllergyForQueue": {
			"type": "object",
			"properties": {
				"allergyTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"isCritical": {
					"type": "boolean"
				}
			},
			"title": "AllergyForQueue"
		},
		"AllergyType": {
			"type": "object",
			"properties": {
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergy"
					}
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "AllergyType"
		},
		"AllergyTypes": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "AllergyTypes"
		},
		"AppVersionDto": {
			"type": "object",
			"properties": {
				"appPlatform": {
					"type": "string",
					"enum": [
						"IPAD",
						"IPHONE",
						"ANDROID"
					]
				},
				"dicId": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "string"
				}
			},
			"title": "AppVersionDto"
		},
		"AppVersionInfo": {
			"type": "object",
			"properties": {
				"appPlatform": {
					"type": "string",
					"enum": [
						"IPAD",
						"IPHONE",
						"ANDROID"
					]
				},
				"appVersion": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctor": {
					"$ref": "#/definitions/Doctor"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "AppVersionInfo"
		},
		"AppointmentSummary": {
			"type": "object",
			"properties": {
				"cancelled": {
					"type": "integer",
					"format": "int64"
				},
				"checked_in": {
					"type": "integer",
					"format": "int64"
				},
				"completed": {
					"type": "integer",
					"format": "int64"
				},
				"confirmed": {
					"type": "integer",
					"format": "int64"
				},
				"no_show": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "AppointmentSummary"
		},
		"ApprovalDto": {
			"type": "object",
			"properties": {
				"activeStatus": {
					"type": "boolean"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isApproved": {
					"type": "boolean"
				},
				"medicineId": {
					"type": "integer",
					"format": "int64"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"secondaryMedicineId": {
					"type": "integer",
					"format": "int64"
				},
				"secondaryMedicineName": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			},
			"title": "ApprovalDto"
		},
		"Area": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Address"
					}
				},
				"circle": {
					"type": "string"
				},
				"cluster": {
					"$ref": "#/definitions/Cluster"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"deliveryPickupState": {
					"type": "boolean"
				},
				"deliveryState": {
					"type": "boolean"
				},
				"district": {
					"type": "string"
				},
				"division": {
					"type": "string"
				},
				"headOffice": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"officeType": {
					"type": "string",
					"enum": [
						"SO",
						"HO",
						"BO"
					]
				},
				"phone": {
					"type": "string"
				},
				"pinCode": {
					"type": "string",
					"pattern": "^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$"
				},
				"region": {
					"type": "string"
				},
				"state": {
					"type": "string"
				},
				"subOffice": {
					"type": "string"
				}
			},
			"title": "Area"
		},
		"AreaRequestDto": {
			"type": "object",
			"properties": {
				"circle": {
					"type": "string"
				},
				"clusterId": {
					"type": "integer",
					"format": "int64"
				},
				"deliveryState": {
					"type": "boolean"
				},
				"district": {
					"type": "string"
				},
				"division": {
					"type": "string"
				},
				"headOffice": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"officeType": {
					"type": "string",
					"enum": [
						"SO",
						"HO",
						"BO"
					]
				},
				"phone": {
					"type": "string"
				},
				"pincode": {
					"type": "string"
				},
				"region": {
					"type": "string"
				},
				"state": {
					"type": "string"
				},
				"subOffice": {
					"type": "string"
				}
			},
			"title": "AreaRequestDto"
		},
		"Areas": {
			"type": "object",
			"properties": {
				"cluster": {
					"$ref": "#/definitions/ClustersWoArea"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"pinCode": {
					"type": "string"
				}
			},
			"title": "Areas"
		},
		"Batch": {
			"type": "object",
			"properties": {
				"barcode": {
					"type": "string"
				},
				"batchNumber": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dateOfManufacture": {
					"$ref": "#/definitions/Timestamp"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventory"
					}
				},
				"mrp": {
					"type": "number",
					"format": "double"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"sku": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Batch"
		},
		"BatchDto": {
			"type": "object",
			"properties": {
				"batchId": {
					"type": "integer",
					"format": "int64"
				},
				"batchNumber": {
					"type": "string"
				},
				"dateOfManufacture": {
					"$ref": "#/definitions/Timestamp"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isNew": {
					"type": "boolean"
				},
				"medicineId": {
					"type": "integer",
					"format": "int64"
				},
				"mrp": {
					"type": "number",
					"format": "double"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"sku": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				}
			},
			"title": "BatchDto"
		},
		"BatchEditDto": {
			"type": "object",
			"properties": {
				"batchId": {
					"type": "integer",
					"format": "int64"
				},
				"batchNumber": {
					"type": "string"
				},
				"dateOfManufacture": {
					"$ref": "#/definitions/Timestamp"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"inventoriesForBatchEdit": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/InventoriesForBatchEdit"
					}
				},
				"isNew": {
					"type": "boolean"
				},
				"medicineId": {
					"type": "integer",
					"format": "int64"
				},
				"mrp": {
					"type": "number",
					"format": "double"
				},
				"price": {
					"type": "number",
					"format": "double"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"sku": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				}
			},
			"title": "BatchEditDto"
		},
		"BatchErrorDto": {
			"type": "object",
			"properties": {
				"batchNumber": {
					"type": "string"
				},
				"clinicId": {
					"type": "integer",
					"format": "int64"
				},
				"medicineId": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				}
			},
			"title": "BatchErrorDto"
		},
		"BatchesForPharmacy": {
			"type": "object",
			"properties": {
				"batchNumber": {
					"type": "string"
				},
				"dateOfManufacture": {
					"$ref": "#/definitions/Timestamp"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"mrp": {
					"type": "number",
					"format": "double"
				},
				"sku": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				}
			},
			"title": "BatchesForPharmacy"
		},
		"Brand": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"manufacturer": {
					"$ref": "#/definitions/Manufacturer"
				},
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Medicine"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Brand"
		},
		"CentreCode": {
			"type": "object",
			"properties": {
				"centreCode": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "CentreCode"
		},
		"City": {
			"type": "object",
			"properties": {
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/City"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"parent": {
					"$ref": "#/definitions/City"
				},
				"state": {
					"$ref": "#/definitions/State"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "City"
		},
		"CityAndLocalityDto": {
			"type": "object",
			"properties": {
				"availability": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"city": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CityResponseDto"
					}
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityDto"
					}
				}
			},
			"title": "CityAndLocalityDto"
		},
		"CityResponseDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"locality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LocalityDto"
					}
				},
				"value": {
					"type": "string"
				}
			},
			"title": "CityResponseDto"
		},
		"Clinic": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"city": {
					"type": "string"
				},
				"clinicEmail": {
					"type": "string"
				},
				"clinicImage": {
					"type": "string"
				},
				"clinicManagerName": {
					"type": "string"
				},
				"clinicManagerPhone": {
					"type": "string"
				},
				"clinicPhone": {
					"type": "string"
				},
				"cluster": {
					"type": "string"
				},
				"coBrandingImage": {
					"type": "string"
				},
				"coBrandingName": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"invoiceCode": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCoBranded": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"labCode": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"logoUrl": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"mapLink": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"slug": {
					"type": "string"
				},
				"username": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"warehouseCode": {
					"type": "string"
				}
			},
			"title": "Clinic"
		},
		"ClinicByClusterDto": {
			"type": "object",
			"properties": {
				"clinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClinicsByCluster"
					}
				},
				"cluster": {
					"type": "string"
				}
			},
			"title": "ClinicByClusterDto"
		},
		"ClinicConsumable": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"consumable": {
					"$ref": "#/definitions/Consumable"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"expectedDeliveryTime": {
					"$ref": "#/definitions/Timestamp"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"remarks": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			},
			"title": "ClinicConsumable"
		},
		"ClinicConsumablesForPos": {
			"type": "object",
			"properties": {
				"consumable": {
					"$ref": "#/definitions/Consumables"
				},
				"expectedDeliveryTime": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"remarks": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			},
			"title": "ClinicConsumablesForPos"
		},
		"ClinicDetailForAppointment": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cluster": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "ClinicDetailForAppointment"
		},
		"ClinicDiagnosticTypeConfiguration": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagnosticTypeInLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClinicDiagnosticTypeConfiguration"
		},
		"ClinicForAdminDashboard": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"city": {
					"type": "string"
				},
				"cluster": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicForAdminDashboard"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"invoiceCode": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"labCode": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"mapLink": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"slug": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"warehouseCode": {
					"type": "string"
				}
			},
			"title": "ClinicForAdminDashboard"
		},
		"ClinicForOrderDetail": {
			"type": "object",
			"properties": {
				"city": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ClinicForOrderDetail"
		},
		"ClinicForPharmacy": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ClinicForPharmacy"
		},
		"ClinicLabDto": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"clinicIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"clinicIdsToRemove": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"contactDetails": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"logo": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"routingQueue": {
					"type": "string"
				},
				"orderUrl": {
					"type": "string"
				},
				"reportUrl": {
					"type": "string"
				},
				"apiKey": {
					"type": "string"
				},
				"apiUser": {
					"type": "string"
				},
				"pccCode": {
					"type": "string"
				},
				"workingHours": {
					"type": "string"
				}
			},
			"title": "ClinicLabDto"
		},
		"ClinicOfDoctorInClinicDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ClinicOfDoctorInClinicDto"
		},
		"ClinicTimings": {
			"type": "object",
			"properties": {
				"afternoon": {
					"type": "string"
				},
				"closedAfternoon": {
					"type": "boolean"
				},
				"closedEvening": {
					"type": "boolean"
				},
				"closedMorning": {
					"type": "boolean"
				},
				"closedNight": {
					"type": "boolean"
				},
				"day": {
					"type": "string",
					"enum": [
						"SUNDAY",
						"MONDAY",
						"TUESDAY",
						"WEDNESDAY",
						"THURSDAY",
						"FRIDAY",
						"SATURDAY"
					]
				},
				"evening": {
					"type": "string"
				},
				"morning": {
					"type": "string"
				},
				"night": {
					"type": "string"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlot"
					}
				}
			},
			"title": "ClinicTimings"
		},
		"ClinicWoMedicineInClinics": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"cluster": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClinicWoMedicineInClinics"
		},
		"Clinics": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"city": {
					"type": "string"
				},
				"clinicImage": {
					"type": "string"
				},
				"clinicManagerName": {
					"type": "string"
				},
				"clinicManagerPhone": {
					"type": "string"
				},
				"cluster": {
					"type": "string"
				},
				"coBrandingImage": {
					"type": "string"
				},
				"coBrandingName": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicForClinics"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCoBranded": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"slug": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"storeCode": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Clinics"
		},
		"ClinicsByCluster": {
			"type": "object",
			"properties": {
				"cluster": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ClinicsByCluster"
		},
		"ClinicsForAssistantDashboard": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"cluster": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicWoClinic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClinicsForAssistantDashboard"
		},
		"ClinicsForConsultation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ClinicsForConsultation"
		},
		"ClinicsForEPrescription": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ClinicsForEPrescription"
		},
		"ClinicsOnly": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"city": {
					"type": "string"
				},
				"clinicImage": {
					"type": "string"
				},
				"cluster": {
					"type": "string"
				},
				"coBrandingImage": {
					"type": "string"
				},
				"coBrandingName": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCoBranded": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"slug": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"storeCode": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClinicsOnly"
		},
		"ClinicsWoDoctorInClinics": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"city": {
					"type": "string"
				},
				"clinicEmail": {
					"type": "string"
				},
				"clinicPhone": {
					"type": "string"
				},
				"cluster": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"invoiceCode": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"labCode": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"logoUrl": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"warehouseCode": {
					"type": "string"
				}
			},
			"title": "ClinicsWoDoctorInClinics"
		},
		"ClinicsWoDoctorInClinicsNMedicineInClinics": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"cluster": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClinicsWoDoctorInClinicsNMedicineInClinics"
		},
		"ClosedTimeSlot": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinicClosedTimeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicClosedTimeSlot"
					}
				},
				"end": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"start": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClosedTimeSlot"
		},
		"Cluster": {
			"type": "object",
			"properties": {
				"areas": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Area"
					}
				},
				"clusterAndDiagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClusterAndDiagnosticLab"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "Cluster"
		},
		"ClusterAndDiagnosticLab": {
			"type": "object",
			"properties": {
				"cluster": {
					"$ref": "#/definitions/Cluster"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				}
			},
			"title": "ClusterAndDiagnosticLab"
		},
		"ClusterAndDiagnosticLabs": {
			"type": "object",
			"properties": {
				"cluster": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClusterWoClusterAndDiagnosticLabs"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticLabs"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClusterAndDiagnosticLabs"
		},
		"ClusterAndDiagnosticLabsWoCluster": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticLabs"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClusterAndDiagnosticLabsWoCluster"
		},
		"ClusterRequestDto": {
			"type": "object",
			"properties": {
				"areaIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"areas": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AreaRequestDto"
					}
				},
				"clusterId": {
					"type": "integer",
					"format": "int64"
				},
				"clusterName": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"pinCodes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "ClusterRequestDto"
		},
		"ClusterWoClusterAndDiagnosticLabs": {
			"type": "object",
			"properties": {
				"areas": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Areas"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClusterWoClusterAndDiagnosticLabs"
		},
		"Clusters": {
			"type": "object",
			"properties": {
				"areas": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Areas"
					}
				},
				"clusterAndDiagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClusterAndDiagnosticLabsWoCluster"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Clusters"
		},
		"ClustersWithLabsAndClinics": {
			"type": "object",
			"properties": {
				"areas": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Areas"
					}
				},
				"clinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClinicsOnly"
					}
				},
				"clusterAndDiagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClusterAndDiagnosticLabsWoCluster"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ClustersWithLabsAndClinics"
		},
		"ClustersWoArea": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ClustersWoArea"
		},
		"Comment": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Comment"
					}
				},
				"compliments": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"description": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"parentComment": {
					"$ref": "#/definitions/Comment"
				},
				"patientHistoryForComment": {
					"$ref": "#/definitions/PatientHistory"
				},
				"rating": {
					"type": "number",
					"format": "double"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Comment"
		},
		"CommentDto": {
			"type": "object",
			"properties": {
				"compliments": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"description": {
					"type": "string"
				},
				"patientHistoryId": {
					"type": "integer",
					"format": "int64"
				},
				"rating": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "CommentDto"
		},
		"CommentOnDocument": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistory"
					}
				},
				"patientPreviousDocuments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientPreviousDocument"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "CommentOnDocument"
		},
		"CommentOnDocuments": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"patientPreviousDocuments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientPreviousDocuments"
					}
				}
			},
			"title": "CommentOnDocuments"
		},
		"CommentOptionsDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"message": {
					"type": "string"
				},
				"note": {
					"type": "string"
				}
			},
			"title": "CommentOptionsDto"
		},
		"Comments": {
			"type": "object",
			"properties": {
				"compliments": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"description": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"rating": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "Comments"
		},
		"CommentsByPatientDetails": {
			"type": "object",
			"properties": {
				"comments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Comment"
					}
				},
				"rating": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "CommentsByPatientDetails"
		},
		"ConsolidateHomeApis": {
			"type": "object",
			"properties": {
				"home": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsolidatedData"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsolidateHomeApis"
		},
		"ConsolidatedData": {
			"type": "object",
			"properties": {
				"blogLink": {
					"type": "string"
				},
				"bookAnAppointment": {
					"type": "boolean"
				},
				"data": {
					"type": "array",
					"items": {
						"type": "object"
					}
				},
				"subTitle": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"widGetId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsolidatedData"
		},
		"Consultation": {
			"type": "object",
			"properties": {
				"address": {
					"$ref": "#/definitions/Address"
				},
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Advice"
					}
				},
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergy"
					}
				},
				"appointmentDateString": {
					"type": "string"
				},
				"createdBy": {
					"type": "string"
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"clinicManagerNote": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultationAndDoxpers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxper"
					}
				},
				"consultationHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationHistory"
					}
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdBy": {
					"type": "string"
				},
				"dateOnly": {
					"type": "string",
					"format": "date-time"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnosis"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorAdviceTag": {
					"$ref": "#/definitions/DoctorAdviceTag"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingCondition"
					}
				},
				"followups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Followup"
					}
				},
				"hasDeclineReason": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"initialPriorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"isPrepaid": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isOnline": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"isOtpSkipped": {
					"type": "boolean"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineTaken": {
					"type": "string"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"mostRecentFollowup": {
					"$ref": "#/definitions/Followup"
				},
				"note": {
					"type": "string"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"optOutReason": {
					"type": "string"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistory"
					}
				},
				"patientSymptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientSymptom"
					}
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"prescriptionByDates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				},
				"previousConsultationId": {
					"type": "integer",
					"format": "int64"
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedure"
					}
				},
				"qrCode": {
					"type": "string"
				},
				"referralPhone": {
					"type": "string"
				},
				"referrals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Referral"
					}
				},
				"referredByDoctor": {
					"type": "string"
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribble"
					}
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"followupStatus":{
	                "type": "string",
	                    "enum": [
		                    "NOT_APPLICABLE",
		                    "APPLICABLE",
		                    "USED",
		                    "NOT_USED",
		                    "EXPIRED"
	                    ]
                },
                "followupValidTill": {
                    "$ref": "#/definitions/Timestamp"
                },
                "isFollowUp": {
					"type": "boolean"
				},
				"status": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptom"
					}
				},
				"takenMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TakenMedicine"
					}
				},
				"timeSlot": {
					"$ref": "#/definitions/TimeSlot"
				},
				"transcriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Transcription"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitType"
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vital"
					}
				}
			},
			"title": "Consultation"
		},
		"ConsultationAndDoxper": {
			"type": "object",
			"properties": {
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"doxperFilePath": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"notificationSource": {
					"type": "string",
					"enum": [
						"MEDDO",
						"DOXPER"
					]
				},
				"patientName": {
					"type": "string"
				},
				"patientPhoneNumber": {
					"type": "string"
				},
				"qrCode": {
					"type": "string"
				},
				"scribble": {
					"$ref": "#/definitions/Scribble"
				},
				"status": {
					"type": "string",
					"enum": [
						"START",
						"END",
						"UPDATE",
						"UPLOAD"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsultationAndDoxper"
		},
		"ConsultationAndDoxpers": {
			"type": "object",
			"properties": {
				"consultation": {
					"$ref": "#/definitions/ConsultationForDoxper"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForDoxper"
				},
				"doxperFilePath": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"notificationSource": {
					"type": "string",
					"enum": [
						"MEDDO",
						"DOXPER"
					]
				},
				"patientName": {
					"type": "string"
				},
				"patientPhoneNumber": {
					"type": "string"
				},
				"qrCode": {
					"type": "string"
				},
				"scribble": {
					"$ref": "#/definitions/ScribbleForDoxper"
				},
				"status": {
					"type": "string",
					"enum": [
						"START",
						"END",
						"UPDATE",
						"UPLOAD"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsultationAndDoxpers"
		},
		"ConsultationAndFollowupDto": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"followupDate": {
					"type": "string",
					"format": "date-time"
				},
				"followupDays": {
					"type": "string"
				},
				"followupId": {
					"type": "integer",
					"format": "int64"
				},
				"isVisited": {
					"type": "boolean"
				},
				"note": {
					"type": "string"
				},"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "ConsultationAndFollowupDto"
		},
		"ConsultationAppointmentForMessageRouter": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsAppointmentForMessageRouter"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"patient": {
					"$ref": "#/definitions/PatientsAppointmentForMessageRouter"
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationAppointmentForMessageRouter"
		},
		"ConsultationCartDetails": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsForPatientApp"
				},
				"patient": {
					"$ref": "#/definitions/PatientsForClinics"
				}
			},
			"title": "ConsultationCartDetails"
		},
		"ConsultationDetailsForDoxper": {
			"type": "object",
			"properties": {
				"consultationAndDoxperId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"dic": {
					"type": "integer",
					"format": "int64"
				},
				"doxperStatus": {
					"type": "string",
					"enum": [
						"START",
						"END",
						"UPDATE",
						"UPLOAD"
					]
				},
				"doxperUserName": {
					"type": "string"
				},
				"scribbleId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsultationDetailsForDoxper"
		},
		"ConsultationDoxperDto": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationStatus": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"doxperStatus": {
					"type": "string",
					"enum": [
						"START",
						"END",
						"UPDATE",
						"UPLOAD"
					]
				},
				"qrCode": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "ConsultationDoxperDto"
		},
		"ConsultationDoxperQrCodeBody": {
			"type": "object",
			"properties": {
				"consultationDetailsForDoxpers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationDetailsForDoxper"
					}
				},
				"qrCode": {
					"type": "string"
				}
			},
			"title": "ConsultationDoxperQrCodeBody"
		},
		"ConsultationDoxperUpdateDto": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"doxperStatus": {
					"type": "string"
				},
				"qrCode": {
					"type": "string"
				}
			},
			"title": "ConsultationDoxperUpdateDto"
		},
		"ConsultationForAssistantDashboard": {
			"type": "object",
			"properties": {
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergies"
					}
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnoses"
					}
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForPatientSearch"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditions"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineTaken": {
					"type": "string"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoAddress"
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptoms"
					}
				},
				"takenMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TakenMedicines"
					}
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vitals"
					}
				}
			},
			"title": "ConsultationForAssistantDashboard"
		},
		"ConsultationsForAppointment": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"clinicManagerNote": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsAppointmentForMessageRouter"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isOnline": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineTaken": {
					"type": "string"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/PatientsAppointmentForMessageRouter"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistoriesWoPatientNdConsultation"
					}
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"referralPhone": {
					"type": "string"
				},
				"referredByDoctor": {
					"type": "string"
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationsForAppointment"
		},
		"ConsultationForCamp": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicWithDoctorOnly"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"patient": {
					"$ref": "#/definitions/PatientForPatientQueue"
				}
			},
			"title": "ConsultationForCamp"
		},"SubscriptionDto": {
			"type": "object",
			"properties": {
				"isSelected": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"RADIOLOGY",
						"CONSULTATION"
					]
				}
			},
			"title": "SubscriptionDto"
		},"SubscriptionResponse": {
			"type": "object",
			"properties": {
				"isValid": {
					"type": "boolean"
				},
				"isApplicableForConsultation": {
					"type": "boolean"
				},
				"isApplicableForMedicineOrDiagnostic": {
					"type": "boolean"
				},
				"isApplicableForVisitConsultation": {
					"type": "boolean"
				},
				"isApplicableForOnlineConsultation": {
					"type": "boolean"
				},
				"isSelected": {
					"type": "boolean"
				},
				"isFreeFollowup": {
					"type": "boolean"
				},
				"isSubscriptionSellable": {
					"type": "boolean"
				},
				"patientSubscriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"subscriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"subscriptionName": {
					"type": "string"
				},
				"visitConsultationCount": {
					"type": "integer",
					"format": "int64"
				},
				"onlineConsultationCount": {
					"type": "integer",
					"format": "int64"
				},
				"visitConsultationCountLeft": {
					"type": "integer",
					"format": "int64"
				},
				"onlineConsultationCountLeft": {
					"type": "integer",
					"format": "int64"
				},"medicineCount": {
					"type": "integer",
					"format": "int32"
				},
				"diagnosticCount": {
					"type": "integer",
					"format": "int32"
				},
				"radiologyCount": {
					"type": "integer",
					"format": "int32"
				},
				"medicineCountLeft": {
					"type": "integer",
					"format": "int32"
				},
				"diagnosticCountLeft": {
					"type": "integer",
					"format": "int32"
				},
				"radiologyCountLeft": {
					"type": "integer",
					"format": "int32"
				},
				"validity": {
					"type": "integer",
					"format": "int32"
				},
				"medicineDiscountPercentage": {
					"type": "number",
					"format": "double"
				},
				"diagnosticDiscountPercentage": {
					"type": "number",
					"format": "double"
				},
				"maximumConsultationAmount": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "SubscriptionResponse"
		},
		"ConsultationForDoxper": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationForDoxper"
		},
		"ConsultationForLastAppointmentDto": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicWithDoctorOnly"
				},
				"isLabTestTaken": {
					"type": "boolean"
				},
				"isMedicineTaken": {
					"type": "boolean"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"symptomsForRecommendation": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypesForRecommendation"
					}
				}
			},
			"title": "ConsultationForLastAppointmentDto"
		},
		"ConsultationForMessageRouter": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForMessageRouter"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "ConsultationForMessageRouter"
		},
		"ConsultationForNotification": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				}
			},
			"title": "ConsultationForNotification"
		},
		"ConsultationForOrder": {
			"type": "object",
			"properties": {
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicWoConsultationAndClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"vendorId": {
					"type": "integer",
					"format": "int64"
				},
				"vendorOrderId": {
					"type": "string"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "ConsultationForOrder"
		},
		"ConsultationForOrderDetail": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribbles"
					}
				}
			},
			"title": "ConsultationForOrderDetail"
		},
		"ConsultationForPatientAddToQueues": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForPatientQueue"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"patient": {
					"$ref": "#/definitions/PatientForPatientQueue"
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationForPatientAddToQueues"
		},
		"ConsultationForPatientHistoryForDoctorDto": {
			"type": "object",
			"properties": {
				"patientHistoryForRecentActivitiesForDoctorList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistoryForRecentActivitiesForDoctor"
					}
				}
			},
			"title": "ConsultationForPatientHistoryForDoctorDto"
		},
		"ConsultationForPatientHistoryForDoctorWithPaginationDto": {
			"type": "object",
			"properties": {
				"consultationForPatientHistoryForDoctorDtos": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationForPatientHistoryForDoctorDto"
					}
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"subTitle": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"totalElements": {
					"type": "integer",
					"format": "int32"
				},
				"totalPage": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "ConsultationForPatientHistoryForDoctorWithPaginationDto"
		},
		"ConsultationForPatientSearch": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnoses"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticsWoConsultation"
					}
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForPatientSearch"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isVisited": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescriptions"
					}
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"status": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptoms"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationForPatientSearch"
		},
		"ConsultationForPrescriptionByDate": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForMessageRouter"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationForPrescriptionByDate"
		},
		"ConsultationForQueue": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"isPayLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"isPayLaterForHomeCollectionOnTest": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"visitTypeId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsultationForQueue"
		},
		"ConsultationForRecentPatientHistory": {
			"type": "object",
			"properties": {
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergies"
					}
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnoses"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticWoConsultation"
					}
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForPatientHistory"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditions"
					}
				},
				"followups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Followups"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineTaken": {
					"type": "string"
				},
				"mostRecentFollowup": {
					"$ref": "#/definitions/Followups"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionForPatientHistory"
					}
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ScribblesWithOverlayedImage"
					}
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptoms"
					}
				},
				"takenMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TakenMedicines"
					}
				},
				"testName": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vitals"
					}
				}
			},
			"title": "ConsultationForRecentPatientHistory"
		},
		"ConsultationForReportUpload": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isVisited": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineTaken": {
					"type": "string"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"referralPhone": {
					"type": "string"
				},
				"referredByDoctor": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationForReportUpload"
		},
		"ConsultationForScribble": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "ConsultationForScribble"
		},
		"ConsultationForTemplate": {
			"type": "object",
			"properties": {
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsForTemplate"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsultationForTemplate"
		},
		"ConsultationForTimeSlotInAppointment": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"date": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicClosedTimeSlots"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoAddress"
				},
				"status": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptoms"
					}
				}
			},
			"title": "ConsultationForTimeSlotInAppointment"
		},
		"ConsultationForTimeSlots": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"date": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicClosedTimeSlots"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoAddress"
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptoms"
					}
				}
			},
			"title": "ConsultationForTimeSlots"
		},
		"ConsultationForTranscription": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicWithDoctorOnly"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"isPrepaid": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoAddress"
				},
				"status": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "ConsultationForTranscription"
		},
		"ConsultationForViewPrescription": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForViewPrescription"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionForViewPrescription"
					}
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribbles"
					}
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vitals"
					}
				}
			},
			"title": "ConsultationForViewPrescription"
		},
		"ConsultationHistories": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"currentStatus": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"previousStatus": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "ConsultationHistories"
		},
		"ConsultationHistory": {
			"type": "object",
			"properties": {
				"appointmentTimeString": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"currentStatus": {
					"type": "string",
					"enum": [
					   "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"previousStatus": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsultationHistory"
		},
		"ConsultationOrderBody": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"clinicId": {
					"type": "integer",
					"format": "int64"
				},
				"clinicName": {
					"type": "string"
				},
				"doctorId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorName": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"patientName": {
					"type": "string"
				}
			},
			"title": "ConsultationOrderBody"
		},
		"VendorConsultationScribbleDto": {
			"type": "object",
			"properties": {
				"vendorId": {
					"type": "string"
				},
				"vendorOrderId": {
					"type": "integer",
					"format": "int64"
				},
				"scribbles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "VendorConsultationScribbleDto"
		},
		"ConsultationOrderDto": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"source": {
					"type": "string"
				},
				"symptoms": {
					"type": "string"
				},
				"existingCondition": {
					"type": "string"
				},
				"ongoingTreatment": {
					"type": "string"
				},
				"sugarLevel": {
					"type": "number",
					"format": "float"
				},
				"temperature": {
					"type": "number",
					"format": "float"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"dicId": {
					"type": "integer",
					"format": "int64"
				},
				"vendorId": {
					"type": "integer",
					"format": "int64"
				},
				"vendorOrderId": {
					"type": "string"
				},
				"createdBy": {
					"type": "string"
				},
				"ziniConsultationId": {
					"type": "integer",
					"format": "int64"
				},
				"isPrepaid": {
					"type": "boolean"
				},
				 "isSubscriptionApplied": {
					"type": "boolean"
				},
				"isUsedFreeFollowUp": {
				    "type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isOnline": {
					"type": "boolean"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"paymentAmount": {
					"type": "number",
					"format": "float"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"BOTH"
					]
				},
				"platform": {
					"type": "string",
					"enum": [
						"PATIENT_APP",
						"POS",
						"WEBSITE",
                        "DOCTOR",
                        "CLINIC",
                        "PROVIDER",
                        "PATIENT",
                        "MEDIATOR"
					]
				},
				"status": {
					"type": "string",
					"enum": [
					    "PENDING",
						"OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"timeSlotId": {
					"type": "integer",
					"format": "int64"
				},
				"visitTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"uploadLink": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UploadLinkDto"
					}
				},
				"utmParameterDto": {
					"$ref": "#/definitions/UtmParameterDto"
				}
			},
			"title": "ConsultationOrderDto"
		},
		"UploadLinkDto": {
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"PATIENT_DOCUMENT",
						"PATIENT_PRECONSULT_UPLOAD",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER"
					]
				},
				"filePath": {
					"type": "string"
				}
			},
			"title": "UploadLinkDto"
		},
		"SubscriptionPartnerOfferDto": {
			"type": "object",
			"properties": {
			"id": {
					"type": "integer",
					"format": "int64"
				},
				"validTill": {
					"type": "string",
					"format": "date-time"
				},
				"validFrom": {
					"type": "string",
					"format": "date-time"
				},
				"name": {
					"type": "string"
				},
				"image": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"termAndCondition": {
					"type": "string"
				},
				"subscriptionPartnerId": {
					"type": "integer",
					"format": "int64"
				},
				"description": {
					"type": "string"
				},
				"disclaimer": {
					"type": "string"
				},
				"error": {
					"type": "string"
				},
				"subscriptionPartnerOfferType": {
					"type": "string",
					"enum": [
						"FREE",
						"FLAT",
						"PERCENTAGE"
					]
				}
			},
			"title": "SubscriptionPartnerOfferDto"
		},
		"SubscriptionPartnerOfferForRouterDto": {
			"type": "object",
			"properties": {
			"patientSubscriptionId": {
					"type": "integer",
					"format": "int64"
				},
			"subscriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"subscriptionPartnerOfferDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SubscriptionPartnerOfferDto"
					}
				}
			},
			"title": "SubscriptionPartnerOfferForRouterDto"
		},
		"ConsultationPatientDto": {
			"type": "object",
			"properties": {
				"age": {
					"type": "integer",
					"format": "int64"
				},
				"consultationStatus": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"gender": {
					"type": "string"
				},
				"mobile": {
					"type": "string"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"patientName": {
					"type": "string"
				},
				"qrCode": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"visitDate": {
					"type": "string"
				},
				"visitId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsultationPatientDto"
		},
		"PatientDtoForOrder": {
			"type": "object",
			"properties": {
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"patientName": {
					"type": "string"
				}
			},
			"title": "PatientDtoForOrder"
		},
		"ConsultationFeeDto": {
			"type": "object",
			"properties": {
				"dicId": {
					"type": "integer",
					"format": "int64"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"appointmentTime":{
					"$ref": "#/definitions/Timestamp"
				},
				"isOnline": {
					"type": "boolean"
				},
				"isFollowUp": {
					"type": "boolean"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				}

			},
			"title": "ConsultationFeeDto"
		},
		"ConsultationPatientVisitedDetails": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicWithDoctorOnly"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoAddress"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistoryForClinicApp"
					}
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"reportUrl": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ScribblesWithOverlayedImage"
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationPatientVisitedDetails"
		},
		"ConsultationReason": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				}
			},
			"title": "ConsultationReason"
		},
		"ConsultationReasons": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"reason": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"OVER_ALL"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsultationReasons"
		},
		"ConsultationRecommendation": {
			"type": "object",
			"properties": {
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AdvicesForRecommendation"
					}
				},
				"diagnosisTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosisTypesForRecommendation"
					}
				},
				"diagnosticTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForRecommendation"
					}
				},
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicinesForRecommendation"
					}
				},
				"procedureTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProcedureTypesForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypesForRecommendation"
					}
				}
			},
			"title": "ConsultationRecommendation"
		},
		"ConsultationSummaryProgress": {
			"type": "object",
			"properties": {
				"diagnosisForConsultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosisForConsultation"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"progress": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Progress"
					}
				},
				"sosDetails": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SosDetails"
					}
				},
				"summary": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Summary"
					}
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomType"
					}
				},
				"viewPrescription": {
					"$ref": "#/definitions/ConsultationForViewPrescription"
				}
			},
			"title": "ConsultationSummaryProgress"
		},
		"Consultations": {
			"type": "object",
			"properties": {
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Advices"
					}
				},
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergies"
					}
				},
				"followupStatus":{
					"type": "string",
					"enum": [
						"NOT_APPLICABLE",
						"APPLICABLE",
						"USED",
						"NOT_USED",
						"EXPIRED"
					]
				},
				"followupValidTill": {
                  "$ref": "#/definitions/Timestamp"
				},
				"numberOfDaysLeft": {
				    "type": "integer",
					"format": "int64"
				},
				"isFollowUp": {
					"type": "boolean"
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"clinicManagerNote": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultationHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationHistories"
					}
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnoses"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsWoConsultation"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditions"
					}
				},
				"followups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Followups"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isOtpSkipped": {
					"type": "boolean"
				},
				"isOnline": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineTaken": {
					"type": "string"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistoriesWoPatientNdConsultation"
					}
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescriptions"
					}
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"referralPhone": {
					"type": "string"
				},
				"referrals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Referrals"
					}
				},
				"referredByDoctor": {
					"type": "string"
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribbles"
					}
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptoms"
					}
				},
				"takenMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TakenMedicines"
					}
				},
				"timeSlot": {
					"$ref": "#/definitions/TimeSlotsWoConsultation"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vitals"
					}
				}
			},
			"title": "Consultations"
		},
		"ConsultationsForDeclineReasons": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"hasDeclineReason": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescriptions"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "ConsultationsForDeclineReasons"
		},
		"ConsultationsForDeclineReasonsWithPatientAndDoctorInClinic": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForReasonCoding"
				},
				"hasDeclineReason": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"patient": {
					"$ref": "#/definitions/PatientsForClinics"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescriptions"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "ConsultationsForDeclineReasonsWithPatientAndDoctorInClinic"
		},
		"ConsultationsForEPrescription": {
			"type": "object",
			"properties": {
				"address": {
					"$ref": "#/definitions/Addresses"
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsForEPrescription"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isPrepaid": {
					"type": "boolean"
				},
				"isOtpSkipped": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/PatientForEPrescription"
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionForEPrescription"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribbles"
					}
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationsForEPrescription"
		},
		"ConsultationsForFollowupsForToday": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsWoConsultation"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "ConsultationsForFollowupsForToday"
		},
		"ConsultationsForSearchAPI": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsForConsultation"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/PatientsForConsultation"
				}
			},
			"title": "ConsultationsForSearchAPI"
		},
		"ConsultationsForTranscriptionRevamp": {
			"type": "object",
			"properties": {
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Advices"
					}
				},
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergies"
					}
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"clinicManagerNote": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnoses"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsForEPrescription"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditions"
					}
				},
				"followups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Followups"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineTaken": {
					"type": "string"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescriptions"
					}
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"referralPhone": {
					"type": "string"
				},
				"referrals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Referrals"
					}
				},
				"referredByDoctor": {
					"type": "string"
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribbles"
					}
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptoms"
					}
				},
				"takenMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TakenMedicines"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vitals"
					}
				}
			},
			"title": "ConsultationsForTranscriptionRevamp"
		},
		"Consumable": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"clinicConsumables": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClinicConsumable"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypeConsumables": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeConsumable"
					}
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "double"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"refCode": {
					"type": "string"
				},
				"sku": {
					"type": "string"
				}
			},
			"title": "Consumable"
		},
		"Consumables": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "integer",
					"format": "int64"
				},
				"procurementPrice": {
					"type": "integer",
					"format": "int64"
				},
				"refCode": {
					"type": "string"
				},
				"sku": {
					"type": "string"
				}
			},
			"title": "Consumables"
		},
		"ConsumablesByClinic": {
			"type": "object",
			"properties": {
				"consumable": {
					"$ref": "#/definitions/Consumables"
				}
			},
			"title": "ConsumablesByClinic"
		},
		"ConsumablesForPos": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "integer",
					"format": "int64"
				},
				"procurementPrice": {
					"type": "integer",
					"format": "int64"
				},
				"refCode": {
					"type": "string"
				},
				"sku": {
					"type": "string"
				},
				"upperPack": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ConsumablesForPos"
		},
		"Coverage": {
			"type": "object",
			"properties": {
				"conversions": {
					"type": "integer",
					"format": "int64"
				},
				"dateWiseCoverage": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DateWiseCoverage"
					}
				},
				"growthRate": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GrowthRate"
					}
				},
				"transcriptions": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Coverage"
		},
		"DashboardSummaryDto": {
			"type": "object",
			"properties": {
				"delayed": {
					"type": "integer",
					"format": "int32"
				},
				"latestConsultation": {
					"$ref": "#/definitions/ConsultationForTranscription"
				},
				"oldCount": {
					"type": "integer",
					"format": "int32"
				},
				"recent": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "DashboardSummaryDto"
		},
		"DateWiseAppointment": {
			"type": "object",
			"properties": {
				"appointmentCount": {
					"type": "integer",
					"format": "int64"
				},
				"date": {
					"type": "string"
				}
			},
			"title": "DateWiseAppointment"
		},
		"DateWiseCoverage": {
			"type": "object",
			"properties": {
				"conversion": {
					"type": "integer",
					"format": "int64"
				},
				"date": {
					"type": "string"
				},
				"transcribe": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DateWiseCoverage"
		},
		"DateWiseNewVsReturning": {
			"type": "object",
			"properties": {
				"date": {
					"type": "string"
				},
				"newPatient": {
					"type": "integer",
					"format": "int64"
				},
				"returnPatient": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DateWiseNewVsReturning"
		},
		"DateWisePatient": {
			"type": "object",
			"properties": {
				"appointment": {
					"type": "integer",
					"format": "int64"
				},
				"avgSession": {
					"type": "string"
				},
				"date": {
					"type": "string"
				},
				"patient": {
					"type": "integer",
					"format": "int64"
				},
				"walk_in": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DateWisePatient"
		},
		"DeclineReason": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedure"
					}
				},
				"rank": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DeclineReason"
		},
		"DeclineReasonForPrescription": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"rank": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				}
			},
			"title": "DeclineReasonForPrescription"
		},
		"Department": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticType"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Department"
		},
		"Detail": {
			"type": "object",
			"properties": {
				"afternoon": {
					"type": "number",
					"format": "double"
				},
				"dataFlag": {
					"type": "string"
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"evening": {
					"type": "number",
					"format": "double"
				},
				"frequency": {
					"type": "string"
				},
				"morning": {
					"type": "number",
					"format": "double"
				},
				"night": {
					"type": "number",
					"format": "double"
				},
				"otherSpecialConditionNote": {
					"type": "string"
				},
				"quantityKey": {
					"type": "string"
				},
				"specialNote": {
					"type": "string"
				},
				"startDate": {
					"type": "string"
				}
			},
			"title": "Detail"
		},
		"Diagnoses": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisTypes"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isAcute": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isProvisional": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Diagnoses"
		},
		"Diagnosis": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isAcute": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isProvisional": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Diagnosis"
		},
		"DiagnosisDto": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isProvisional": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"length": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosisDto"
		},
		"DiagnosisForConsultation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DiagnosisForConsultation"
		},
		"DiagnosisType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"critical": {
					"type": "boolean"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnosis"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosisType"
		},
		"DiagnosisTypeForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DiagnosisTypeForRecommendation"
		},
		"DiagnosisTypes": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"critical": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosisTypes"
		},
		"DiagnosisTypesForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DiagnosisTypesForRecommendation"
		},
		"Diagnostic": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticReportValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticReportValue"
					}
				},
				"diagnosticStatusFlows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticStatusFlow"
					}
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagnosticTypeInLab"
				},
				"diagnosticTypeResults": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeResult"
					}
				},
				"diagnosticsAndPatientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticAndPatientHistory"
					}
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPayLater": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scheduleType": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						 "OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Diagnostic"
		},
		"DiagnosticAndPatientHistoriesForRecentCare": {
			"type": "object",
			"properties": {
				"diagnostic": {
					"$ref": "#/definitions/DiagnosticsWoConsultation"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticAndPatientHistoriesForRecentCare"
		},
		"DiagnosticAndPatientHistory": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patientHistory": {
					"$ref": "#/definitions/PatientHistory"
				}
			},
			"title": "DiagnosticAndPatientHistory"
		},
		"DiagnosticDto": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeInLabId": {
					"type": "integer",
					"format": "int64"
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPayLater": {
					"type": "boolean"
				},
				"isPickup": {
					"type": "boolean"
				},
				"scheduleType": {
					"type": "string"
				}
			},
			"title": "DiagnosticDto"
		},
		"DiagnosticErrorDto": {
			"type": "object",
			"properties": {
				"diagnosticLabId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				},
				"sku": {
					"type": "string"
				}
			},
			"title": "DiagnosticErrorDto"
		},
		"DiagnosticLab": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"contactDetails": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"email": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"logo": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"routingQueue": {
					"type": "string"
				},
				"routingQueueReport": {
					"type": "string"
				},
				"orderUrl": {
					"type": "string"
				},
				"reportUrl": {
					"type": "string"
				},
				"apiKey": {
					"type": "string"
				},
				"apiUser": {
					"type": "string"
				},
				"pccCode": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"workingHours": {
					"type": "string"
				}
			},
			"title": "DiagnosticLab"
		},
		"DiagnosticLabs": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"contactDetails": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"logo": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"routingQueue": {
					"type": "string"
				},
				"routingQueueReport": {
					"type": "string"
				},
				"orderUrl": {
					"type": "string"
				},
				"reportUrl": {
					"type": "string"
				},
				"apiKey": {
					"type": "string"
				},
				"apiUser": {
					"type": "string"
				},
				"pccCode": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"workingHours": {
					"type": "string"
				}
			},
			"title": "DiagnosticLabs"
		},
		"DiagnosticLabsAndZipcode": {
			"type": "object",
			"properties": {
				"clusterName": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"invoiceCode": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"labCode": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"warehouseCode": {
					"type": "string"
				},
				"zipcode": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticLabsAndZipcode"
		},
		"DiagnosticLabsAndZipcodeErrDto": {
			"type": "object",
			"properties": {
				"cluster": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				},
				"zipcode": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticLabsAndZipcodeErrDto"
		},
		"DiagnosticLabsAndZipcodes": {
			"type": "object",
			"properties": {
				"clusterName": {
					"type": "string"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLabs"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"invoiceCode": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"labCode": {
					"type": "string"
				},
				"warehouseCode": {
					"type": "string"
				},
				"zipcode": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticLabsAndZipcodes"
		},
		"DiagnosticLabsForClinic": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"contactDetails": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"logo": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"workingHours": {
					"type": "string"
				}
			},
			"title": "DiagnosticLabsForClinic"
		},
		"DiagnosticLabsForOrder": {
			"type": "object",
			"properties": {
				"discountedPrice": {
					"type": "number",
					"format": "float"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"labName": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "DiagnosticLabsForOrder"
		},
		"DiagnosticLabsForTests": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"contactDetails": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"workingHours": {
					"type": "string"
				}
			},
			"title": "DiagnosticLabsForTests"
		},
		"DiagnosticLabsWithPrice": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"discount": {
					"type": "number",
					"format": "float"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"dtilId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"logo": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"percentOff": {
					"type": "number",
					"format": "float"
				},
				"price": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "DiagnosticLabsWithPrice"
		},
		"DiagnosticLabsWoDiagnosticTypeInLabs": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"contactDetails": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"logo": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"workingHours": {
					"type": "string"
				}
			},
			"title": "DiagnosticLabsWoDiagnosticTypeInLabs"
		},
		"DiagnosticReportDto": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"refLink": {
					"type": "string"
				},
				"vendorRefLink": {
					"type": "string"
				}
			},
			"title": "DiagnosticReportDto"
		},
		"DiagnosticReportValue": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"description": {
					"type": "string"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"method": {
					"type": "string"
				},
				"observation": {
					"type": "string"
				},
				"observationTime": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"referenceRange": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticReportValue"
		},
		"DiagnosticReportValueDto": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"diagnosticId": {
					"type": "integer",
					"format": "int64"
				},
				"method": {
					"type": "string"
				},
				"observation": {
					"type": "string"
				},
				"observationTime": {
					"$ref": "#/definitions/Timestamp"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"referenceRange": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"minValue": {
					"type": "string"
				},
				"maxValue": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"impression": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "DiagnosticReportValueDto"
		},
		"DiagnosticStatusFlow": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"FUTURE",
						"PRESENT",
						"PAST"
					]
				}
			},
			"title": "DiagnosticStatusFlow"
		},
		"DiagnosticTestsForClinicWoLists": {
			"type": "object",
			"properties": {
				"abbreviation": {
					"type": "string"
				},
				"alias": {
					"type": "string"
				},
				"diagnosticTypeStatus": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"precautions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Precautions"
					}
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"specimenTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecimenTypes"
					}
				}
			},
			"title": "DiagnosticTestsForClinicWoLists"
		},
		"DiagnosticType": {
			"type": "object",
			"properties": {
				"abbreviation": {
					"type": "string"
				},
				"alias": {
					"type": "string"
				},
				"childStructures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeStructure"
					}
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticType"
					}
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"department": {
					"$ref": "#/definitions/Department"
				},
				"description": {
					"type": "string"
				},
				"diagnosticTypeInLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeInLab"
					}
				},
				"diagnosticTypePrecautions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypePrecaution"
					}
				},
				"diagnosticTypeSpecimenTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeSpecimenType"
					}
				},
				"diagnosticTypeStatus": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCamp": {
					"type": "boolean"
				},
				"isCombo": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"parent": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"parentStructures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeStructure"
					}
				},
				"popularity": {
					"type": "integer",
					"format": "int32"
				},
				"preCondition": {
					"type": "string"
				},
				"precautions": {
					"type": "string"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"sampleType": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticType"
		},
		"DiagnosticTypeAndSpecimenTypeDto": {
			"type": "object",
			"properties": {
				"diagnosticTypeInLabId": {
					"type": "integer",
					"format": "int64"
				},
				"specimenTypeId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeAndSpecimenTypeDto"
		},
		"DiagnosticTypeAndSpecimenTypeErrDto": {
			"type": "object",
			"properties": {
				"diagnosticTypeInLabId": {
					"type": "integer",
					"format": "int64"
				},
				"error": {
					"type": "string"
				},
				"specimenTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"vendorSampleId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeAndSpecimenTypeErrDto"
		},
		"DiagnosticTypeAndSpecimenTypesForIntegration": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypesForIntegration"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"specimenType": {
					"$ref": "#/definitions/SpecimenTypesForIntegration"
				}
			},
			"title": "DiagnosticTypeAndSpecimenTypesForIntegration"
		},
		"DiagnosticTypeBulkDto": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"clinicId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeStatus": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"isActiveForDiagnosticType": {
					"type": "boolean"
				},
				"isActiveForDiagnosticTypeInLab": {
					"type": "boolean"
				},
				"isAddressMandatory": {
					"type": "boolean"
				},
				"isPickup": {
					"type": "boolean"
				},
				"margin": {
					"type": "string"
				},
				"markActiveOnClinic": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"onPremise": {
					"type": "boolean"
				},
				"precautions": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"processingTime": {
					"type": "string"
				},
				"sampleType": {
					"type": "string"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"tat": {
					"type": "string"
				},
				"taxId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeBulkDto"
		},
		"DiagnosticTypeBulkUploadDto": {
			"type": "object",
			"properties": {
				"clinicIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"diagnosticTypeBodies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeBulkDto"
					}
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeBulkUploadDto"
		},
		"DiagnosticTypeConsumable": {
			"type": "object",
			"properties": {
				"consumable": {
					"$ref": "#/definitions/Consumable"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"defaultQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				}
			},
			"title": "DiagnosticTypeConsumable"
		},
		"DiagnosticTypeDto": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticTypeStatus": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCamp": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"scheduleType": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeDto"
		},
		"DiagnosticTypeForRecommendation": {
			"type": "object",
			"properties": {
				"diagnosticState": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DiagnosticTypeForRecommendation"
		},
		"DiagnosticTypeInLab": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isAddressMandatory": {
					"type": "boolean"
				},
				"isPickup": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"margin": {
					"type": "string"
				},
				"onPremise": {
					"type": "boolean"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"processingTime": {
					"type": "string"
				},
				"procurementPrice": {
					"type": "number",
					"format": "float"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"tat": {
					"type": "string"
				},
				"reportTat": {
					"type": "string"
				},
				"taxes": {
					"$ref": "#/definitions/Taxes"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeInLab"
		},
		"DiagnosticTypeInLabDto": {
			"type": "object",
			"properties": {
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagnosticTypeInLabForOrder"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"testId": {
					"type": "integer",
					"format": "int64"
				},
				"pincode": {
					"type": "string"
				}
			},
			"title": "DiagnosticTypeInLabDto"
		},
		"DiagnosticTypeInLabForOrder": {
			"type": "object",
			"properties": {
				"diagnosticLabId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"otherCharges": {
					"type": "number",
					"format": "float"
				},
				"procurementPrice": {
					"type": "number",
					"format": "float"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"tat": {
					"type": "string"
				},
				"reportTat": {
					"type": "string"
				}
			},
			"title": "DiagnosticTypeInLabForOrder"
		},
		"DiagnosticTypeInLabsForTests": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLabsForTests"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTestsForClinicWoLists"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"otherCharges": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isAddressMandatory": {
					"type": "boolean"
				},
				"isPickup": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"onPremise": {
					"type": "boolean"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"taxes": {
					"$ref": "#/definitions/Taxess"
				}
			},
			"title": "DiagnosticTypeInLabsForTests"
		},
		"DiagnosticTypeItem": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"diagnosticTypeResults": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeResult"
					}
				},
				"highMessage": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"lowMessage": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"normalFrom": {
					"type": "number",
					"format": "float"
				},
				"normalTo": {
					"type": "number",
					"format": "float"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeItem"
		},
		"DiagnosticTypePrecaution": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"precaution": {
					"$ref": "#/definitions/Precaution"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypePrecaution"
		},
		"DiagnosticTypeResult": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comment": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"diagnosticTypeItem": {
					"$ref": "#/definitions/DiagnosticTypeItem"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"result": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeResult"
		},
		"DiagnosticTypeSpecimenType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"specimenType": {
					"$ref": "#/definitions/SpecimenType"
				},
				"specimenTypeAndDiagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecimenTypeAndDiagnosticLab"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeSpecimenType"
		},
		"DiagnosticTypeSpecimenTypeDto": {
			"type": "object",
			"properties": {
				"specimenTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecimenTypeDto"
					}
				},
				"testId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeSpecimenTypeDto"
		},
		"DiagnosticTypeStructure": {
			"type": "object",
			"properties": {
				"child": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"parent": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypeStructure"
		},
		"DiagnosticTypesForCamp": {
			"type": "object",
			"properties": {
				"abbreviation": {
					"type": "string"
				},
				"childTests": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForCamp"
					}
				},
				"diagnosticTypeStatus": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCombo": {
					"type": "boolean"
				},
				"labs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticLabsForOrder"
					}
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			},
			"title": "DiagnosticTypesForCamp"
		},
		"DiagnosticTypesForIntegration": {
			"type": "object",
			"properties": {
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticType"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"precautions": {
					"type": "string"
				},
				"sampleType": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypesForIntegration"
		},
		"DiagnosticTypesForOrder": {
			"type": "object",
			"properties": {
				"abbreviation": {
					"type": "string"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagnosticLabsForOrder"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCombo": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"status": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"type": {
					"type": "string"
				}
			},
			"title": "DiagnosticTypesForOrder"
		},
		"DiagnosticTypesForRecommendation": {
			"type": "object",
			"properties": {
				"abbreviation": {
					"type": "string"
				},
				"alias": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"status": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				}
			},
			"title": "DiagnosticTypesForRecommendation"
		},
		"DiagnosticTypesForTranscription": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"diagnosticTypeStatus": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCamp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"precautionsForDiagnosticType": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Precautions"
					}
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"sampleType": {
					"type": "string"
				},
				"specimenTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecimenTypes"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticTypesForTranscription"
		},
		"DiagnosticUniverseDto": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticState": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"diagnosticId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticLabId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeInLabId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypePrecautions": {
					"type": "string"
				},
				"length": {
					"type": "string"
				},
				"diagnosticTypeSampleType": {
					"type": "string"
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPayLater": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"scheduleType": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticUniverseDto"
		},
		"DiagnosticWoConsultation": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypesForTranscription"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagonsticTypeInLabsWoDiagnostics"
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scheduleType": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticWoConsultation"
		},
		"Diagnostics": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypesForTranscription"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagonsticTypeInLabsWoDiagnostics"
				},
				"diagnosticTypeInLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeInLabsForTests"
					}
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPayLater": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scheduleType": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Diagnostics"
		},
		"DiagnosticsForOrder": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypesForTranscription"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagonsticTypeInLabsWoDiagnostics"
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPayLater": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scheduleType": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticsForOrder"
		},
		"DiagnosticsWoConsultation": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagonsticTypeInLabsWoDiagnostics"
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scheduleType": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DiagnosticsWoConsultation"
		},
		"DiagonsticTypeInLabsWoDiagnostics": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLabsWoDiagnosticTypeInLabs"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypesForTranscription"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"otherCharges": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isAddressMandatory": {
					"type": "boolean"
				},
				"isPickup": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"onPremise": {
					"type": "boolean"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"procurementPrice": {
					"type": "number",
					"format": "float"
				},
				"serviceKeyUnit": {
					"type": "string"
				}
			},
			"title": "DiagonsticTypeInLabsWoDiagnostics"
		},
		"Doctor": {
			"type": "object",
			"properties": {
				"aboutDoctor": {
					"type": "string"
				},
				"affiliation": {
					"type": "string"
				},
				"appPlatform": {
					"type": "string",
					"enum": [
						"IPAD",
						"IPHONE",
						"ANDROID"
					]
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinic"
					}
				},
				"experience": {
					"type": "string"
				},
				"healthProblemTagsForDoctor": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/HealthProblemTagsForDoctor"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCamp": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"popularity": {
					"type": "number",
					"format": "float"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "float"
				},
				"registrationNumber": {
					"type": "string"
				},
				"service": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Speciality"
					}
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTags"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Doctor"
		},
		"DoctorAdviceTag": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DoctorAdviceTag"
		},
		"DoctorAppointmentForMessageRouter": {
			"type": "object",
			"properties": {
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "float"
				},
				"registrationNumber": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorAppointmentForMessageRouter"
		},
		"DoctorDetailForAppointment": {
			"type": "object",
			"properties": {
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCamp": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"popularity": {
					"type": "number",
					"format": "float"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"registrationNumber": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialiesForAppointment"
					}
				}
			},
			"title": "DoctorDetailForAppointment"
		},
		"DoctorDetailsDto": {
			"type": "object",
			"properties": {
				"doctor": {
					"$ref": "#/definitions/DoctorDto"
				},
				"doctorTagsAndTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTagsAndTypesDto"
					}
				},
				"doctorsInClinic": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicsDto"
					}
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTagsSelectedDto"
					}
				}
			},
			"title": "DoctorDetailsDto"
		},
		"DoctorDto": {
			"type": "object",
			"properties": {
				"aboutDoctor": {
					"type": "string"
				},
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCamp": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"popularity": {
					"type": "number",
					"format": "float"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "float"
				},
				"registrationNumber": {
					"type": "string"
				},
				"service": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityDto"
					}
				},
				"specialityIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"title": "DoctorDto"
		},
		"DoctorForOnGoingMedication": {
			"type": "object",
			"properties": {
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"popularity": {
					"type": "number",
					"format": "float"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityWithIdAndName"
					}
				}
			},
			"title": "DoctorForOnGoingMedication"
		},
		"DoctorForOrderDashboard": {
			"type": "object",
			"properties": {
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCamp": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				}
			},
			"title": "DoctorForOrderDashboard"
		},
		"DoctorForOrderDetail": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DoctorForOrderDetail"
		},
		"DoctorForPatientHistory": {
			"type": "object",
			"properties": {
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"registrationNumber": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityWithIdAndName"
					}
				}
			},
			"title": "DoctorForPatientHistory"
		},
		"DoctorForPatientQueue": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DoctorForPatientQueue"
		},
		"DoctorForPatientSearch": {
			"type": "object",
			"properties": {
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"registrationNumber": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorForPatientSearch"
		},
		"DoctorForRecentCare": {
			"type": "object",
			"properties": {
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicForSpeciality"
					}
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "double"
				},
				"registrationNumber": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityWithIdAndName"
					}
				}
			},
			"title": "DoctorForRecentCare"
		},
		"DoctorFromDic": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorFromDic"
		},
		"DoctorInClinic": {
			"type": "object",
			"properties": {
				"billingType": {
					"type": "string",
					"enum": [
						"SBSC",
						"SBSCWITHDOCTORPOS",
						"MBSC",
						"MBNC"
					]
				},
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"code": {
					"type": "string"
				},
				"consultationAndDoxpers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxper"
					}
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"eConsultationFee": {
					"type": "number",
					"format": "float"
				},
				"consultationServiceRevenueDisabled": {
					"type": "boolean"
				},
				"consultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Consultation"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/Doctor"
				},
				"doctorInClinicClosedTimeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicClosedTimeSlot"
					}
				},
				"doctorInClinicConfigurations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicConfiguration"
					}
				},
				"doctorMessageAndDoctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorMessageAndDoctorInClinic"
					}
				},
				"doxperUserName": {
					"type": "string"
				},
				"hasConsultation": {
					"type": "boolean"
				},
				"hasCounselling": {
					"type": "boolean"
				},
				"hasDispensing": {
					"type": "boolean"
				},
				"hasLifesytle": {
					"type": "boolean"
				},
				"hasNutrition": {
					"type": "boolean"
				},
				"hasPathology": {
					"type": "boolean"
				},
				"hasPhysiotherapy": {
					"type": "boolean"
				},
				"hasRadiology": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isMeddoSure": {
					"type": "boolean"
				},
				"isListed": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"locusHomeBaseId": {
					"type": "string"
				},
				"locusTeamId": {
					"type": "string"
				},
				"mapLink": {
					"type": "string"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"messageConfigurations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MessageConfiguration"
					}
				},
				"metaDescription": {
					"type": "string"
				},
				"metaKeywords": {
					"type": "string"
				},
				"metaTitle": {
					"type": "string"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"separateConsultationInvoiceEnabled": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlot"
					}
				},
				"userLatitude": {
					"type": "number",
					"format": "double"
				},
				"userLongitude": {
					"type": "number",
					"format": "double"
				},
				"usingMeddoLite": {
					"type": "boolean"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitEndTime": {
					"$ref": "#/definitions/Time"
				},
				"visitStartTime": {
					"$ref": "#/definitions/Time"
				}
			},
			"title": "DoctorInClinic"
		},
		"DoctorInClinicClosedTimeSlot": {
			"type": "object",
			"properties": {
				"closedTimeSlot": {
					"$ref": "#/definitions/ClosedTimeSlot"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				}
			},
			"title": "DoctorInClinicClosedTimeSlot"
		},
		"DoctorInClinicClosedTimeSlots": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorInClinicClosedTimeSlots"
		},
		"DoctorInClinicConfiguration": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"keyName": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"value": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorInClinicConfiguration"
		},
		"DoctorInClinicConfigurationDto": {
			"type": "object",
			"properties": {
				"configurationId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"keyName": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "DoctorInClinicConfigurationDto"
		},
		"DoctorInClinicConfigurationErrDto": {
			"type": "object",
			"properties": {
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"error": {
					"type": "string"
				},
				"keyName": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "DoctorInClinicConfigurationErrDto"
		},
		"DoctorInClinicConfigurationForWeb": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForMessageRouter"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"keyName": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "DoctorInClinicConfigurationForWeb"
		},
		"DoctorInClinicConfigurationListDto": {
			"type": "object",
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicConfigurationDto"
					}
				}
			},
			"title": "DoctorInClinicConfigurationListDto"
		},
		"DoctorInClinicConfigurationWoDic": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"keyName": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "DoctorInClinicConfigurationWoDic"
		},
		"DoctorInClinicConfigurations": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinics"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"keyName": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "DoctorInClinicConfigurations"
		},
		"DoctorInClinicConfigurationsForApp": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsForDoxper"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"keyName": {
					"type": "string"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "DoctorInClinicConfigurationsForApp"
		},
		"DoctorInClinicForAdminDashboard": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicDetailForAppointment"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorForOrderDashboard"
				},
				"hasConsultation": {
					"type": "boolean"
				},
				"hasDispensing": {
					"type": "boolean"
				},
				"hasLifesytle": {
					"type": "boolean"
				},
				"hasNutrition": {
					"type": "boolean"
				},
				"hasPathology": {
					"type": "boolean"
				},
				"hasRadiology": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicForAdminDashboard"
		},
		"DoctorInClinicForAssistantDashboard": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationForAssistantDashboard"
					}
				},
				"doctor": {
					"$ref": "#/definitions/Doctors"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlotsWoConsultation"
					}
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicForAssistantDashboard"
		},
		"DoctorInClinicForClinics": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/Doctors"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicForClinics"
		},
		"DoctorInClinicForConsumer": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicsWoDoctorInClinicsNMedicineInClinics"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorsWoDoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"locusHomeBaseId": {
					"type": "string"
				},
				"locusTeamId": {
					"type": "string"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"userLatitude": {
					"type": "number",
					"format": "double"
				},
				"userLongitude": {
					"type": "number",
					"format": "double"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
				"type": "boolean"
				},
				"isWhatsappEnabled": {
				"type": "boolean"
				}
			},
			"title": "DoctorInClinicForConsumer"
		},
		"DoctorInClinicForDoxper": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				}
			},
			"title": "DoctorInClinicForDoxper"
		},
		"DoctorInClinicForMessageRouter": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/ClinicForOrderDetail"
				},
				"code": {
					"type": "string"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorAppointmentForMessageRouter"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				}
			},
			"title": "DoctorInClinicForMessageRouter"
		},
		"DoctorInClinicForOrderDetail": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/ClinicForOrderDetail"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorForOrderDetail"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorInClinicForOrderDetail"
		},
		"DoctorInClinicForPatientHistory": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/ClinicDetailForAppointment"
				},
				"code": {
					"type": "string"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorForPatientHistory"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				}
			},
			"title": "DoctorInClinicForPatientHistory"
		},
		"DoctorInClinicForPatientQueue": {
			"type": "object",
			"properties": {
				"doctor": {
					"$ref": "#/definitions/DoctorForPatientQueue"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorInClinicForPatientQueue"
		},
		"DoctorInClinicForPatientSearch": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicWoMedicineInClinics"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorForPatientSearch"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorInClinicForPatientSearch"
		},
		"DoctorInClinicForReasonCoding": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicsWoDoctorInClinics"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/Doctors"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicForReasonCoding"
		},
		"DoctorInClinicForRecentCare": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicWoMedicineInClinics"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorForRecentCare"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"locusHomeBaseId": {
					"type": "string"
				},
				"locusTeamId": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicForRecentCare"
		},
		"DoctorInClinicForSpeciality": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicWoMedicineInClinics"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicForSpeciality"
		},
		"DoctorInClinicForViewPrescription": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/ClinicsWoDoctorInClinics"
				},
				"code": {
					"type": "string"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorDetailForAppointment"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorInClinicForViewPrescription"
		},
		"DoctorInClinicPaddindConfigurationDto": {
			"type": "object",
			"properties": {
				"bottomMargin": {
					"type": "string"
				},
				"dicIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"leftMargin": {
					"type": "string"
				},
				"pageSize": {
					"type": "string"
				},
				"rightMargin": {
					"type": "string"
				},
				"topMargin": {
					"type": "string"
				}
			},
			"title": "DoctorInClinicPaddindConfigurationDto"
		},
		"DoctorInClinicWithDoctorOnly": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/ClinicWoMedicineInClinics"
				},
				"code": {
					"type": "string"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorForOrderDashboard"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				}
			},
			"title": "DoctorInClinicWithDoctorOnly"
		},
		"DoctorInClinicWoClinic": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"consultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationForAssistantDashboard"
					}
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/Doctors"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"usingMeddoLite": {
					"type": "boolean"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicWoClinic"
		},
		"DoctorInClinicWoConsultationAndClinic": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorsForMessageRouter"
				},
				"doxperUserName": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicWoConsultationAndClinic"
		},
		"DoctorInClinics": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicsWoDoctorInClinics"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"eConsultationFee": {
					"type": "number",
					"format": "float"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/Doctors"
				},
				"doxperUserName": {
					"type": "string"
				},
				"hasConsultation": {
					"type": "boolean"
				},
				"hasDispensing": {
					"type": "boolean"
				},
				"hasLifesytle": {
					"type": "boolean"
				},
				"hasNutrition": {
					"type": "boolean"
				},
				"hasPathology": {
					"type": "boolean"
				},
				"hasRadiology": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"separateConsultationInvoiceEnabled": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlotsWoConsultation"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinics"
		},
		"DoctorInClinicsAppointmentForMessageRouter": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/ClinicsForConsultation"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorAppointmentForMessageRouter"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"settledConsultation": {
					"type": "boolean"
				}
			},
			"title": "DoctorInClinicsAppointmentForMessageRouter"
		},
		"DoctorInClinicsDto": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicOfDoctorInClinicDto"
				},
				"clinicId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"consultationServiceRevenueDisabled": {
					"type": "boolean"
				},
				"diagnosticCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doxperUserName": {
					"type": "string"
				},
				"hasConsultation": {
					"type": "boolean"
				},
				"hasCounselling": {
					"type": "boolean"
				},
				"hasDispensing": {
					"type": "boolean"
				},
				"hasLifestyle": {
					"type": "boolean"
				},
				"hasNutrition": {
					"type": "boolean"
				},
				"hasPathology": {
					"type": "boolean"
				},
				"hasPhysiotherapy": {
					"type": "boolean"
				},
				"hasRadiology": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isListed": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"locusHomeBaseId": {
					"type": "string"
				},
				"locusTeamId": {
					"type": "string"
				},
				"mapLink": {
					"type": "string"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"metaDescription": {
					"type": "string"
				},
				"metaKeywords": {
					"type": "string"
				},
				"metaTitle": {
					"type": "string"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"separateConsultationInvoiceEnabled": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"userLatitude": {
					"type": "number",
					"format": "double"
				},
				"userLongitude": {
					"type": "number",
					"format": "double"
				},
				"usingMeddoLite": {
					"type": "boolean"
				},
				"visitEndTime": {
					"$ref": "#/definitions/Time"
				},
				"visitStartTime": {
					"$ref": "#/definitions/Time"
				}
			},
			"title": "DoctorInClinicsDto"
		},
		"DoctorInClinicsForConsultation": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/ClinicsForConsultation"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorsForConsultation"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"settledConsultation": {
					"type": "boolean"
				}
			},
			"title": "DoctorInClinicsForConsultation"
		},
		"DoctorInClinicsForDoxper": {
			"type": "object",
			"properties": {
				"doxperUserName": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorInClinicsForDoxper"
		},
		"DoctorInClinicsForEPrescription": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/ClinicsForEPrescription"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorsForEPrescription"
				},
				"hasConsultation": {
					"type": "boolean"
				},
				"hasDispensing": {
					"type": "boolean"
				},
				"hasLifesytle": {
					"type": "boolean"
				},
				"hasNutrition": {
					"type": "boolean"
				},
				"hasPathology": {
					"type": "boolean"
				},
				"hasRadiology": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				}
			},
			"title": "DoctorInClinicsForEPrescription"
		},
		"DoctorInClinicsForHomepage": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicWoMedicineInClinics"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"diagnosticTestsForCamp": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForCamp"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicsForHomepage"
		},
		"DoctorInClinicsForPatientApp": {
			"type": "object",
			"properties": {
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"distance": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"nextAvailable": {
					"$ref": "#/definitions/NextAvailable"
				},
				"settledConsultation": {
					"type": "boolean"
				}
			},
			"title": "DoctorInClinicsForPatientApp"
		},
		"DoctorInClinicsForTemplate": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicsWoDoctorInClinics"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"doctor": {
					"$ref": "#/definitions/Doctors"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"isMeddoSure": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicsForTemplate"
		},
		"DoctorInClinicsWoConsultation": {
			"type": "object",
			"properties": {
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicsWoDoctorInClinics"
				},
				"code": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"consultationServiceRevenueDisabled": {
					"type": "boolean"
				},
				"doctor": {
					"$ref": "#/definitions/Doctors"
				},
				"doxperUserName": {
					"type": "string"
				},
				"hasConsultation": {
					"type": "boolean"
				},
				"hasDispensing": {
					"type": "boolean"
				},
				"hasLifesytle": {
					"type": "boolean"
				},
				"hasNutrition": {
					"type": "boolean"
				},
				"hasPathology": {
					"type": "boolean"
				},
				"hasRadiology": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isMeddoSure": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"locusHomeBaseId": {
					"type": "string"
				},
				"locusTeamId": {
					"type": "string"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"separateConsultationInvoiceEnabled": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlotsWoConsultation"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "DoctorInClinicsWoConsultation"
		},
		"DoctorInformation": {
			"type": "object",
			"properties": {
				"clinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Clinics"
					}
				},
				"doctorName": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "DoctorInformation"
		},
		"DoctorMessage": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorMessageAndDoctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorMessageAndDoctorInClinic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"message": {
					"type": "string"
				},
				"unit": {
					"type": "integer",
					"format": "int64"
				},
				"userIdApprovedBy": {
					"type": "integer",
					"format": "int64"
				},
				"userIdCreatedBy": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorMessage"
		},
		"DoctorMessageAndDoctorInClinic": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"doctorMessage": {
					"$ref": "#/definitions/DoctorMessage"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				}
			},
			"title": "DoctorMessageAndDoctorInClinic"
		},
		"DoctorMessageAndDoctorInClinicForMessageRouter": {
			"type": "object",
			"properties": {
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsAppointmentForMessageRouter"
				},
				"doctorMessage": {
					"$ref": "#/definitions/DoctorMessagesWoDoctorMessageAndDic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"patient": {
					"$ref": "#/definitions/PatientsAppointmentForMessageRouter"
				}
			},
			"title": "DoctorMessageAndDoctorInClinicForMessageRouter"
		},
		"DoctorMessageDto": {
			"type": "object",
			"properties": {
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorMessagePatientDetailsDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorMessagePatientDetailsDto"
					}
				},
				"isEdited": {
					"type": "boolean"
				},
				"isMessageApproved": {
					"type": "boolean"
				},
				"message": {
					"type": "string"
				},
				"messageId": {
					"type": "integer",
					"format": "int64"
				},
				"messageSentAll": {
					"type": "boolean"
				},
				"smsUnit": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorMessageDto"
		},
		"DoctorMessageImageUploadUrlDto": {
			"type": "object",
			"properties": {
				"proxyUrl": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			},
			"title": "DoctorMessageImageUploadUrlDto"
		},
		"DoctorMessagePatientDetailsDto": {
			"type": "object",
			"properties": {
				"dmDicId": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorMessagePatientDetailsDto"
		},
		"DoctorMessagesWoDoctorMessageAndDic": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"message": {
					"type": "string"
				},
				"userIdApprovedBy": {
					"type": "integer",
					"format": "int64"
				},
				"userIdCreatedBy": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorMessagesWoDoctorMessageAndDic"
		},
		"DoctorPatientList": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorName": {
					"type": "string"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditions"
					}
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnoses"
					}
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "DoctorPatientList"
		},
		"DoctorPatientPhoneDto": {
			"type": "object",
			"properties": {
				"doctorName": {
					"type": "string"
				},
				"doctorPhone": {
					"type": "string"
				},
				"patientName": {
					"type": "string"
				},
				"patientPhone": {
					"type": "string"
				}
			},
			"title": "DoctorPatientPhoneDto"
		},
		"DoctorRatings": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "DoctorRatings"
		},
		"DoctorReviewRequestDto": {
			"type": "object",
			"properties": {
				"adviceTagId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"note": {
					"type": "string"
				}
			},
			"title": "DoctorReviewRequestDto"
		},
		"DoctorTagBodyDto": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"doctorId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorTagTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"title": {
					"type": "string"
				}
			},
			"title": "DoctorTagBodyDto"
		},
		"DoctorTagType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTags"
					}
				},
				"type": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorTagType"
		},
		"DoctorTags": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"description": {
					"type": "string"
				},
				"doctor": {
					"$ref": "#/definitions/Doctor"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"tagType": {
					"$ref": "#/definitions/DoctorTagType"
				},
				"title": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorTags"
		},
		"DoctorTagsAndTypesDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"selectedTags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTagsSelectedDto"
					}
				},
				"type": {
					"type": "string"
				}
			},
			"title": "DoctorTagsAndTypesDto"
		},
		"DoctorTagsDto": {
			"type": "object",
			"properties": {
				"doctorTagBody": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTagBodyDto"
					}
				},
				"idsForDelete": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"title": "DoctorTagsDto"
		},
		"DoctorTagsSelectedDto": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"tagTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"title": {
					"type": "string"
				}
			},
			"title": "DoctorTagsSelectedDto"
		},
		"DoctorTiming": {
			"type": "object",
			"properties": {
				"day": {
					"type": "string"
				},
				"doctorTimingInterval": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTimingInterval"
					}
				}
			},
			"title": "DoctorTiming"
		},
		"DoctorTimingInterval": {
			"type": "object",
			"properties": {
				"endTime": {
					"$ref": "#/definitions/Time"
				},
				"interval": {
					"type": "string"
				},
				"startTime": {
					"$ref": "#/definitions/Time"
				}
			},
			"title": "DoctorTimingInterval"
		},
		"Doctors": {
			"type": "object",
			"properties": {
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "float"
				},
				"registrationNumber": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Specialities"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Doctors"
		},
		"DoctorsForConsultation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DoctorsForConsultation"
		},
		"DoctorsForEPrescription": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "DoctorsForEPrescription"
		},
		"DoctorsForHomepage": {
			"type": "object",
			"properties": {
				"bannerUrl": {
					"type": "string"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicsForHomepage"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				}
			},
			"title": "DoctorsForHomepage"
		},
		"DoctorsForMessageRouter": {
			"type": "object",
			"properties": {
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "float"
				},
				"registrationNumber": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorsForMessageRouter"
		},
		"DoctorsForWeb": {
			"type": "object",
			"properties": {
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTest": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForPatientApp"
					}
				}
			},
			"title": "DoctorsForWeb"
		},
		"DoctorsWoDoctorInClinic": {
			"type": "object",
			"properties": {
				"aboutDoctor": {
					"type": "string"
				},
				"affiliation": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"popularity": {
					"type": "number",
					"format": "float"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "float"
				},
				"registrationNumber": {
					"type": "string"
				},
				"service": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DoctorsWoDoctorInClinic"
		},
		"Dosage": {
			"type": "object",
			"properties": {
				"medicineName": {
					"type": "string"
				},
				"prescriptionByDateId": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "number",
					"format": "double"
				},
				"quantityKey": {
					"type": "string"
				},
				"specialInstruction": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				}
			},
			"title": "Dosage"
		},
		"DtilBulkUploadDto": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"diagnosticLabId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"dtilId": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isAddressMandatory": {
					"type": "boolean"
				},
				"isPickup": {
					"type": "boolean"
				},
				"margin": {
					"type": "string"
				},
				"onPremise": {
					"type": "boolean"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"processingTime": {
					"type": "string"
				},
				"procurementPrice": {
					"type": "number",
					"format": "float"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"tat": {
					"type": "string"
				},
				"taxId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "DtilBulkUploadDto"
		},
		"ESAdvice": {
			"type": "object",
			"properties": {
				"advice": {
					"$ref": "#/definitions/AdviceForRecommendation"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "ESAdvice"
		},
		"ESDiagnosisType": {
			"type": "object",
			"properties": {
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisTypeForRecommendation"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "ESDiagnosisType"
		},
		"ESDiagnosticType": {
			"type": "object",
			"properties": {
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypeForRecommendation"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "ESDiagnosticType"
		},
		"ESMedicine": {
			"type": "object",
			"properties": {
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineForRecommendation"
				},
				"medicineInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "ESMedicine"
		},
		"ESProcedureType": {
			"type": "object",
			"properties": {
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"procedureType": {
					"$ref": "#/definitions/ProcedureTypeForRecommendation"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "ESProcedureType"
		},
		"ESSymptomType": {
			"type": "object",
			"properties": {
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomType": {
					"$ref": "#/definitions/SymptomTypeForRecommendation"
				}
			},
			"title": "ESSymptomType"
		},
		"EmbeddedCollection«Address»": {
			"type": "object",
			"required": [
				"addresses"
			],
			"properties": {
				"addresses": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Address"
					}
				}
			},
			"title": "EmbeddedCollection«Address»",
			"description": "Embedded collection of Address"
		},
		"EmbeddedCollection«Advice»": {
			"type": "object",
			"required": [
				"advices"
			],
			"properties": {
				"advices": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Advice"
					}
				}
			},
			"title": "EmbeddedCollection«Advice»",
			"description": "Embedded collection of Advice"
		},
		"EmbeddedCollection«AfterOrderPaidStatus»": {
			"type": "object",
			"required": [
				"afterOrderPaidStatus"
			],
			"properties": {
				"afterOrderPaidStatus": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/AfterOrderPaidStatus"
					}
				}
			},
			"title": "EmbeddedCollection«AfterOrderPaidStatus»",
			"description": "Embedded collection of AfterOrderPaidStatus",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«AllergyType»": {
			"type": "object",
			"required": [
				"allergiesType"
			],
			"properties": {
				"allergiesType": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/AllergyType"
					}
				}
			},
			"title": "EmbeddedCollection«AllergyType»",
			"description": "Embedded collection of AllergyType"
		},
		"EmbeddedCollection«Allergy»": {
			"type": "object",
			"required": [
				"allergies"
			],
			"properties": {
				"allergies": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Allergy"
					}
				}
			},
			"title": "EmbeddedCollection«Allergy»",
			"description": "Embedded collection of Allergy"
		},
		"EmbeddedCollection«AppVersionInfo»": {
			"type": "object",
			"required": [
				"appversioninfos"
			],
			"properties": {
				"appversioninfos": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/AppVersionInfo"
					}
				}
			},
			"title": "EmbeddedCollection«AppVersionInfo»",
			"description": "Embedded collection of AppVersionInfo",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«AppointmentSummary»": {
			"type": "object",
			"required": [
				"appointmentSummaries"
			],
			"properties": {
				"appointmentSummaries": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/AppointmentSummary"
					}
				}
			},
			"title": "EmbeddedCollection«AppointmentSummary»",
			"description": "Embedded collection of AppointmentSummary",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Area»": {
			"type": "object",
			"required": [
				"areas"
			],
			"properties": {
				"areas": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Area"
					}
				}
			},
			"title": "EmbeddedCollection«Area»",
			"description": "Embedded collection of Area"
		},
		"EmbeddedCollection«Batch»": {
			"type": "object",
			"required": [
				"batches"
			],
			"properties": {
				"batches": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Batch"
					}
				}
			},
			"title": "EmbeddedCollection«Batch»",
			"description": "Embedded collection of Batch"
		},
		"EmbeddedCollection«Brand»": {
			"type": "object",
			"required": [
				"brands"
			],
			"properties": {
				"brands": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Brand"
					}
				}
			},
			"title": "EmbeddedCollection«Brand»",
			"description": "Embedded collection of Brand"
		},
		"EmbeddedCollection«CentreCode»": {
			"type": "object",
			"required": [
				"centrecodes"
			],
			"properties": {
				"centrecodes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/CentreCode"
					}
				}
			},
			"title": "EmbeddedCollection«CentreCode»",
			"description": "Embedded collection of CentreCode",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«City»": {
			"type": "object",
			"required": [
				"cities"
			],
			"properties": {
				"cities": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/City"
					}
				}
			},
			"title": "EmbeddedCollection«City»",
			"description": "Embedded collection of City"
		},
		"EmbeddedCollection«ClinicConsumable»": {
			"type": "object",
			"required": [
				"clinicconsumableRepository"
			],
			"properties": {
				"clinicconsumableRepository": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ClinicConsumable"
					}
				}
			},
			"title": "EmbeddedCollection«ClinicConsumable»",
			"description": "Embedded collection of ClinicConsumable"
		},
		"EmbeddedCollection«ClinicDiagnosticTypeConfiguration»": {
			"type": "object",
			"required": [
				"clinicdiagnostictypeconfigurations"
			],
			"properties": {
				"clinicdiagnostictypeconfigurations": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ClinicDiagnosticTypeConfiguration"
					}
				}
			},
			"title": "EmbeddedCollection«ClinicDiagnosticTypeConfiguration»",
			"description": "Embedded collection of ClinicDiagnosticTypeConfiguration",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ClinicForAdminDashboard»": {
			"type": "object",
			"required": [
				"clinicForAdminDashboards"
			],
			"properties": {
				"clinicForAdminDashboards": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ClinicForAdminDashboard"
					}
				}
			},
			"title": "EmbeddedCollection«ClinicForAdminDashboard»",
			"description": "Embedded collection of ClinicForAdminDashboard",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ClinicsForAssistantDashboard»": {
			"type": "object",
			"required": [
				"clinicsForAssistantDashboards"
			],
			"properties": {
				"clinicsForAssistantDashboards": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ClinicsForAssistantDashboard"
					}
				}
			},
			"title": "EmbeddedCollection«ClinicsForAssistantDashboard»",
			"description": "Embedded collection of ClinicsForAssistantDashboard",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Clinics»": {
			"type": "object",
			"required": [
				"clinicses"
			],
			"properties": {
				"clinicses": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Clinics"
					}
				}
			},
			"title": "EmbeddedCollection«Clinics»",
			"description": "Embedded collection of Clinics",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Clinic»": {
			"type": "object",
			"required": [
				"clinics"
			],
			"properties": {
				"clinics": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Clinic"
					}
				}
			},
			"title": "EmbeddedCollection«Clinic»",
			"description": "Embedded collection of Clinic"
		},
		"EmbeddedCollection«ClosedTimeSlot»": {
			"type": "object",
			"required": [
				"closedtimeslots"
			],
			"properties": {
				"closedtimeslots": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ClosedTimeSlot"
					}
				}
			},
			"title": "EmbeddedCollection«ClosedTimeSlot»",
			"description": "Embedded collection of ClosedTimeSlot",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ClusterAndDiagnosticLab»": {
			"type": "object",
			"required": [
				"clusters"
			],
			"properties": {
				"clusters": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ClusterAndDiagnosticLab"
					}
				}
			},
			"title": "EmbeddedCollection«ClusterAndDiagnosticLab»",
			"description": "Embedded collection of ClusterAndDiagnosticLab",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«CommentOnDocument»": {
			"type": "object",
			"required": [
				"commentOnDocuments"
			],
			"properties": {
				"commentOnDocuments": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/CommentOnDocument"
					}
				}
			},
			"title": "EmbeddedCollection«CommentOnDocument»",
			"description": "Embedded collection of CommentOnDocument"
		},
		"EmbeddedCollection«Comment»": {
			"type": "object",
			"required": [
				"comments"
			],
			"properties": {
				"comments": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Comment"
					}
				}
			},
			"title": "EmbeddedCollection«Comment»",
			"description": "Embedded collection of Comment"
		},
		"EmbeddedCollection«ConsultationAndDoxper»": {
			"type": "object",
			"required": [
				"consultationAndDoxper"
			],
			"properties": {
				"consultationAndDoxper": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxper"
					}
				}
			},
			"title": "EmbeddedCollection«ConsultationAndDoxper»",
			"description": "Embedded collection of ConsultationAndDoxper"
		},
		"EmbeddedCollection«ConsultationForPatientSearch»": {
			"type": "object",
			"required": [
				"consultationForPatientSearches"
			],
			"properties": {
				"consultationForPatientSearches": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ConsultationForPatientSearch"
					}
				}
			},
			"title": "EmbeddedCollection«ConsultationForPatientSearch»",
			"description": "Embedded collection of ConsultationForPatientSearch",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ConsultationForPrescriptionByDate»": {
			"type": "object",
			"required": [
				"consultationForPrescriptionByDates"
			],
			"properties": {
				"consultationForPrescriptionByDates": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ConsultationForPrescriptionByDate"
					}
				}
			},
			"title": "EmbeddedCollection«ConsultationForPrescriptionByDate»",
			"description": "Embedded collection of ConsultationForPrescriptionByDate",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ConsultationHistory»": {
			"type": "object",
			"required": [
				"consultationHistory"
			],
			"properties": {
				"consultationHistory": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ConsultationHistory"
					}
				}
			},
			"title": "EmbeddedCollection«ConsultationHistory»",
			"description": "Embedded collection of ConsultationHistory"
		},
		"EmbeddedCollection«ConsultationReason»": {
			"type": "object",
			"required": [
				"consultationreasons"
			],
			"properties": {
				"consultationreasons": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ConsultationReason"
					}
				}
			},
			"title": "EmbeddedCollection«ConsultationReason»",
			"description": "Embedded collection of ConsultationReason",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Consultation»": {
			"type": "object",
			"required": [
				"consultations"
			],
			"properties": {
				"consultations": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Consultation"
					}
				}
			},
			"title": "EmbeddedCollection«Consultation»",
			"description": "Embedded collection of Consultation",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Consumable»": {
			"type": "object",
			"required": [
				"consumables"
			],
			"properties": {
				"consumables": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Consumable"
					}
				}
			},
			"title": "EmbeddedCollection«Consumable»",
			"description": "Embedded collection of Consumable"
		},
		"EmbeddedCollection«Coverage»": {
			"type": "object",
			"required": [
				"coverages"
			],
			"properties": {
				"coverages": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Coverage"
					}
				}
			},
			"title": "EmbeddedCollection«Coverage»",
			"description": "Embedded collection of Coverage",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DateWiseAppointment»": {
			"type": "object",
			"required": [
				"dateWiseAppointments"
			],
			"properties": {
				"dateWiseAppointments": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DateWiseAppointment"
					}
				}
			},
			"title": "EmbeddedCollection«DateWiseAppointment»",
			"description": "Embedded collection of DateWiseAppointment",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DeclineReason»": {
			"type": "object",
			"required": [
				"declinereasons"
			],
			"properties": {
				"declinereasons": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DeclineReason"
					}
				}
			},
			"title": "EmbeddedCollection«DeclineReason»",
			"description": "Embedded collection of DeclineReason"
		},
		"EmbeddedCollection«Department»": {
			"type": "object",
			"required": [
				"departments"
			],
			"properties": {
				"departments": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Department"
					}
				}
			},
			"title": "EmbeddedCollection«Department»",
			"description": "Embedded collection of Department",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DiagnosisTypes»": {
			"type": "object",
			"required": [
				"diagnosisTypeses"
			],
			"properties": {
				"diagnosisTypeses": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosisTypes"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosisTypes»",
			"description": "Embedded collection of DiagnosisTypes",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DiagnosisType»": {
			"type": "object",
			"required": [
				"diagnosistypes"
			],
			"properties": {
				"diagnosistypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosisType"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosisType»",
			"description": "Embedded collection of DiagnosisType"
		},
		"EmbeddedCollection«Diagnosis»": {
			"type": "object",
			"required": [
				"diagnosis"
			],
			"properties": {
				"diagnosis": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Diagnosis"
					}
				}
			},
			"title": "EmbeddedCollection«Diagnosis»",
			"description": "Embedded collection of Diagnosis"
		},
		"EmbeddedCollection«DiagnosticAndPatientHistory»": {
			"type": "object",
			"required": [
				"diagnosticAndPatientHistories"
			],
			"properties": {
				"diagnosticAndPatientHistories": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticAndPatientHistory"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticAndPatientHistory»",
			"description": "Embedded collection of DiagnosticAndPatientHistory"
		},
		"EmbeddedCollection«DiagnosticLabsAndZipcode»": {
			"type": "object",
			"required": [
				"diagnosticLabsAndZipcode"
			],
			"properties": {
				"diagnosticLabsAndZipcode": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticLabsAndZipcode"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticLabsAndZipcode»",
			"description": "Embedded collection of DiagnosticLabsAndZipcode"
		},
		"EmbeddedCollection«DiagnosticLab»": {
			"type": "object",
			"required": [
				"diagnosticlabs"
			],
			"properties": {
				"diagnosticlabs": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticLab"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticLab»",
			"description": "Embedded collection of DiagnosticLab"
		},
		"EmbeddedCollection«DiagnosticReportValue»": {
			"type": "object",
			"required": [
				"diagnosticReportValue"
			],
			"properties": {
				"diagnosticReportValue": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticReportValue"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticReportValue»",
			"description": "Embedded collection of DiagnosticReportValue"
		},
		"EmbeddedCollection«DiagnosticStatusFlow»": {
			"type": "object",
			"required": [
				"diagnosticStatusFlows"
			],
			"properties": {
				"diagnosticStatusFlows": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticStatusFlow"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticStatusFlow»",
			"description": "Embedded collection of DiagnosticStatusFlow"
		},
		"EmbeddedCollection«DiagnosticTypeConsumable»": {
			"type": "object",
			"required": [
				"diagnosticTypeConsumableRepository"
			],
			"properties": {
				"diagnosticTypeConsumableRepository": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeConsumable"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticTypeConsumable»",
			"description": "Embedded collection of DiagnosticTypeConsumable"
		},
		"EmbeddedCollection«DiagnosticTypeInLab»": {
			"type": "object",
			"required": [
				"diagonstictypeinlab"
			],
			"properties": {
				"diagonstictypeinlab": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeInLab"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticTypeInLab»",
			"description": "Embedded collection of DiagnosticTypeInLab"
		},
		"EmbeddedCollection«DiagnosticTypeItem»": {
			"type": "object",
			"required": [
				"diagnostictypeitems"
			],
			"properties": {
				"diagnostictypeitems": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeItem"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticTypeItem»",
			"description": "Embedded collection of DiagnosticTypeItem",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DiagnosticTypePrecaution»": {
			"type": "object",
			"required": [
				"diagnostictypeprecautions"
			],
			"properties": {
				"diagnostictypeprecautions": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticTypePrecaution"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticTypePrecaution»",
			"description": "Embedded collection of DiagnosticTypePrecaution"
		},
		"EmbeddedCollection«DiagnosticTypeResult»": {
			"type": "object",
			"required": [
				"diagnostictyperesults"
			],
			"properties": {
				"diagnostictyperesults": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeResult"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticTypeResult»",
			"description": "Embedded collection of DiagnosticTypeResult",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DiagnosticTypeSpecimenType»": {
			"type": "object",
			"required": [
				"diagnostictypespecimentypes"
			],
			"properties": {
				"diagnostictypespecimentypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeSpecimenType"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticTypeSpecimenType»",
			"description": "Embedded collection of DiagnosticTypeSpecimenType"
		},
		"EmbeddedCollection«DiagnosticTypeStructure»": {
			"type": "object",
			"required": [
				"diagnostictypestructures"
			],
			"properties": {
				"diagnostictypestructures": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeStructure"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticTypeStructure»",
			"description": "Embedded collection of DiagnosticTypeStructure",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DiagnosticTypesForTranscription»": {
			"type": "object",
			"required": [
				"diagnosticTypesForTranscriptions"
			],
			"properties": {
				"diagnosticTypesForTranscriptions": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForTranscription"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticTypesForTranscription»",
			"description": "Embedded collection of DiagnosticTypesForTranscription",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DiagnosticType»": {
			"type": "object",
			"required": [
				"diagnostictypes"
			],
			"properties": {
				"diagnostictypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DiagnosticType"
					}
				}
			},
			"title": "EmbeddedCollection«DiagnosticType»",
			"description": "Embedded collection of DiagnosticType"
		},
		"EmbeddedCollection«Diagnostic»": {
			"type": "object",
			"required": [
				"diagnostics"
			],
			"properties": {
				"diagnostics": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				}
			},
			"title": "EmbeddedCollection«Diagnostic»",
			"description": "Embedded collection of Diagnostic"
		},
		"EmbeddedCollection«DoctorAdviceTag»": {
			"type": "object",
			"required": [
				"doctoradvicetags"
			],
			"properties": {
				"doctoradvicetags": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorAdviceTag"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorAdviceTag»",
			"description": "Embedded collection of DoctorAdviceTag"
		},
		"EmbeddedCollection«DoctorInClinicClosedTimeSlot»": {
			"type": "object",
			"required": [
				"doctorinclinicclosedtimeslots"
			],
			"properties": {
				"doctorinclinicclosedtimeslots": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorInClinicClosedTimeSlot"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorInClinicClosedTimeSlot»",
			"description": "Embedded collection of DoctorInClinicClosedTimeSlot",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DoctorInClinicConfiguration»": {
			"type": "object",
			"required": [
				"doctorinclinicconfigurations"
			],
			"properties": {
				"doctorinclinicconfigurations": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorInClinicConfiguration"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorInClinicConfiguration»",
			"description": "Embedded collection of DoctorInClinicConfiguration"
		},
		"EmbeddedCollection«DoctorInClinicForAssistantDashboard»": {
			"type": "object",
			"required": [
				"doctorInClinicForAssistantDashboards"
			],
			"properties": {
				"doctorInClinicForAssistantDashboards": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorInClinicForAssistantDashboard"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorInClinicForAssistantDashboard»",
			"description": "Embedded collection of DoctorInClinicForAssistantDashboard",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DoctorInClinicsWoConsultation»": {
			"type": "object",
			"required": [
				"doctorInClinicsWoConsultations"
			],
			"properties": {
				"doctorInClinicsWoConsultations": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorInClinicsWoConsultation"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorInClinicsWoConsultation»",
			"description": "Embedded collection of DoctorInClinicsWoConsultation",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DoctorInClinics»": {
			"type": "object",
			"required": [
				"doctorInClinicses"
			],
			"properties": {
				"doctorInClinicses": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorInClinics"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorInClinics»",
			"description": "Embedded collection of DoctorInClinics",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DoctorInClinic»": {
			"type": "object",
			"required": [
				"doctorsinclinic"
			],
			"properties": {
				"doctorsinclinic": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorInClinic"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorInClinic»",
			"description": "Embedded collection of DoctorInClinic"
		},
		"EmbeddedCollection«DoctorInformation»": {
			"type": "object",
			"required": [
				"doctorInformations"
			],
			"properties": {
				"doctorInformations": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorInformation"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorInformation»",
			"description": "Embedded collection of DoctorInformation",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DoctorMessageAndDoctorInClinicForMessageRouter»": {
			"type": "object",
			"required": [
				"doctorMessageAndDoctorInClinicForMessageRouters"
			],
			"properties": {
				"doctorMessageAndDoctorInClinicForMessageRouters": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorMessageAndDoctorInClinicForMessageRouter"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorMessageAndDoctorInClinicForMessageRouter»",
			"description": "Embedded collection of DoctorMessageAndDoctorInClinicForMessageRouter",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DoctorMessageAndDoctorInClinic»": {
			"type": "object",
			"required": [
				"doctormessageanddoctorinclinics"
			],
			"properties": {
				"doctormessageanddoctorinclinics": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorMessageAndDoctorInClinic"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorMessageAndDoctorInClinic»",
			"description": "Embedded collection of DoctorMessageAndDoctorInClinic"
		},
		"EmbeddedCollection«DoctorMessage»": {
			"type": "object",
			"required": [
				"doctormessages"
			],
			"properties": {
				"doctormessages": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorMessage"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorMessage»",
			"description": "Embedded collection of DoctorMessage",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DoctorPatientList»": {
			"type": "object",
			"required": [
				"doctorPatientLists"
			],
			"properties": {
				"doctorPatientLists": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorPatientList"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorPatientList»",
			"description": "Embedded collection of DoctorPatientList"
		},
		"EmbeddedCollection«DoctorTagType»": {
			"type": "object",
			"required": [
				"doctorTagTypes"
			],
			"properties": {
				"doctorTagTypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorTagType"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorTagType»",
			"description": "Embedded collection of DoctorTagType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«DoctorTags»": {
			"type": "object",
			"required": [
				"doctorTags"
			],
			"properties": {
				"doctorTags": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/DoctorTags"
					}
				}
			},
			"title": "EmbeddedCollection«DoctorTags»",
			"description": "Embedded collection of DoctorTags",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Doctor»": {
			"type": "object",
			"required": [
				"doctors"
			],
			"properties": {
				"doctors": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Doctor"
					}
				}
			},
			"title": "EmbeddedCollection«Doctor»",
			"description": "Embedded collection of Doctor"
		},
		"EmbeddedCollection«ESAdvice»": {
			"type": "object",
			"required": [
				"advices"
			],
			"properties": {
				"advices": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ESAdvice"
					}
				}
			},
			"title": "EmbeddedCollection«ESAdvice»",
			"description": "Embedded collection of ESAdvice",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ESDiagnosisType»": {
			"type": "object",
			"required": [
				"diagnosisTypes"
			],
			"properties": {
				"diagnosisTypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ESDiagnosisType"
					}
				}
			},
			"title": "EmbeddedCollection«ESDiagnosisType»",
			"description": "Embedded collection of ESDiagnosisType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ESDiagnosticType»": {
			"type": "object",
			"required": [
				"diagnosticTypes"
			],
			"properties": {
				"diagnosticTypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ESDiagnosticType"
					}
				}
			},
			"title": "EmbeddedCollection«ESDiagnosticType»",
			"description": "Embedded collection of ESDiagnosticType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ESMedicine»": {
			"type": "object",
			"required": [
				"medicines"
			],
			"properties": {
				"medicines": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ESMedicine"
					}
				}
			},
			"title": "EmbeddedCollection«ESMedicine»",
			"description": "Embedded collection of ESMedicine",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ESProcedureType»": {
			"type": "object",
			"required": [
				"procedureTypes"
			],
			"properties": {
				"procedureTypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ESProcedureType"
					}
				}
			},
			"title": "EmbeddedCollection«ESProcedureType»",
			"description": "Embedded collection of ESProcedureType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ESSymptomType»": {
			"type": "object",
			"required": [
				"symptomTypes"
			],
			"properties": {
				"symptomTypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ESSymptomType"
					}
				}
			},
			"title": "EmbeddedCollection«ESSymptomType»",
			"description": "Embedded collection of ESSymptomType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«ExistingConditionType»": {
			"type": "object",
			"required": [
				"existingConditionType"
			],
			"properties": {
				"existingConditionType": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ExistingConditionType"
					}
				}
			},
			"title": "EmbeddedCollection«ExistingConditionType»",
			"description": "Embedded collection of ExistingConditionType"
		},
		"EmbeddedCollection«ExistingCondition»": {
			"type": "object",
			"required": [
				"existingCondition"
			],
			"properties": {
				"existingCondition": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ExistingCondition"
					}
				}
			},
			"title": "EmbeddedCollection«ExistingCondition»",
			"description": "Embedded collection of ExistingCondition"
		},
		"EmbeddedCollection«Family»": {
			"type": "object",
			"required": [
				"families"
			],
			"properties": {
				"families": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Family"
					}
				}
			},
			"title": "EmbeddedCollection«Family»",
			"description": "Embedded collection of Family",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«FeedbackParameter»": {
			"type": "object",
			"required": [
				"feedbackparameters"
			],
			"properties": {
				"feedbackparameters": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/FeedbackParameter"
					}
				}
			},
			"title": "EmbeddedCollection«FeedbackParameter»",
			"description": "Embedded collection of FeedbackParameter"
		},
		"EmbeddedCollection«Feedback»": {
			"type": "object",
			"required": [
				"feedbacks"
			],
			"properties": {
				"feedbacks": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Feedback"
					}
				}
			},
			"title": "EmbeddedCollection«Feedback»",
			"description": "Embedded collection of Feedback",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«FinancialIncome»": {
			"type": "object",
			"required": [
				"financialIncomes"
			],
			"properties": {
				"financialIncomes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/FinancialIncome"
					}
				}
			},
			"title": "EmbeddedCollection«FinancialIncome»",
			"description": "Embedded collection of FinancialIncome",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«FollowUpsForToday»": {
			"type": "object",
			"required": [
				"followUpsForTodays"
			],
			"properties": {
				"followUpsForTodays": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/FollowUpsForToday"
					}
				}
			},
			"title": "EmbeddedCollection«FollowUpsForToday»",
			"description": "Embedded collection of FollowUpsForToday",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Followup»": {
			"type": "object",
			"required": [
				"followups"
			],
			"properties": {
				"followups": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Followup"
					}
				}
			},
			"title": "EmbeddedCollection«Followup»",
			"description": "Embedded collection of Followup"
		},
		"EmbeddedCollection«HealthProblemTagsForDoctor»": {
			"type": "object",
			"required": [
				"healthProblemTagsForDoctor"
			],
			"properties": {
				"healthProblemTagsForDoctor": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/HealthProblemTagsForDoctor"
					}
				}
			},
			"title": "EmbeddedCollection«HealthProblemTagsForDoctor»",
			"description": "Embedded collection of HealthProblemTagsForDoctor"
		},
		"EmbeddedCollection«HealthProblemTagsForSpeciality»": {
			"type": "object",
			"required": [
				"healthProblemTagsForSpeciality"
			],
			"properties": {
				"healthProblemTagsForSpeciality": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/HealthProblemTagsForSpeciality"
					}
				}
			},
			"title": "EmbeddedCollection«HealthProblemTagsForSpeciality»",
			"description": "Embedded collection of HealthProblemTagsForSpeciality"
		},
		"EmbeddedCollection«Issue»": {
			"type": "object",
			"required": [
				"issues"
			],
			"properties": {
				"issues": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Issue"
					}
				}
			},
			"title": "EmbeddedCollection«Issue»",
			"description": "Embedded collection of Issue"
		},
		"EmbeddedCollection«Manufacturer»": {
			"type": "object",
			"required": [
				"manufacturers"
			],
			"properties": {
				"manufacturers": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Manufacturer"
					}
				}
			},
			"title": "EmbeddedCollection«Manufacturer»",
			"description": "Embedded collection of Manufacturer",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«MedicalProcedure»": {
			"type": "object",
			"required": [
				"procedures"
			],
			"properties": {
				"procedures": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/MedicalProcedure"
					}
				}
			},
			"title": "EmbeddedCollection«MedicalProcedure»",
			"description": "Embedded collection of MedicalProcedure"
		},
		"EmbeddedCollection«MedicationDate»": {
			"type": "object",
			"required": [
				"MedicationDates"
			],
			"properties": {
				"MedicationDates": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/MedicationDate"
					}
				}
			},
			"title": "EmbeddedCollection«MedicationDate»",
			"description": "Embedded collection of MedicationDate"
		},
		"EmbeddedCollection«MedicineForTranscription»": {
			"type": "object",
			"required": [
				"medicineForTranscriptions"
			],
			"properties": {
				"medicineForTranscriptions": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/MedicineForTranscription"
					}
				}
			},
			"title": "EmbeddedCollection«MedicineForTranscription»",
			"description": "Embedded collection of MedicineForTranscription",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«MedicineGeneral»": {
			"type": "object",
			"required": [
				"medicine-generals"
			],
			"properties": {
				"medicine-generals": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/MedicineGeneral"
					}
				}
			},
			"title": "EmbeddedCollection«MedicineGeneral»",
			"description": "Embedded collection of MedicineGeneral"
		},
		"EmbeddedCollection«MedicineInClinic»": {
			"type": "object",
			"required": [
				"medicineinclinics"
			],
			"properties": {
				"medicineinclinics": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/MedicineInClinic"
					}
				}
			},
			"title": "EmbeddedCollection«MedicineInClinic»",
			"description": "Embedded collection of MedicineInClinic"
		},
		"EmbeddedCollection«MedicineInventory»": {
			"type": "object",
			"required": [
				"medicineinventories"
			],
			"properties": {
				"medicineinventories": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/MedicineInventory"
					}
				}
			},
			"title": "EmbeddedCollection«MedicineInventory»",
			"description": "Embedded collection of MedicineInventory"
		},
		"EmbeddedCollection«MedicineSalt»": {
			"type": "object",
			"required": [
				"medicine-salts"
			],
			"properties": {
				"medicine-salts": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/MedicineSalt"
					}
				}
			},
			"title": "EmbeddedCollection«MedicineSalt»",
			"description": "Embedded collection of MedicineSalt"
		},
		"EmbeddedCollection«MedicineSearchInTranscription»": {
			"type": "object",
			"required": [
				"medicineSearchInTranscriptions"
			],
			"properties": {
				"medicineSearchInTranscriptions": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/MedicineSearchInTranscription"
					}
				}
			},
			"title": "EmbeddedCollection«MedicineSearchInTranscription»",
			"description": "Embedded collection of MedicineSearchInTranscription",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Medicine»": {
			"type": "object",
			"required": [
				"medicines"
			],
			"properties": {
				"medicines": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Medicine"
					}
				}
			},
			"title": "EmbeddedCollection«Medicine»",
			"description": "Embedded collection of Medicine"
		},
		"EmbeddedCollection«NetPromoterScore»": {
			"type": "object",
			"required": [
				"netpromoterscore"
			],
			"properties": {
				"netpromoterscore": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/NetPromoterScore"
					}
				}
			},
			"title": "EmbeddedCollection«NetPromoterScore»",
			"description": "Embedded collection of NetPromoterScore",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«NewVsReturningPatient»": {
			"type": "object",
			"required": [
				"newVsReturningPatients"
			],
			"properties": {
				"newVsReturningPatients": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/NewVsReturningPatient"
					}
				}
			},
			"title": "EmbeddedCollection«NewVsReturningPatient»",
			"description": "Embedded collection of NewVsReturningPatient",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PatientForNameSearch»": {
			"type": "object",
			"required": [
				"patientForNameSearches"
			],
			"properties": {
				"patientForNameSearches": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PatientForNameSearch"
					}
				}
			},
			"title": "EmbeddedCollection«PatientForNameSearch»",
			"description": "Embedded collection of PatientForNameSearch",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PatientForSearchPatient»": {
			"type": "object",
			"required": [
				"patientForSearchPatients"
			],
			"properties": {
				"patientForSearchPatients": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PatientForSearchPatient"
					}
				}
			},
			"title": "EmbeddedCollection«PatientForSearchPatient»",
			"description": "Embedded collection of PatientForSearchPatient",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PatientHistory»": {
			"type": "object",
			"required": [
				"patientHistory"
			],
			"properties": {
				"patientHistory": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PatientHistory"
					}
				}
			},
			"title": "EmbeddedCollection«PatientHistory»",
			"description": "Embedded collection of PatientHistory",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PatientInQueue»": {
			"type": "object",
			"required": [
				"patientInQueues"
			],
			"properties": {
				"patientInQueues": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PatientInQueue"
					}
				}
			},
			"title": "EmbeddedCollection«PatientInQueue»",
			"description": "Embedded collection of PatientInQueue",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PatientListDetail»": {
			"type": "object",
			"required": [
				"patientListDetails"
			],
			"properties": {
				"patientListDetails": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PatientListDetail"
					}
				}
			},
			"title": "EmbeddedCollection«PatientListDetail»",
			"description": "Embedded collection of PatientListDetail",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PatientPreviousDocument»": {
			"type": "object",
			"required": [
				"patientPreviousDocument"
			],
			"properties": {
				"patientPreviousDocument": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PatientPreviousDocument"
					}
				}
			},
			"title": "EmbeddedCollection«PatientPreviousDocument»",
			"description": "Embedded collection of PatientPreviousDocument",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PatientSymptom»": {
			"type": "object",
			"required": [
				"patientSymptoms"
			],
			"properties": {
				"patientSymptoms": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PatientSymptom"
					}
				}
			},
			"title": "EmbeddedCollection«PatientSymptom»",
			"description": "Embedded collection of PatientSymptom",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Patient»": {
			"type": "object",
			"required": [
				"patients"
			],
			"properties": {
				"patients": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Patient"
					}
				}
			},
			"title": "EmbeddedCollection«Patient»",
			"description": "Embedded collection of Patient"
		},
		"EmbeddedCollection«Precaution»": {
			"type": "object",
			"required": [
				"precautions"
			],
			"properties": {
				"precautions": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Precaution"
					}
				}
			},
			"title": "EmbeddedCollection«Precaution»",
			"description": "Embedded collection of Precaution",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PrescriptionByDateAndPatient»": {
			"type": "object",
			"required": [
				"prescriptionByDateAndPatients"
			],
			"properties": {
				"prescriptionByDateAndPatients": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PrescriptionByDateAndPatient"
					}
				}
			},
			"title": "EmbeddedCollection«PrescriptionByDateAndPatient»",
			"description": "Embedded collection of PrescriptionByDateAndPatient",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«PrescriptionByDate»": {
			"type": "object",
			"required": [
				"prescriptionByDates"
			],
			"properties": {
				"prescriptionByDates": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				}
			},
			"title": "EmbeddedCollection«PrescriptionByDate»",
			"description": "Embedded collection of PrescriptionByDate"
		},
		"EmbeddedCollection«PrescriptionDescription»": {
			"type": "object",
			"required": [
				"prescriptionDescriptions"
			],
			"properties": {
				"prescriptionDescriptions": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/PrescriptionDescription"
					}
				}
			},
			"title": "EmbeddedCollection«PrescriptionDescription»",
			"description": "Embedded collection of PrescriptionDescription"
		},
		"EmbeddedCollection«Prescription»": {
			"type": "object",
			"required": [
				"prescriptions"
			],
			"properties": {
				"prescriptions": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				}
			},
			"title": "EmbeddedCollection«Prescription»",
			"description": "Embedded collection of Prescription"
		},
		"EmbeddedCollection«ProcedureType»": {
			"type": "object",
			"required": [
				"proceduretypes"
			],
			"properties": {
				"proceduretypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/ProcedureType"
					}
				}
			},
			"title": "EmbeddedCollection«ProcedureType»",
			"description": "Embedded collection of ProcedureType"
		},
		"EmbeddedCollection«Referral»": {
			"type": "object",
			"required": [
				"referrals"
			],
			"properties": {
				"referrals": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Referral"
					}
				}
			},
			"title": "EmbeddedCollection«Referral»",
			"description": "Embedded collection of Referral"
		},
		"EmbeddedCollection«Salt»": {
			"type": "object",
			"required": [
				"salts"
			],
			"properties": {
				"salts": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Salt"
					}
				}
			},
			"title": "EmbeddedCollection«Salt»",
			"description": "Embedded collection of Salt",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Scribble»": {
			"type": "object",
			"required": [
				"scribbles"
			],
			"properties": {
				"scribbles": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Scribble"
					}
				}
			},
			"title": "EmbeddedCollection«Scribble»",
			"description": "Embedded collection of Scribble"
		},
		"EmbeddedCollection«SecondaryMedicine»": {
			"type": "object",
			"required": [
				"secondary-medicines"
			],
			"properties": {
				"secondary-medicines": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SecondaryMedicine"
					}
				}
			},
			"title": "EmbeddedCollection«SecondaryMedicine»",
			"description": "Embedded collection of SecondaryMedicine",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Specialities»": {
			"type": "object",
			"required": [
				"specialitieses"
			],
			"properties": {
				"specialitieses": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Specialities"
					}
				}
			},
			"title": "EmbeddedCollection«Specialities»",
			"description": "Embedded collection of Specialities",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«SpecialityDiagnosisType»": {
			"type": "object",
			"required": [
				"specialitiesDiagnosisType"
			],
			"properties": {
				"specialitiesDiagnosisType": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SpecialityDiagnosisType"
					}
				}
			},
			"title": "EmbeddedCollection«SpecialityDiagnosisType»",
			"description": "Embedded collection of SpecialityDiagnosisType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«SpecialityVitalType»": {
			"type": "object",
			"required": [
				"specialitiesVitalType"
			],
			"properties": {
				"specialitiesVitalType": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SpecialityVitalType"
					}
				}
			},
			"title": "EmbeddedCollection«SpecialityVitalType»",
			"description": "Embedded collection of SpecialityVitalType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Speciality»": {
			"type": "object",
			"required": [
				"speciality"
			],
			"properties": {
				"speciality": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Speciality"
					}
				}
			},
			"title": "EmbeddedCollection«Speciality»",
			"description": "Embedded collection of Speciality"
		},
		"EmbeddedCollection«SpecimenTypeAndDiagnosticLab»": {
			"type": "object",
			"required": [
				"specimentypeanddiagnosticlabs"
			],
			"properties": {
				"specimentypeanddiagnosticlabs": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SpecimenTypeAndDiagnosticLab"
					}
				}
			},
			"title": "EmbeddedCollection«SpecimenTypeAndDiagnosticLab»",
			"description": "Embedded collection of SpecimenTypeAndDiagnosticLab"
		},
		"EmbeddedCollection«SpecimenTypeAndVendorSample»": {
			"type": "object",
			"required": [
				"SpecimenTypeAndVendorSamples"
			],
			"properties": {
				"SpecimenTypeAndVendorSamples": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SpecimenTypeAndVendorSample"
					}
				}
			},
			"title": "EmbeddedCollection«SpecimenTypeAndVendorSample»",
			"description": "Embedded collection of SpecimenTypeAndVendorSample"
		},
		"EmbeddedCollection«SpecimenType»": {
			"type": "object",
			"required": [
				"specimentypes"
			],
			"properties": {
				"specimentypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SpecimenType"
					}
				}
			},
			"title": "EmbeddedCollection«SpecimenType»",
			"description": "Embedded collection of SpecimenType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«State»": {
			"type": "object",
			"required": [
				"states"
			],
			"properties": {
				"states": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/State"
					}
				}
			},
			"title": "EmbeddedCollection«State»",
			"description": "Embedded collection of State"
		},
		"EmbeddedCollection«SummeryData»": {
			"type": "object",
			"required": [
				"summeryDatas"
			],
			"properties": {
				"summeryDatas": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SummeryData"
					}
				}
			},
			"title": "EmbeddedCollection«SummeryData»",
			"description": "Embedded collection of SummeryData",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«SymptomTypes»": {
			"type": "object",
			"required": [
				"symptomTypeses"
			],
			"properties": {
				"symptomTypeses": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SymptomTypes"
					}
				}
			},
			"title": "EmbeddedCollection«SymptomTypes»",
			"description": "Embedded collection of SymptomTypes",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«SymptomType»": {
			"type": "object",
			"required": [
				"symptomTypes"
			],
			"properties": {
				"symptomTypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/SymptomType"
					}
				}
			},
			"title": "EmbeddedCollection«SymptomType»",
			"description": "Embedded collection of SymptomType"
		},
		"EmbeddedCollection«Symptom»": {
			"type": "object",
			"required": [
				"symptoms"
			],
			"properties": {
				"symptoms": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Symptom"
					}
				}
			},
			"title": "EmbeddedCollection«Symptom»",
			"description": "Embedded collection of Symptom"
		},
		"EmbeddedCollection«TakenMedicine»": {
			"type": "object",
			"required": [
				"takenMedicines"
			],
			"properties": {
				"takenMedicines": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TakenMedicine"
					}
				}
			},
			"title": "EmbeddedCollection«TakenMedicine»",
			"description": "Embedded collection of TakenMedicine",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Taxes»": {
			"type": "object",
			"required": [
				"texes"
			],
			"properties": {
				"texes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Taxes"
					}
				}
			},
			"title": "EmbeddedCollection«Taxes»",
			"description": "Embedded collection of Taxes",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«TestParameterMaster»": {
			"type": "object",
			"required": [
				"testParameterMaster"
			],
			"properties": {
				"testParameterMaster": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TestParameterMaster"
					}
				}
			},
			"title": "EmbeddedCollection«TestParameterMaster»",
			"description": "Embedded collection of TestParameterMaster",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«TimeSlotGroup»": {
			"type": "object",
			"required": [
				"timeslotgroup"
			],
			"properties": {
				"timeslotgroup": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TimeSlotGroup"
					}
				}
			},
			"title": "EmbeddedCollection«TimeSlotGroup»",
			"description": "Embedded collection of TimeSlotGroup"
		},
		"EmbeddedCollection«TimeSlotsGrouping»": {
			"type": "object",
			"required": [
				"timeSlotsGroupings"
			],
			"properties": {
				"timeSlotsGroupings": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TimeSlotsGrouping"
					}
				}
			},
			"title": "EmbeddedCollection«TimeSlotsGrouping»",
			"description": "Embedded collection of TimeSlotsGrouping",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«TimeSlotsState»": {
			"type": "object",
			"required": [
				"timeSlotsStates"
			],
			"properties": {
				"timeSlotsStates": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TimeSlotsState"
					}
				}
			},
			"title": "EmbeddedCollection«TimeSlotsState»",
			"description": "Embedded collection of TimeSlotsState",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«TimeSlotsWBooking»": {
			"type": "object",
			"required": [
				"timeSlotsWBookings"
			],
			"properties": {
				"timeSlotsWBookings": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TimeSlotsWBooking"
					}
				}
			},
			"title": "EmbeddedCollection«TimeSlotsWBooking»",
			"description": "Embedded collection of TimeSlotsWBooking",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«TimeSlot»": {
			"type": "object",
			"required": [
				"timeslots"
			],
			"properties": {
				"timeslots": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TimeSlot"
					}
				}
			},
			"title": "EmbeddedCollection«TimeSlot»",
			"description": "Embedded collection of TimeSlot"
		},
		"EmbeddedCollection«TranscriptionIssue»": {
			"type": "object",
			"required": [
				"transcription-issues"
			],
			"properties": {
				"transcription-issues": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TranscriptionIssue"
					}
				}
			},
			"title": "EmbeddedCollection«TranscriptionIssue»",
			"description": "Embedded collection of TranscriptionIssue"
		},
		"EmbeddedCollection«TranscriptionStateFlow»": {
			"type": "object",
			"required": [
				"transcription-state-flows"
			],
			"properties": {
				"transcription-state-flows": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/TranscriptionStateFlow"
					}
				}
			},
			"title": "EmbeddedCollection«TranscriptionStateFlow»",
			"description": "Embedded collection of TranscriptionStateFlow",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Transcription»": {
			"type": "object",
			"required": [
				"transcriptions"
			],
			"properties": {
				"transcriptions": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Transcription"
					}
				}
			},
			"title": "EmbeddedCollection«Transcription»",
			"description": "Embedded collection of Transcription"
		},
		"EmbeddedCollection«VisitType»": {
			"type": "object",
			"required": [
				"visitTypes"
			],
			"properties": {
				"visitTypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/VisitType"
					}
				}
			},
			"title": "EmbeddedCollection«VisitType»",
			"description": "Embedded collection of VisitType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«VitalType»": {
			"type": "object",
			"required": [
				"vitaltypes"
			],
			"properties": {
				"vitaltypes": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/VitalType"
					}
				}
			},
			"title": "EmbeddedCollection«VitalType»",
			"description": "Embedded collection of VitalType",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«Vital»": {
			"type": "object",
			"required": [
				"vitals"
			],
			"properties": {
				"vitals": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/Vital"
					}
				}
			},
			"title": "EmbeddedCollection«Vital»",
			"description": "Embedded collection of Vital"
		},
		"EmbeddedCollection«YourPatient»": {
			"type": "object",
			"required": [
				"yourPatients"
			],
			"properties": {
				"yourPatients": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"$ref": "#/definitions/YourPatient"
					}
				}
			},
			"title": "EmbeddedCollection«YourPatient»",
			"description": "Embedded collection of YourPatient",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«long»": {
			"type": "object",
			"required": [
				"longs"
			],
			"properties": {
				"longs": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"title": "EmbeddedCollection«long»",
			"description": "Embedded collection of Long",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«object»": {
			"type": "object",
			"required": [
				"objects"
			],
			"properties": {
				"objects": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"type": "object"
					}
				}
			},
			"title": "EmbeddedCollection«object»",
			"description": "Embedded collection of Object",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"EmbeddedCollection«string»": {
			"type": "object",
			"required": [
				"strings"
			],
			"properties": {
				"strings": {
					"type": "array",
					"description": "Resource collection",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "EmbeddedCollection«string»",
			"description": "Embedded collection of String",
			"xml": {
				"name": "content",
				"wrapped": true
			}
		},
		"ExistingCondition": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"existingConditionType": {
					"$ref": "#/definitions/ExistingConditionType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ExistingCondition"
		},
		"ExistingConditionForElastic": {
			"type": "object",
			"properties": {
				"existingConditionType": {
					"$ref": "#/definitions/ExistingConditionTypeForElastic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ExistingConditionForElastic"
		},
		"ExistingConditionForQueue": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"existingConditionTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ExistingConditionForQueue"
		},
		"ExistingConditionType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingCondition"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ExistingConditionType"
		},
		"ExistingConditionTypeForElastic": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ExistingConditionTypeForElastic"
		},
		"ExistingConditionTypes": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ExistingConditionTypes"
		},
		"ExistingConditions": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"existingConditionType": {
					"$ref": "#/definitions/ExistingConditionTypes"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ExistingConditions"
		},
		"Families": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"patient": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientWoAddress"
					}
				},
				"primaryPhoneNumber": {
					"type": "string"
				}
			},
			"title": "Families"
		},
		"Family": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"patient": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Patient"
					}
				},
				"primaryPhoneNumber": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Family"
		},
		"FamilyPatientTestDto": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorName": {
					"type": "string"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"patientName": {
					"type": "string"
				},
				"report": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SearchDetails"
					}
				},
				"url": {
					"type": "string"
				}
			},
			"title": "FamilyPatientTestDto"
		},
		"FamilyTestDto": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/FamilyPatientTestDto"
					}
				},
				"subTitle": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"widgetId": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "FamilyTestDto"
		},
		"FamilyWoPatient": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"primaryPhoneNumber": {
					"type": "string"
				}
			},
			"title": "FamilyWoPatient"
		},
		"Feedback": {
			"type": "object",
			"properties": {
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"parameter": {
					"$ref": "#/definitions/FeedbackParameter"
				},
				"review": {
					"type": "string"
				}
			},
			"title": "Feedback"
		},
		"FeedbackParameter": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isNPS": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"parent": {
					"$ref": "#/definitions/FeedbackParameter"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "FeedbackParameter"
		},
		"FeedbackRequestDto": {
			"type": "object",
			"properties": {
				"dicid": {
					"type": "integer",
					"format": "int64"
				},
				"parameterids": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"review": {
					"type": "string"
				}
			},
			"title": "FeedbackRequestDto"
		},
		"FinancialIncome": {
			"type": "object",
			"properties": {
				"date": {
					"type": "string"
				},
				"income": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "FinancialIncome"
		},
		"FollowUpsForToday": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationsForFollowupsForToday"
				},
				"followupDate": {
					"type": "string",
					"format": "date-time"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"note": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "FollowUpsForToday"
		},
		"Followup": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"followupDate": {
					"type": "string",
					"format": "date-time"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"note": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Followup"
		},
		"Followups": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"followupDate": {
					"type": "string",
					"format": "date-time"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"note": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Followups"
		},
		"GrowthRate": {
			"type": "object",
			"properties": {
				"appointment": {
					"type": "number",
					"format": "float"
				},
				"avgSession": {
					"type": "number",
					"format": "float"
				},
				"coverage": {
					"type": "number",
					"format": "float"
				},
				"flag": {
					"type": "integer",
					"format": "int32"
				},
				"newPercent": {
					"type": "string"
				},
				"patient": {
					"type": "number",
					"format": "float"
				},
				"percent": {
					"type": "number",
					"format": "float"
				},
				"returnPercent": {
					"type": "string"
				},
				"transcribe": {
					"type": "number",
					"format": "float"
				},
				"walk_in": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "GrowthRate"
		},
		"HealthProblemTagsForDoctor": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctors": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Doctor"
					}
				},
				"healthIssue": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "HealthProblemTagsForDoctor"
		},
		"HealthProblemTagsForSpeciality": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"healthIssue": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Speciality"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "HealthProblemTagsForSpeciality"
		},
		"ImageUploadUrlsDto": {
			"type": "object",
			"properties": {
				"comment": {
					"type": "string"
				},
				"date": {
					"type": "string",
					"format": "date-time"
				},
				"documentType": {
					"type": "string",
					"enum": [
						"PRESCRIPTION",
						"DIAGNOSTIC_REPORT",
						"NONE"
					]
				},
				"fileNames": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ImageUploadUrlsDto"
		},
		"InventoriesForBatchEdit": {
			"type": "object",
			"properties": {
				"boxNumber": {
					"type": "string"
				},
				"clinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isInventoryNew": {
					"type": "boolean"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"shelfNumber": {
					"type": "string"
				}
			},
			"title": "InventoriesForBatchEdit"
		},
		"Issue": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"issue": {
					"type": "string"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssue"
					}
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Issue"
		},
		"IssueDto": {
			"type": "object",
			"properties": {
				"isActive": {
					"type": "boolean"
				},
				"issueId": {
					"type": "integer",
					"format": "int64"
				},
				"issueString": {
					"type": "string"
				},
				"prescriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				}
			},
			"title": "IssueDto"
		},
		"Issues": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"issue": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				}
			},
			"title": "Issues"
		},
		"LabIdsDto": {
			"type": "object",
			"properties": {
				"isActive": {
					"type": "boolean"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "LabIdsDto"
		},
		"LabInClusterDto": {
			"type": "object",
			"properties": {
				"clusterId": {
					"type": "integer",
					"format": "int64"
				},
				"labIds": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LabIdsDto"
					}
				}
			},
			"title": "LabInClusterDto"
		},
		"Link": {
			"type": "object",
			"properties": {
				"href": {
					"type": "string"
				},
				"templated": {
					"type": "boolean"
				}
			},
			"title": "Link"
		},
		"LocalTime": {
			"type": "object",
			"properties": {
				"hour": {
					"type": "integer",
					"format": "int32"
				},
				"minute": {
					"type": "integer",
					"format": "int32"
				},
				"nano": {
					"type": "integer",
					"format": "int32"
				},
				"second": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "LocalTime"
		},
		"LocalityDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "LocalityDto"
		},
		"Location": {
			"type": "object",
			"properties": {
				"lat": {
					"type": "number",
					"format": "double"
				},
				"lon": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "Location"
		},
		"Manufacturer": {
			"type": "object",
			"properties": {
				"brands": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Brand"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Manufacturer"
		},
		"Map«string,Link»": {
			"type": "object",
			"title": "Map«string,Link»",
			"additionalProperties": {
				"$ref": "#/definitions/Link"
			}
		},
		"MedicalProcedure": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeferred": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"procedureDate": {
					"type": "string",
					"format": "date-time"
				},
				"procedureType": {
					"$ref": "#/definitions/ProcedureType"
				},
				"settleMedicalProcedure": {
					"type": "boolean"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicalProcedure"
		},
		"PatientSubscriptionWithDicDetails": {
			"type": "object",
			"properties": {
				"doctorInClinicsDto": {
					"$ref": "#/definitions/DoctorInClinicsDto"
				},
				"patientSubscriptionDetailsDto": {
					"$ref": "#/definitions/PatientSubscriptionDetailsDto"
				},
				"patientDto": {
					"$ref": "#/definitions/PatientDto"
				}
			},
			"title": "PatientSubscriptionWithDicDetails"
		},
		"PatientSubscriptionDetailsDto": {
			"type": "object",
			"properties": {
				"patientSubscriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"primaryPatientId": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"validFrom": {
					"type": "string"
				},
				"validTill": {
					"type": "string"
				},
				"validity": {
					"type": "integer",
					"format": "int32"
				},
				"subscriptionDetailsDto": {
					"$ref": "#/definitions/SubscriptionDetailsDto"
				}
			},
			"title": "PatientSubscriptionDetailsDto"
		},
		"SubscriptionDetailsDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"primaryPatientId": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"amount": {
					"type": "number",
					"format": "double"
				},
				"color": {
					"type": "string"
				},
				"diagnosticAmount": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"diagnosticCount": {
					"type": "integer",
					"format": "int32"
				},
				"gradientBottom": {
					"type": "string"
				},
				"gradientTop": {
					"type": "string"
				},
				"medicineDiscountPercentage": {
					"type": "number",
					"format": "double"
				},
				"diagnosticDiscountPercentage": {
					"type": "number",
					"format": "double"
				},
				"isPopular": {
					"type": "boolean"
				}
			},
			"title": "SubscriptionDetailsDto"
		},
		"MedicalProcedures": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeferred": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"procedureDate": {
					"type": "string",
					"format": "date-time"
				},
				"procedureType": {
					"$ref": "#/definitions/ProcedureTypes"
				},
				"settleMedicalProcedure": {
					"type": "boolean"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicalProcedures"
		},
		"MedicationDate": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consumptionDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"prescriptionDescription": {
					"$ref": "#/definitions/PrescriptionDescription"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicationDate"
		},
		"MedicationDates": {
			"type": "object",
			"properties": {
				"consumptionDate": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "MedicationDates"
		},
		"Medicine": {
			"type": "object",
			"properties": {
				"batches": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Batch"
					}
				},
				"brand": {
					"type": "string"
				},
				"brandForMedicine": {
					"$ref": "#/definitions/Brand"
				},
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdBy": {
					"type": "string"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"dosageForm": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"index": {
					"type": "integer",
					"format": "int32"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isPresent": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineGeneralForMedicine": {
					"$ref": "#/definitions/MedicineGeneral"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinic"
				},
				"medicineInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInClinic"
					}
				},
				"medicineQuantityInClinic": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"origin": {
					"type": "string",
					"enum": [
						"POS",
						"TRANSCRIPTION",
						"BACKEND",
						"WEBSITE",
						"PATIENT_APP",
						"DOCTOR_APP",
						"CLINIC_APP"
					]
				},
				"popularity": {
					"type": "integer",
					"format": "int32"
				},
				"posType": {
					"type": "string"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"primaryId": {
					"type": "integer",
					"format": "int64"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"quantityInClinic": {
					"type": "integer",
					"format": "int64"
				},
				"secondaryMedicine": {
					"$ref": "#/definitions/SecondaryMedicine"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Medicine"
		},
		"MedicineAndInventoryWithPaginationDto": {
			"type": "object",
			"properties": {
				"medicineInClinicDtoForInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInClinicDtoForInventory"
					}
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"subTitle": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"totalElements": {
					"type": "integer",
					"format": "int32"
				},
				"totalPage": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "MedicineAndInventoryWithPaginationDto"
		},
		"MedicineAndMedicineInClinicDetailsDto": {
			"type": "object",
			"properties": {
				"medicineAndmedicineInClinicDetails": {
					"$ref": "#/definitions/MedicineAndmedicineInClinicDetails"
				},
				"medicineInClinicWoMedicines": {
					"$ref": "#/definitions/MedicineInClinicWoMedicines"
				}
			},
			"title": "MedicineAndMedicineInClinicDetailsDto"
		},
		"MedicineAndMedicineInClinicDetailsWithPaginationDto": {
			"type": "object",
			"properties": {
				"medicineAndMedicineInClinicDetailsDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineAndMedicineInClinicDetailsDto"
					}
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"subTitle": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"totalElements": {
					"type": "integer",
					"format": "int32"
				},
				"totalPage": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "MedicineAndMedicineInClinicDetailsWithPaginationDto"
		},
		"MedicineAndPrescriptionDto": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "number",
					"format": "double"
				},
				"brand": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"dates": {
					"type": "array",
					"items": {
						"type": "string",
						"format": "date-time"
					}
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalComments": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"morningQuantity": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"nightQuantity": {
					"type": "number",
					"format": "double"
				},
				"prescriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "number",
					"format": "double"
				},
				"quantityKey": {
					"type": "string"
				},
				"request": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionMetadataRequestDto"
					}
				},
				"secondaryMedicineId": {
					"type": "integer",
					"format": "int64"
				},
				"sku": {
					"type": "string"
				},
				"specialCondition": {
					"type": "string"
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IssueDto"
					}
				},
				"type": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"length": {
					"type": "string"
				},
				"unitQuantity": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "MedicineAndPrescriptionDto"
		},
		"MedicineAndmedicineInClinicDetails": {
			"type": "object",
			"properties": {
				"brand": {
					"type": "string"
				},
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInClinicWoMedicines"
					}
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineAndmedicineInClinicDetails"
		},
		"MedicineDto": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"displayPrice": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"index": {
					"type": "integer",
					"format": "int64"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinicDto"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "MedicineDto"
		},
		"MedicineForPharmacy": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "MedicineForPharmacy"
		},
		"MedicineForRecommendation": {
			"type": "object",
			"properties": {
				"dosageForm": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "MedicineForRecommendation"
		},
		"MedicineForTranscription": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "MedicineForTranscription"
		},
		"MedicineGeneral": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string",
					"enum": [
						"OTC",
						"ONLY_WITH_PRESCRIPTION",
						"SCHEDULE_X"
					]
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineSalts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineSalt"
					}
				},
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Medicine"
					}
				},
				"name": {
					"type": "string"
				},
				"sku": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineGeneral"
		},
		"MedicineInClinic": {
			"type": "object",
			"properties": {
				"batchNumber": {
					"type": "string"
				},
				"boxNumber": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorPayout": {
					"type": "number",
					"format": "double"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventory"
					}
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				},
				"primaryId": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"shelfNumber": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineInClinic"
		},
		"MedicineInClinicDto": {
			"type": "object",
			"properties": {
				"batchNumber": {
					"type": "string"
				},
				"boxNumber": {
					"type": "string"
				},
				"length": {
					"type": "string"
				},
				"expiryDate": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventoryDto"
					}
				},
				"shelfNumber": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				}
			},
			"title": "MedicineInClinicDto"
		},
		"MedicineInClinicDtoForInventory": {
			"type": "object",
			"properties": {
				"clinicId": {
					"type": "integer",
					"format": "int64"
				},
				"clinicName": {
					"type": "string"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventoriesDetails"
					}
				},
				"medicineName": {
					"type": "string"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineInClinicDtoForInventory"
		},
		"MedicineInClinicForMedicineSearch": {
			"type": "object",
			"properties": {
				"batchNumber": {
					"type": "string"
				},
				"boxNumber": {
					"type": "string"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventories"
					}
				},
				"shelfNumber": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				}
			},
			"title": "MedicineInClinicForMedicineSearch"
		},
		"MedicineInClinicForPharmacy": {
			"type": "object",
			"properties": {
				"boxNumber": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicForPharmacy"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineForPharmacy"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventories"
					}
				},
				"shelfNumber": {
					"type": "string"
				}
			},
			"title": "MedicineInClinicForPharmacy"
		},
		"MedicineInClinicWoMedicines": {
			"type": "object",
			"properties": {
				"batchNumber": {
					"type": "string"
				},
				"boxNumber": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicWoMedicineInClinics"
				},
				"code": {
					"type": "string"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"shelfNumber": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				}
			},
			"title": "MedicineInClinicWoMedicines"
		},
		"MedicineInClinics": {
			"type": "object",
			"properties": {
				"batchNumber": {
					"type": "string"
				},
				"boxNumber": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicWoMedicineInClinics"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorPayout": {
					"type": "number",
					"format": "double"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineWoMedicineInClinic"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"shelfNumber": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineInClinics"
		},
		"MedicineInventories": {
			"type": "object",
			"properties": {
				"batch": {
					"$ref": "#/definitions/BatchesForPharmacy"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"unitQuantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineInventories"
		},
		"MedicineInventoriesDetails": {
			"type": "object",
			"properties": {
				"batch": {
					"$ref": "#/definitions/BatchesForPharmacy"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineInventoriesDetails"
		},
		"MedicineInventory": {
			"type": "object",
			"properties": {
				"batch": {
					"$ref": "#/definitions/Batch"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinic"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"primaryId": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"unitQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineInventory"
		},
		"MedicineInventoryBulkPostDto": {
			"type": "object",
			"properties": {
				"batchId": {
					"type": "integer",
					"format": "int64"
				},
				"batchNumber": {
					"type": "string"
				},
				"medicineInventoryId": {
					"type": "integer",
					"format": "int64"
				},
				"micId": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineInventoryBulkPostDto"
		},
		"MedicineInventoryDto": {
			"type": "object",
			"properties": {
				"batch": {
					"$ref": "#/definitions/BatchDto"
				},
				"displayPrice": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"price": {
					"type": "number",
					"format": "double"
				},
				"quantity": {
					"type": "number",
					"format": "double"
				},
				"unitQuantity": {
					"type": "string"
				}
			},
			"title": "MedicineInventoryDto"
		},
		"MedicineMergeDto": {
			"type": "object",
			"properties": {
				"primaryId": {
					"type": "integer",
					"format": "int64"
				},
				"secondaryIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"title": "MedicineMergeDto"
		},
		"MedicineResponseDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"length": {
					"type": "integer",
					"format": "int32"
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			},
			"title": "MedicineResponseDto"
		},
		"MedicineSalt": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineGeneral": {
					"$ref": "#/definitions/MedicineGeneral"
				},
				"salt": {
					"$ref": "#/definitions/Salt"
				},
				"strength": {
					"type": "string"
				},
				"unit": {
					"type": "string",
					"enum": [
						"NONE"
					]
				}
			},
			"title": "MedicineSalt"
		},
		"MedicineSearchInTranscription": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"index": {
					"type": "integer",
					"format": "int32"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isPresent": {
					"type": "boolean"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinicForMedicineSearch"
				},
				"medicineQuantityInClinic": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "MedicineSearchInTranscription"
		},
		"MedicineUniverseBulkUploadDto": {
			"type": "object",
			"properties": {
				"batchId": {
					"type": "integer",
					"format": "int64"
				},
				"batchNumber": {
					"type": "string"
				},
				"boxNumber": {
					"type": "string"
				},
				"brand": {
					"type": "string"
				},
				"brandId": {
					"type": "integer",
					"format": "int64"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"clinicId": {
					"type": "integer",
					"format": "int64"
				},
				"dateOfManufacture": {
					"$ref": "#/definitions/Timestamp"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"manufacturerId": {
					"type": "integer",
					"format": "int64"
				},
				"manufacturerName": {
					"type": "string"
				},
				"medicineForMicId": {
					"type": "integer",
					"format": "int64"
				},
				"medicineGeneralFlag": {
					"type": "boolean"
				},
				"medicineGeneralId": {
					"type": "integer",
					"format": "int64"
				},
				"medicineGeneralIsActive": {
					"type": "boolean"
				},
				"medicineGeneralName": {
					"type": "string"
				},
				"medicineGeneralSku": {
					"type": "string"
				},
				"medicineId": {
					"type": "integer",
					"format": "int64"
				},
				"medicineInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventoryBulkPostDto"
					}
				},
				"mrp": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"saltId": {
					"type": "integer",
					"format": "int64"
				},
				"saltName": {
					"type": "string"
				},
				"saltUnit": {
					"type": "string",
					"enum": [
						"NONE"
					]
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"shelfNumber": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				},
				"strength": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				}
			},
			"title": "MedicineUniverseBulkUploadDto"
		},
		"MedicineWoMedicineInClinic": {
			"type": "object",
			"properties": {
				"brand": {
					"type": "string"
				},
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"code": {
					"type": "string"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineWoMedicineInClinic"
		},
		"MedicineWoPrescription": {
			"type": "object",
			"properties": {
				"brand": {
					"type": "string"
				},
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"code": {
					"type": "string"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isPresent": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MedicineWoPrescription"
		},
		"MedicineWoPrescriptionForOngoingMedication": {
			"type": "object",
			"properties": {
				"brand": {
					"type": "string"
				},
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"unit": {
					"type": "string"
				}
			},
			"title": "MedicineWoPrescriptionForOngoingMedication"
		},
		"MedicinesForOrder": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"type": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				}
			},
			"title": "MedicinesForOrder"
		},
		"MedicinesForRecommendation": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"dosageForm": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "MedicinesForRecommendation"
		},
		"MergeErrorDto": {
			"type": "object",
			"properties": {
				"primaryId": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				},
				"secondaryIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"skippedSecondaryIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"totallySkipped": {
					"type": "boolean"
				}
			},
			"title": "MergeErrorDto"
		},
		"MessageConfiguration": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"keyName": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"value": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "MessageConfiguration"
		},
		"ModelAndView": {
			"type": "object",
			"properties": {
				"empty": {
					"type": "boolean"
				},
				"model": {
					"type": "object"
				},
				"modelMap": {
					"type": "object",
					"additionalProperties": {
						"type": "object"
					}
				},
				"reference": {
					"type": "boolean"
				},
				"status": {
					"type": "string",
					"enum": [
						"100 CONTINUE",
						"101 SWITCHING_PROTOCOLS",
						"102 PROCESSING",
						"103 CHECKPOINT",
						"200 OK",
						"201 CREATED",
						"202 ACCEPTED",
						"203 NON_AUTHORITATIVE_INFORMATION",
						"204 NO_CONTENT",
						"205 RESET_CONTENT",
						"206 PARTIAL_CONTENT",
						"207 MULTI_STATUS",
						"208 ALREADY_REPORTED",
						"226 IM_USED",
						"300 MULTIPLE_CHOICES",
						"301 MOVED_PERMANENTLY",
						"302 FOUND",
						"302 MOVED_TEMPORARILY",
						"303 SEE_OTHER",
						"304 NOT_MODIFIED",
						"305 USE_PROXY",
						"307 TEMPORARY_REDIRECT",
						"308 PERMANENT_REDIRECT",
						"400 BAD_REQUEST",
						"401 UNAUTHORIZED",
						"402 PAYMENT_REQUIRED",
						"403 FORBIDDEN",
						"404 NOT_FOUND",
						"405 METHOD_NOT_ALLOWED",
						"406 NOT_ACCEPTABLE",
						"407 PROXY_AUTHENTICATION_REQUIRED",
						"408 REQUEST_TIMEOUT",
						"409 CONFLICT",
						"410 GONE",
						"411 LENGTH_REQUIRED",
						"412 PRECONDITION_FAILED",
						"413 PAYLOAD_TOO_LARGE",
						"413 REQUEST_ENTITY_TOO_LARGE",
						"414 URI_TOO_LONG",
						"414 REQUEST_URI_TOO_LONG",
						"415 UNSUPPORTED_MEDIA_TYPE",
						"416 REQUESTED_RANGE_NOT_SATISFIABLE",
						"417 EXPECTATION_FAILED",
						"418 I_AM_A_TEAPOT",
						"419 INSUFFICIENT_SPACE_ON_RESOURCE",
						"420 METHOD_FAILURE",
						"421 DESTINATION_LOCKED",
						"422 UNPROCESSABLE_ENTITY",
						"423 LOCKED",
						"424 FAILED_DEPENDENCY",
						"426 UPGRADE_REQUIRED",
						"428 PRECONDITION_REQUIRED",
						"429 TOO_MANY_REQUESTS",
						"431 REQUEST_HEADER_FIELDS_TOO_LARGE",
						"451 UNAVAILABLE_FOR_LEGAL_REASONS",
						"500 INTERNAL_SERVER_ERROR",
						"501 NOT_IMPLEMENTED",
						"502 BAD_GATEWAY",
						"503 SERVICE_UNAVAILABLE",
						"504 GATEWAY_TIMEOUT",
						"505 HTTP_VERSION_NOT_SUPPORTED",
						"506 VARIANT_ALSO_NEGOTIATES",
						"507 INSUFFICIENT_STORAGE",
						"508 LOOP_DETECTED",
						"509 BANDWIDTH_LIMIT_EXCEEDED",
						"510 NOT_EXTENDED",
						"511 NETWORK_AUTHENTICATION_REQUIRED"
					]
				},
				"view": {
					"$ref": "#/definitions/View"
				},
				"viewName": {
					"type": "string"
				}
			},
			"title": "ModelAndView"
		},
		"NetPromoterScore": {
			"type": "object",
			"properties": {
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"otherReason": {
					"type": "string"
				},
				"parameter": {
					"$ref": "#/definitions/FeedbackParameter"
				},
				"query": {
					"type": "string"
				},
				"rating": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "NetPromoterScore"
		},
		"NetPromoterScoreRequestDto": {
			"type": "object",
			"properties": {
				"dicid": {
					"type": "integer",
					"format": "int64"
				},
				"otherReason": {
					"type": "string"
				},
				"parameterids": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"query": {
					"type": "string"
				},
				"rating": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "NetPromoterScoreRequestDto"
		},
		"NewVsReturningPatient": {
			"type": "object",
			"properties": {
				"dateWiseNewVsReturning": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DateWiseNewVsReturning"
					}
				},
				"growthRate": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/GrowthRate"
					}
				},
				"totalNewPatient": {
					"type": "integer",
					"format": "int64"
				},
				"totalReturnPatient": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "NewVsReturningPatient"
		},
		"NextAvailable": {
			"type": "object",
			"properties": {
				"date": {
					"type": "string",
					"format": "date-time"
				},
				"isToday": {
					"type": "boolean"
				},
				"nextEnd": {
					"$ref": "#/definitions/Time"
				},
				"nextStart": {
					"$ref": "#/definitions/Time"
				},
				"weekdays": {
					"type": "string",
					"enum": [
						"SUNDAY",
						"MONDAY",
						"TUESDAY",
						"WEDNESDAY",
						"THURSDAY",
						"FRIDAY",
						"SATURDAY"
					]
				}
			},
			"title": "NextAvailable"
		},
		"NotVisitedConsultations": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicWithDoctorOnly"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isVisited": {
					"type": "boolean"
				},
				"patient": {
					"$ref": "#/definitions/PatientForPatientQueue"
				},
				"status": {
					"type": "string"
				}
			},
			"title": "NotVisitedConsultations"
		},
		"OptOutReasonDto": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"isDoseAlertEnable": {
					"type": "boolean"
				},
				"isSmsEnable": {
					"type": "boolean"
				},
				"isWhatsAppEnable": {
					"type": "boolean"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				}
			},
			"title": "OptOutReasonDto"
		},
		"OrderDetailsDto": {
			"type": "object",
			"properties": {
				"addressForOrderDetail": {
					"$ref": "#/definitions/Addresses"
				},
				"addressId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationForOrderDetail": {
					"$ref": "#/definitions/ConsultationForOrderDetail"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorInClinicForOrderDetail": {
					"$ref": "#/definitions/DoctorInClinicForOrderDetail"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"orderItemRefLinkDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OrderItemRefLinkDto"
					}
				},
				"orderItemUploadDocumentLinkDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OrderItemUploadDocumentLinkDto"
					}
				},
				"source": {
					"type": "string"
				}
			},
			"title": "OrderDetailsDto"
		},
		"OrderDiagnosticDto": {
			"type": "object",
			"properties": {
				"discountedPrice": {
					"type": "number",
					"format": "float"
				},
				"dtilId": {
					"type": "integer",
					"format": "int64"
				},
				"finalPrice": {
					"type": "number",
					"format": "float"
				},
				"otherCharges": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"orderItemId": {
					"type": "integer",
					"format": "int64"
				},
				"percentageOff": {
					"type": "number",
					"format": "float"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"priceOff": {
					"type": "number",
					"format": "float"
				},
				"procurementPrice": {
					"type": "number",
					"format": "float"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"sku": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			},
			"title": "OrderDiagnosticDto"
		},
		"OrderDto": {
			"type": "object",
			"properties": {
				"coupon": {
					"type": "string"
				},
				"diagnosticMessage": {
					"type": "string"
				},
				"diagnosticTypeList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticType"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OrderDiagnosticDto"
					}
				},
				"discount": {
					"type": "number",
					"format": "float"
				},
				"finalPrice": {
					"type": "number",
					"format": "float"
				},
				"orderId": {
					"type": "integer",
					"format": "int64"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"shippingPrice": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "OrderDto"
		},
		"OrderItemDto": {
			"type": "object",
			"properties": {
				"actualFee": {
					"type": "number",
					"format": "float"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"cashbackAmount": {
				    "type": "number",
					"format": "float"
				},
				"barCode": {
					"type": "string"
				},
				"labDisplayName": {
					"type": "string"
				},
				"batchId": {
					"type": "string"
				},
				"billingCategory": {
					"type": "string"
				},
				"cgstPercentage": {
					"type": "number",
					"format": "float"
				},
				"deferred": {
					"type": "boolean"
				},
				"description": {
					"type": "string"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypeDto"
				},
				"diagnosticTypeInLabId": {
					"type": "integer",
					"format": "int64"
				},
				"patientSubscriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"subscriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"displayName": {
					"type": "string"
				},
				"endTime": {
					"type": "string",
					"format": "date-time"
				},
				"expectedArrivalTime": {
					"type": "string",
					"format": "date-time"
				},
				"fee": {
					"type": "number",
					"format": "float"
				},
				"otherCharges": {
					"type": "number",
					"format": "float"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"isFreeFollowUp": {
					"type": "boolean"
				},
				"meddoPrice": {
					"type": "number",
					"format": "float"
				},
				"walletDiscount": {
					"type": "number",
					"format": "float"
				},
				"voucherDiscount": {
					"type": "number",
					"format": "float"
				},
				"subscriptionDiscount": {
					"type": "number",
					"format": "float"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineDto"
				},
				"medicineId": {
					"type": "integer",
					"format": "int64"
				},
				"medicineInventory": {
					"$ref": "#/definitions/MedicineInventoryDto"
				},
				"medicineInventoryId": {
					"type": "integer",
					"format": "int64"
				},
				"payOnDelivery": {
					"type": "boolean"
				},
				"prescriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptionLink": {
					"type": "string"
				},
				"productTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"providerId": {
					"type": "integer",
					"format": "int64"
				},
				"refId": {
					"type": "integer",
					"format": "int64"
				},
				"refLink": {
					"type": "string"
				},
				"scheduleType": {
					"type": "string"
				},
				"secondaryMedicineId": {
					"type": "integer",
					"format": "int64"
				},
				"serviceName": {
					"type": "string"
				},
				"serviceRevenueDisabled": {
					"type": "boolean"
				},
				"isDocumentUploaded": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"isCovid": {
					"type": "boolean"
				},
				"isPickUpEnable": {
					"type": "boolean"
				},
				"settleAmount": {
					"type": "boolean"
				},
				"sgstPercentage": {
					"type": "number",
					"format": "float"
				},
				"sku": {
					"type": "string"
				},
				"startTime": {
					"type": "string",
					"format": "date-time"
				},
				"status": {
					"type": "string"
				},
				"diagnosticCategory": {
					"type": "string",
					"enum": [
						"COVID"
						]
				},
				"procurementPrice": {
					"type": "number",
					"format": "float"
				},
				"procurementPercentage": {
					"type": "number",
					"format": "float"
				},
				"unitQuantity": {
					"type": "number",
					"format": "float"
				},
				"diagnosticAndDocumentDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticAndDocumentDto"
					}
				}
			},
			"title": "OrderItemDto"
		},
		"DiagnosticAndDocumentDto": {
			"type": "object",
			"properties": {
				"filePath": {
					"type": "string"
				},
				"diagnosticDocumentType": {
					"type": "string",
					"enum": [
						"PRESCRIPTION",
						"GOVT_ID",
						"DIAGNOSTIC_REPORT",
						"NONE"
					]
				},
				"remark": {
					"type": "string"
				}
			},
			"title": "DiagnosticAndDocumentDto"
		},
		"OrderItemRefLinkDto": {
			"type": "object",
			"properties": {
				"diagnosticId": {
					"type": "integer",
					"format": "int64"
				},
				"orderItemId": {
					"type": "integer",
					"format": "int64"
				},
				"refLinks": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "OrderItemRefLinkDto"
		},
		"OrderItemUploadDocumentLinkDto": {
			"type": "object",
			"properties": {
				"diagnosticId": {
					"type": "integer",
					"format": "int64"
				},
				"orderItemId": {
					"type": "integer",
					"format": "int64"
				},
				"filePath": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "OrderItemUploadDocumentLinkDto"
		},
		"OrderSearchObject": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForOrder"
					}
				},
				"diagnosticTypeCount": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypePathologyCount": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeRadiologyCount": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForOrder"
					}
				},
				"diagnosticTypesForPathology": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForOrder"
					}
				},
				"diagnosticTypesForRadiology": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForOrder"
					}
				},
				"medicineCount": {
					"type": "integer",
					"format": "int64"
				},
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicinesForOrder"
					}
				},
				"title": {
					"type": "string"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				},
				"totalPagesForMedicines": {
					"type": "integer",
					"format": "int32"
				},
				"totalPagesForPathologyDiagnosticTypes": {
					"type": "integer",
					"format": "int32"
				},
				"totalPagesForRadiologyDiagnosticTypes": {
					"type": "integer",
					"format": "int32"
				},
				"widgetId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "OrderSearchObject"
		},
		"DiagnosticAndDocumentListDto": {
			"type": "object",
			"properties": {
				"diagnosticId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticAndDocumentDtos": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticAndDocumentDto"
					}
				}
			},
			"title": "DiagnosticAndDocumentListDto"
		},
		"OrderSummaryDto": {
			"type": "object",
			"properties": {
				"addressId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"orderItems": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/OrderItemDto"
					}
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"throughEprescription": {
					"type": "boolean"
				}
			},
			"title": "OrderSummaryDto"
		},
		"PageDto": {
			"type": "object",
			"properties": {
				"page": {
					"type": "integer",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "PageDto"
		},
		"PageMetadata": {
			"type": "object",
			"properties": {
				"number": {
					"type": "integer",
					"format": "int64",
					"xml": {
						"name": "number",
						"attribute": true,
						"wrapped": false
					}
				},
				"size": {
					"type": "integer",
					"format": "int64",
					"xml": {
						"name": "size",
						"attribute": true,
						"wrapped": false
					}
				},
				"totalElements": {
					"type": "integer",
					"format": "int64",
					"xml": {
						"name": "totalElements",
						"attribute": true,
						"wrapped": false
					}
				},
				"totalPages": {
					"type": "integer",
					"format": "int64",
					"xml": {
						"name": "totalPages",
						"attribute": true,
						"wrapped": false
					}
				}
			},
			"title": "PageMetadata"
		},
		"Pageable": {
			"type": "object",
			"properties": {
				"page": {
					"type": "integer",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"type": "string"
				}
			},
			"title": "Pageable"
		},
		"PagedResources«Resource«ConsultationsForDeclineReasons»»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Resource«ConsultationsForDeclineReasons»"
					}
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedResources«Resource«ConsultationsForDeclineReasons»»",
			"xml": {
				"name": "pagedEntities",
				"attribute": false,
				"wrapped": false
			}
		},
		"PagedResources«Resource«Consultations»»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Resource«Consultations»"
					}
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedResources«Resource«Consultations»»",
			"xml": {
				"name": "pagedEntities",
				"attribute": false,
				"wrapped": false
			}
		},
		"PagedResources«Resource«MedicineResponseDto»»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Resource«MedicineResponseDto»"
					}
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedResources«Resource«MedicineResponseDto»»",
			"xml": {
				"name": "pagedEntities",
				"attribute": false,
				"wrapped": false
			}
		},
		"PagedResources«Resource«PatientHistoryForRecentActivitiesForDoctor»»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Resource«PatientHistoryForRecentActivitiesForDoctor»"
					}
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"page": {
					"$ref": "#/definitions/PageMetadata"
				}
			},
			"title": "PagedResources«Resource«PatientHistoryForRecentActivitiesForDoctor»»",
			"xml": {
				"name": "pagedEntities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Page«Areas»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Areas"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«Areas»"
		},
		"Page«ClinicConsumablesForPos»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClinicConsumablesForPos"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«ClinicConsumablesForPos»"
		},
		"Page«ClustersWithLabsAndClinics»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClustersWithLabsAndClinics"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«ClustersWithLabsAndClinics»"
		},
		"Page«Clusters»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Clusters"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«Clusters»"
		},
		"Page«ConsultationAndDoxpers»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxpers"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«ConsultationAndDoxpers»"
		},
		"Page«ConsultationsForSearchAPI»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationsForSearchAPI"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«ConsultationsForSearchAPI»"
		},
		"Page«ConsultationsForTranscriptionRevamp»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationsForTranscriptionRevamp"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«ConsultationsForTranscriptionRevamp»"
		},
		"Page«Consultations»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Consultations"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«Consultations»"
		},
		"Page«DiagnosticLabsForClinic»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticLabsForClinic"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«DiagnosticLabsForClinic»"
		},
		"Page«DiagnosticLab»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticLab"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«DiagnosticLab»"
		},
		"Page«DoctorInClinicConfigurationsForApp»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicConfigurationsForApp"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«DoctorInClinicConfigurationsForApp»"
		},
		"Page«DoctorMessageAndDoctorInClinicForMessageRouter»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorMessageAndDoctorInClinicForMessageRouter"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«DoctorMessageAndDoctorInClinicForMessageRouter»"
		},
		"Page«DoctorsForMessageRouter»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorsForMessageRouter"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«DoctorsForMessageRouter»"
		},
		"Page«Issues»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Issues"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«Issues»"
		},
		"Page«MedicineInClinics»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInClinics"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«MedicineInClinics»"
		},
		"Page«PatientHistoryForDoctor»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistoryForDoctor"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«PatientHistoryForDoctor»"
		},
		"Page«SecondaryMedicines»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SecondaryMedicines"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«SecondaryMedicines»"
		},
		"Page«SpecialitiesForRecommendation»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«SpecialitiesForRecommendation»"
		},
		"Page«TranscriptionIssuesForAdmin»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssuesForAdmin"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«TranscriptionIssuesForAdmin»"
		},
		"Page«Transcriptions»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Transcriptions"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«Transcriptions»"
		},
		"Page«object»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"type": "object"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Page«object»"
		},
		"PaginatedDto": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"type": "object"
					}
				},
				"page": {
					"$ref": "#/definitions/PageDto"
				}
			},
			"title": "PaginatedDto"
		},
		"PaginatedRecommendationAdviceBody": {
			"type": "object",
			"properties": {
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationAdviceDto"
					}
				},
				"pages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "PaginatedRecommendationAdviceBody"
		},
		"PaginatedRecommendationDiagnosisTypeBody": {
			"type": "object",
			"properties": {
				"diagnosisTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationDiagnosisTypeDto"
					}
				},
				"pages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "PaginatedRecommendationDiagnosisTypeBody"
		},
		"PaginatedRecommendationDiagnosticTypeBody": {
			"type": "object",
			"properties": {
				"diagnosticTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationDiagnosticTypeDto"
					}
				},
				"pages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "PaginatedRecommendationDiagnosticTypeBody"
		},
		"PaginatedRecommendationMedicineBody": {
			"type": "object",
			"properties": {
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationMedicineDto"
					}
				},
				"pages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "PaginatedRecommendationMedicineBody"
		},
		"PaginatedRecommendationProcedureTypeBody": {
			"type": "object",
			"properties": {
				"pages": {
					"type": "integer",
					"format": "int32"
				},
				"procedureTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationProcedureTypeDto"
					}
				}
			},
			"title": "PaginatedRecommendationProcedureTypeBody"
		},
		"PaginatedRecommendationSymptomTypeBody": {
			"type": "object",
			"properties": {
				"pages": {
					"type": "integer",
					"format": "int32"
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationSymptomTypeDto"
					}
				}
			},
			"title": "PaginatedRecommendationSymptomTypeBody"
		},
		"PaginatedResponse": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"type": "object"
					}
				},
				"page": {
					"type": "integer",
					"format": "int32"
				},
				"pageContent": {
					"$ref": "#/definitions/Page«object»"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "PaginatedResponse"
		},
		"PaginationDto": {
			"type": "object",
			"properties": {
				"data": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientsForClinics"
					}
				},
				"page": {
					"type": "integer",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "PaginationDto"
		},
		"Patient": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Address"
					}
				},
				"age": {
					"type": "integer",
					"format": "int64"
				},
				"ageType": {
					"type": "string"
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"commentOnDocuments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CommentOnDocument"
					}
				},
				"consultation": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Consultation"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dateofbirth": {
					"type": "string"
				},
				"diagnosticReportValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticReportValue"
					}
				},
				"doseAlertFlag": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"family": {
					"$ref": "#/definitions/Family"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isPartialDetails": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"optOutReason": {
					"type": "string"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistory"
					}
				},
				"patientSymptom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientSymptom"
					}
				},
				"phone": {
					"type": "string"
				},
				"prescriptionByDates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"sourceIdentifier": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "Patient"
		},
		"PatientAddToQueue": {
			"type": "object",
			"properties": {
				"age": {
					"type": "integer",
					"format": "int64"
				},
				"ageType": {
					"type": "string"
				},
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AllergyForQueue"
					}
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"consultationForQueue": {
					"$ref": "#/definitions/ConsultationForQueue"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"email": {
					"type": "string"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditionForQueue"
					}
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"sourceIdentifier": {
					"type": "string"
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomForQueue"
					}
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/VitalDto"
					}
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientAddToQueue"
		},
		"PatientAndConsultationIdDto": {
			"type": "object",
			"properties": {
				"consultationIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"patientIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"title": "PatientAndConsultationIdDto"
		},
		"PatientAndDoctorDetailDto": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicForRecentCare"
					}
				},
				"doctorName": {
					"type": "string"
				},
				"doctorQualification": {
					"type": "string"
				},
				"isAppointmentBooked": {
					"type": "boolean"
				},
				"patient": {
					"$ref": "#/definitions/PatientDto"
				},
				"reportDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReportDto"
					}
				},
				"symptom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientSymptom"
					}
				}
			},
			"title": "PatientAndDoctorDetailDto"
		},
		"PatientDetailsEditDto": {
			"type": "object",
			"properties": {
				"dateofbirth": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"patientName": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				}
			},
			"title": "PatientDetailsEditDto"
		},
		"PatientDto": {
			"type": "object",
			"properties": {
				"age": {
					"type": "integer",
					"format": "int64"
				},
				"ageType": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"dateofbirth": {
					"type": "string"
				},
				"doctorId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"doseAlertFlag": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"isEdit": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"patientId": {
					"type": "integer",
					"format": "int64"
				},
				"patientName": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"prescribeBy": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientDto"
		},
		"DiagnosticUpdateDtilDto": {
			"type": "object",
			"properties": {
				"diagnosticId": {
					"type": "integer",
					"format": "int64"
				},
				"dtilId": {
					"type": "integer",
					"format": "int64"
				},
				"error": {
					"type": "string"
				}
			},
			"title": "DiagnosticUpdateDtilDto"
		},
		"PatientFamliesDetails": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				}
			},
			"title": "PatientFamliesDetails"
		},
		"PatientForConsumer": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Addresses"
					}
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"dateofbirth": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientForConsumer"
		},
		"PatientForEPrescription": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Addresses"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				}
			},
			"title": "PatientForEPrescription"
		},
		"PatientForESearch": {
			"type": "object",
			"properties": {
				"age": {
					"type": "integer",
					"format": "int64"
				},
				"ageType": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientForESearch"
		},
		"PatientForNameSearch": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Addresses"
					}
				},
				"alternateNumber": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				}
			},
			"title": "PatientForNameSearch"
		},
		"PatientForPatientQueue": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				}
			},
			"title": "PatientForPatientQueue"
		},
		"PatientForPushNotification": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Addresses"
					}
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"dateofbirth": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"family": {
					"$ref": "#/definitions/FamilyWoPatient"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"patientList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientFamliesDetails"
					}
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientForPushNotification"
		},
		"PatientForSearchPatient": {
			"type": "object",
			"properties": {
				"ageType": {
					"type": "string"
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"dateofbirth": {
					"type": "string"
				},
				"family": {
					"$ref": "#/definitions/FamilyWoPatient"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientForSearchPatient"
		},
		"PatientHistoriesWoPatientNdConsultation": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patientHistoryType": {
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				},
				"rating": {
					"type": "number",
					"format": "double"
				},
				"refLink": {
					"type": "string"
				},
				"vendorRefLink": {
					"type": "string"
				}
			},
			"title": "PatientHistoriesWoPatientNdConsultation"
		},
		"OnGoingTreatmentsAndMedicines": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "OnGoingTreatmentsAndMedicines"
		},
		"PatientHistory": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"commentOnDocument": {
					"$ref": "#/definitions/CommentOnDocument"
				},
				"commentsForPatientHistory": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Comment"
					}
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"diagnosticAndPatientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticAndPatientHistory"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"patientHistoryType": {
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				},
				"rating": {
					"type": "number",
					"format": "double"
				},
				"refLink": {
					"type": "string"
				},
				"vendorRefLink": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PatientHistory"
		},
		"PatientHistoryForClinicApp": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"rating": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "PatientHistoryForClinicApp"
		},
		"PatientHistoryForDoctor": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"commentOnDocument": {
					"$ref": "#/definitions/CommentOnDocuments"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationForRecentPatientHistory"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/DiagnosticsWoConsultation"
				},
				"diagnosticAndPatientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticAndPatientHistoriesForRecentCare"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"patientHistoryType": {
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				},
				"patientSOSUsingPatientId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SosDetails"
					}
				},
				"summaryByPatientId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Summary"
					}
				},
				"vendorRefLink": {
					"type": "string"
				}
			},
			"title": "PatientHistoryForDoctor"
		},
		"PatientHistoryForIntegration": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationForReportUpload"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/DiagnosticsWoConsultation"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"refLink": {
					"type": "string"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"vendorRefLink": {
					"type": "string"
				}
			},
			"title": "PatientHistoryForIntegration"
		},
		"PatientHistoryForMessageRouter": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationForMessageRouter"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"patientHistoryType": {
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"refLink": {
					"type": "string"
				},
				"vendorRefLink": {
					"type": "string"
				}
			},
			"title": "PatientHistoryForMessageRouter"
		},
		"PatientHistoryForMiddlewareDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"reportUrl": {
					"type": "string"
				}
			},
			"title": "PatientHistoryForMiddlewareDto"
		},
		"PatientHistoryForPushNotification": {
			"type": "object",
			"properties": {
				"consultation": {
					"$ref": "#/definitions/ConsultationForNotification"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				}
			},
			"title": "PatientHistoryForPushNotification"
		},
		"PatientHistoryForRecentActivitiesForDoctor": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"commentOnDocument": {
					"$ref": "#/definitions/CommentOnDocuments"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationForRecentPatientHistory"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/DiagnosticsWoConsultation"
				},
				"diagnosticAndPatientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticAndPatientHistoriesForRecentCare"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"patientHistoryType": {
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				},
				"patientSOSUsingPatientId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SosDetails"
					}
				},
				"refLink": {
					"type": "string"
				},
				"summaryByPatientId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Summary"
					}
				},
				"vendorRefLink": {
					"type": "string"
				}
			},
			"title": "PatientHistoryForRecentActivitiesForDoctor"
		},
		"PatientInQueue": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"clinicName": {
					"type": "string"
				},
				"consultationStatus": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"contactNo": {
					"type": "string"
				},
				"doctorImage": {
					"type": "string"
				},
				"doctorName": {
					"type": "string"
				},
				"patientName": {
					"type": "string"
				},
				"priorityQueue": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PatientInQueue"
		},
		"PatientListDetail": {
			"type": "object",
			"properties": {
				"doctorPatientList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/VisitPatientForDoctor"
					}
				},
				"doctorPatientLists": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorPatientList"
					}
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPage": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "PatientListDetail"
		},
		"PatientMedicine": {
			"type": "object",
			"properties": {
				"consumedTime": {
					"type": "string"
				},
				"key": {
					"type": "string",
					"enum": [
						"AFTERNOON",
						"EVENING",
						"MORNING",
						"NIGHT",
						"SOS"
					]
				},
				"medicineDosage": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Dosage"
					}
				},
				"medicineStatus": {
					"type": "string",
					"enum": [
						"PENDING",
						"TAKEN",
						"SKIPPED"
					]
				},
				"prescriptionByDateId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PatientMedicine"
		},
		"PatientPrescription": {
			"type": "object",
			"properties": {
				"consultationIds": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"message": {
					"type": "string"
				},
				"patientMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientMedicine"
					}
				},
				"patientSOS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientSOS"
					}
				},
				"prescriptionDate": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "PatientPrescription"
		},
		"PatientPreviousDocument": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comment": {
					"type": "string"
				},
				"commentOnDocument": {
					"$ref": "#/definitions/CommentOnDocument"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"documentCreatedDate": {
					"type": "string",
					"format": "date-time"
				},
				"documentUrl": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patientDocumentType": {
					"type": "string",
					"enum": [
						"PRESCRIPTION",
						"DIAGNOSTIC_REPORT",
						"NONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PatientPreviousDocument"
		},
		"PatientPreviousDocuments": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comment": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"documentCreatedDate": {
					"type": "string",
					"format": "date-time"
				},
				"documentUrl": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patientDocumentType": {
					"type": "string",
					"enum": [
						"PRESCRIPTION",
						"DIAGNOSTIC_REPORT",
						"NONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PatientPreviousDocuments"
		},
		"PatientSOS": {
			"type": "object",
			"properties": {
				"condition": {
					"type": "string"
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"medicineName": {
					"type": "string"
				},
				"otherSpecialConditionNote": {
					"type": "string"
				},
				"quantityKey": {
					"type": "string"
				},
				"sosDate": {
					"type": "string",
					"format": "date-time"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "PatientSOS"
		},
		"PatientSymptom": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PatientSymptom"
		},
		"PatientVisitUpdateDoxperRequest": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"doctorUserName": {
					"type": "string"
				},
				"doxperFilePath": {
					"type": "string"
				},
				"qrCode": {
					"type": "string"
				},
				"state": {
					"type": "string"
				}
			},
			"title": "PatientVisitUpdateDoxperRequest"
		},
		"PatientWithFamilyAndAddress": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Addresses"
					}
				},
				"age": {
					"type": "string"
				},
				"ageType": {
					"type": "string"
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"dateofbirth": {
					"type": "string"
				},
				"doseAlertFlag": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"family": {
					"$ref": "#/definitions/FamilyWoPatient"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientWithFamilyAndAddress"
		},
		"PatientWithWallet": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Addresses"
					}
				},
				"age": {
					"type": "string"
				},
				"ageType": {
					"type": "string"
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"dateofbirth": {
					"type": "string"
				},
				"doseAlertFlag": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"family": {
					"$ref": "#/definitions/FamilyWoPatient"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientWithWallet"
		},
		"PatientWoAddress": {
			"type": "object",
			"properties": {
				"age": {
					"type": "string"
				},
				"ageType": {
					"type": "string"
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"dateofbirth": {
					"type": "string"
				},
				"doseAlertFlag": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"family": {
					"$ref": "#/definitions/FamilyWoPatient"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientWoAddress"
		},
		"PatientWoFamily": {
			"type": "object",
			"properties": {
				"age": {
					"type": "integer",
					"format": "int64"
				},
				"ageType": {
					"type": "string"
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"dateofbirth": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "PatientWoFamily"
		},
		"Patients": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Addresses"
					}
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"dateofbirth": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"family": {
					"$ref": "#/definitions/Families"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isPartialDetails": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "Patients"
		},
		"PatientsAppointmentForMessageRouter": {
			"type": "object",
			"properties": {
				"dateofbirth": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"gender": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				}
			},
			"title": "PatientsAppointmentForMessageRouter"
		},
		"PatientsForClinics": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Addresses"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				}
			},
			"title": "PatientsForClinics"
		},
		"PatientsForConsultation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				}
			},
			"title": "PatientsForConsultation"
		},
		"PopularSearchAndFamilyTest": {
			"type": "object",
			"properties": {
				"familyTests": {
					"$ref": "#/definitions/FamilyTestDto"
				},
				"packages": {
					"$ref": "#/definitions/OrderSearchObject"
				},
				"tests": {
					"$ref": "#/definitions/OrderSearchObject"
				}
			},
			"title": "PopularSearchAndFamilyTest"
		},
		"Precaution": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypePrecautions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypePrecaution"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Precaution"
		},
		"Precautions": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Precautions"
		},
		"Prescription": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "number",
					"format": "double"
				},
				"code": {
					"type": "string"
				},
				"completionDay": {
					"type": "integer",
					"format": "int64"
				},
				"completionPercentage": {
					"type": "number",
					"format": "double"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalComments": {
					"type": "string"
				},
				"isDeferred": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isSos": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"medicineGeneral": {
					"$ref": "#/definitions/MedicineGeneral"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinic"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventory"
					}
				},
				"medicineInventory": {
					"$ref": "#/definitions/MedicineInventory"
				},
				"morningQuantity": {
					"type": "number",
					"format": "double"
				},
				"nightQuantity": {
					"type": "number",
					"format": "double"
				},
				"prescriptionByDates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				},
				"prescriptionDescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionDescription"
					}
				},
				"quantityKey": {
					"type": "string"
				},
				"secondaryMedicine": {
					"$ref": "#/definitions/SecondaryMedicine"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				},
				"specialCondition": {
					"type": "string"
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssue"
					}
				},
				"unitQuantity": {
					"type": "number",
					"format": "double"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Prescription"
		},
		"PrescriptionByDate": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"date": {
					"$ref": "#/definitions/Timestamp"
				},
				"frequency": {
					"type": "string",
					"enum": [
						"AFTERNOON",
						"EVENING",
						"MORNING",
						"NIGHT",
						"SOS"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSos": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"prescription": {
					"$ref": "#/definitions/Prescription"
				},
				"prescriptionDescription": {
					"$ref": "#/definitions/PrescriptionDescription"
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING",
						"TAKEN",
						"SKIPPED"
					]
				}
			},
			"title": "PrescriptionByDate"
		},
		"PrescriptionByDateAndPatient": {
			"type": "object",
			"properties": {
				"patient": {
					"$ref": "#/definitions/PatientWoAddress"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDatesForOngoingMedication"
					}
				}
			},
			"title": "PrescriptionByDateAndPatient"
		},
		"PrescriptionByDatesForOngoingMedication": {
			"type": "object",
			"properties": {
				"frequency": {
					"type": "string",
					"enum": [
						"AFTERNOON",
						"EVENING",
						"MORNING",
						"NIGHT",
						"SOS"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"prescription": {
					"$ref": "#/definitions/PrescriptionsForOngoingMedication"
				}
			},
			"title": "PrescriptionByDatesForOngoingMedication"
		},
		"PrescriptionDescription": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "number",
					"format": "double"
				},
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicationDate"
					}
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "number",
					"format": "double"
				},
				"frequency": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSos": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"morningQuantity": {
					"type": "number",
					"format": "double"
				},
				"nightQuantity": {
					"type": "number",
					"format": "double"
				},
				"otherSpecialConditionNote": {
					"type": "string"
				},
				"prescription": {
					"$ref": "#/definitions/Prescription"
				},
				"prescriptionByDate": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				},
				"quantity": {
					"type": "number",
					"format": "double"
				},
				"quantityKey": {
					"type": "string"
				},
				"secondaryMedicine": {
					"$ref": "#/definitions/SecondaryMedicine"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				},
				"specialCondition": {
					"type": "string"
				},
				"startDate": {
					"type": "string",
					"format": "date-time"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PrescriptionDescription"
		},
		"PrescriptionDescriptionDto": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "number",
					"format": "double"
				},
				"consumptionDates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Timestamp"
					}
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"isVariable": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "number",
					"format": "double"
				},
				"frequency": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSos": {
					"type": "boolean"
				},
				"morningQuantity": {
					"type": "number",
					"format": "double"
				},
				"nightQuantity": {
					"type": "number",
					"format": "double"
				},
				"otherSpecialConditionNote": {
					"type": "string"
				},
				"quantity": {
					"type": "number",
					"format": "double"
				},
				"quantityKey": {
					"type": "string"
				},
				"reasonId": {
					"type": "integer",
					"format": "int64"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				},
				"specialCondition": {
					"type": "string"
				},
				"isSpecialCondition": {
					"type": "string"
				},
				"startDate": {
					"type": "string",
					"format": "date-time"
				},
				"frequencyKey": {
					"$ref": "#/definitions/FrequencyKeyDto"
				}
			},
			"title": "PrescriptionDescriptionDto"
		},
		"FrequencyKeyDto": {
			"type": "object",
			"properties": {
				"frequency": {
					"type": "string"
				},
				"skipDays": {
					"type": "string"
				}
			},
			"title": "FrequencyKeyDto"
		},
		"PrescriptionDescriptions": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "number",
					"format": "double"
				},
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicationDates"
					}
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "number",
					"format": "double"
				},
				"frequency": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSos": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"morningQuantity": {
					"type": "number",
					"format": "double"
				},
				"nightQuantity": {
					"type": "number",
					"format": "double"
				},
				"quantity": {
					"type": "number",
					"format": "double"
				},
				"quantityKey": {
					"type": "string"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				},
				"specialCondition": {
					"type": "string"
				},
				"startDate": {
					"type": "string",
					"format": "date-time"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PrescriptionDescriptions"
		},
		"PrescriptionDetail": {
			"type": "object",
			"properties": {
				"completeDays": {
					"type": "number",
					"format": "float"
				},
				"completionPercentage": {
					"type": "integer",
					"format": "int32"
				},
				"days": {
					"type": "number",
					"format": "float"
				},
				"status": {
					"type": "string"
				}
			},
			"title": "PrescriptionDetail"
		},
		"PrescriptionForEPrescription": {
			"type": "object",
			"properties": {
				"declineReason": {
					"$ref": "#/definitions/DeclineReasonForPrescription"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeferred": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineWoPrescription"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinicForPharmacy"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventories"
					}
				},
				"specialCondition": {
					"type": "string"
				},
				"unitQuantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PrescriptionForEPrescription"
		},
		"PrescriptionForPatientHistory": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"code": {
					"type": "string"
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineWoPrescription"
				},
				"morningQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"nightQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptionDescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionDescriptions"
					}
				},
				"quantityKey": {
					"type": "string"
				},
				"specialCondition": {
					"type": "string"
				},
				"unitQuantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PrescriptionForPatientHistory"
		},
		"PrescriptionForViewPrescription": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"code": {
					"type": "string"
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"isCompleted": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineWoPrescription"
				},
				"morningQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"nightQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"quantityKey": {
					"type": "string"
				},
				"sos": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientSOS"
					}
				},
				"specialCondition": {
					"type": "string"
				},
				"unitQuantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PrescriptionForViewPrescription"
		},
		"PrescriptionMetadataRequestDto": {
			"type": "object",
			"properties": {
				"prescriptionDescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionDescriptionDto"
					}
				},
				"prescriptionId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "PrescriptionMetadataRequestDto"
		},
		"PrescriptionWithDescription": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"prescriptionDescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionDescriptions"
					}
				}
			},
			"title": "PrescriptionWithDescription"
		},
		"Prescriptions": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "number",
					"format": "double"
				},
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReasonForPrescription"
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalComments": {
					"type": "string"
				},
				"isDeferred": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineWoPrescription"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinicForPharmacy"
				},
				"medicineInventory": {
					"$ref": "#/definitions/MedicineInventories"
				},
				"morningQuantity": {
					"type": "number",
					"format": "double"
				},
				"nightQuantity": {
					"type": "number",
					"format": "double"
				},
				"prescriptionDescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionDescriptions"
					}
				},
				"quantityKey": {
					"type": "string"
				},
				"secondaryMedicine": {
					"$ref": "#/definitions/SecondaryMedicines"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				},
				"specialCondition": {
					"type": "string"
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssues"
					}
				},
				"unitQuantity": {
					"type": "number",
					"format": "double"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Prescriptions"
		},
		"PrescriptionsForOngoingMedication": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"medicine": {
					"$ref": "#/definitions/MedicineWoPrescriptionForOngoingMedication"
				}
			},
			"title": "PrescriptionsForOngoingMedication"
		},
		"PresignedGetUrlDto": {
			"type": "object",
			"properties": {
				"fileNames": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "PresignedGetUrlDto"
		},
		"ProcedureDto": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeferred": {
					"type": "boolean"
				},
				"length": {
					"type": "string"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "string"
				},
				"procedureDate": {
					"type": "string",
					"format": "date-time"
				},
				"settleMedicalProcedure": {
					"type": "boolean"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ProcedureDto"
		},
		"ProcedureType": {
			"type": "object",
			"properties": {
				"cgst": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicalProcedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedure"
					}
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "string"
				},
				"sgst": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ProcedureType"
		},
		"ProcedureTypeForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ProcedureTypeForRecommendation"
		},
		"ProcedureTypes": {
			"type": "object",
			"properties": {
				"cgst": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "string"
				},
				"sgst": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ProcedureTypes"
		},
		"ProcedureTypesForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ProcedureTypesForRecommendation"
		},
		"Progress": {
			"type": "object",
			"properties": {
				"completeDays": {
					"type": "integer",
					"format": "int32"
				},
				"completePercentage": {
					"type": "integer",
					"format": "int32"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorForOnGoingMedication"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"duration": {
					"type": "integer",
					"format": "int32"
				},
				"isCompleted": {
					"type": "boolean"
				},
				"message": {
					"type": "string"
				},
				"patientPrescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientPrescription"
					}
				},
				"patientSOS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientSOS"
					}
				},
				"prescribedBy": {
					"type": "string"
				},
				"prescriptionDetail": {
					"$ref": "#/definitions/PrescriptionDetail"
				}
			},
			"title": "Progress"
		},
		"ReasonDto": {
			"type": "object",
			"properties": {
				"reason": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"OVER_ALL"
					]
				}
			},
			"title": "ReasonDto"
		},
		"ReasonEditDto": {
			"type": "object",
			"properties": {
				"isActive": {
					"type": "boolean"
				},
				"reasonId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ReasonEditDto"
		},
		"RecommendationAdviceDto": {
			"type": "object",
			"properties": {
				"advice": {
					"$ref": "#/definitions/AdvicesForRecommendation"
				},
				"creationTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypesForRecommendation"
					}
				}
			},
			"title": "RecommendationAdviceDto"
		},
		"RecommendationBulkUploadDto": {
			"type": "object",
			"properties": {
				"adviceDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AdviceDto"
					}
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosisDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosisDto"
					}
				},
				"diagnosticUniverseDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticUniverseDto"
					}
				},
				"isEdit": {
					"type": "boolean"
				},
				"medicineAndPrescriptionDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineAndPrescriptionDto"
					}
				},
				"medicineInClinicDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInClinicDto"
					}
				},
				"minutes": {
					"type": "integer",
					"format": "int64"
				},
				"procedureDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProcedureDto"
					}
				},
				"symptomDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomDto"
					}
				}
			},
			"title": "RecommendationBulkUploadDto"
		},
		"RecommendationConsultationBody": {
			"type": "object",
			"properties": {
				"aboutDoctor": {
					"type": "string"
				},
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AdvicesForRecommendation"
					}
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"clinicAddress": {
					"type": "string"
				},
				"clinicName": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosisTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosisTypesForRecommendation"
					}
				},
				"diagnosticTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypesForRecommendation"
					}
				},
				"doctorAffiliation": {
					"type": "string"
				},
				"doctorExperience": {
					"type": "string"
				},
				"doctorName": {
					"type": "string"
				},
				"doctorPhone": {
					"type": "string"
				},
				"doctorProfilePic": {
					"type": "string"
				},
				"doctorRegistrationNumber": {
					"type": "string"
				},
				"doctorTimings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTiming"
					}
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicinesForRecommendation"
					}
				},
				"patientAge": {
					"type": "string"
				},
				"patientName": {
					"type": "string"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"procedureTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProcedureTypesForRecommendation"
					}
				},
				"qualifications": {
					"type": "string"
				},
				"secondaryMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SecondaryMedicines"
					}
				},
				"specialities": {
					"type": "string"
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypesForRecommendation"
					}
				},
				"weight": {
					"type": "string"
				},
				"followupDate": {
					"type": "string"
				},
				"followupNote": {
					"type": "string"
				}
			},
			"title": "RecommendationConsultationBody"
		},
		"RecommendationDiagnosisTypeDto": {
			"type": "object",
			"properties": {
				"creationTime": {
					"type": "string",
					"format": "date-time"
				},
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisTypesForRecommendation"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypesForRecommendation"
					}
				}
			},
			"title": "RecommendationDiagnosisTypeDto"
		},
		"RecommendationDiagnosticTypeDto": {
			"type": "object",
			"properties": {
				"creationTime": {
					"type": "string",
					"format": "date-time"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypesForRecommendation"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypesForRecommendation"
					}
				}
			},
			"title": "RecommendationDiagnosticTypeDto"
		},
		"RecommendationDto": {
			"type": "object",
			"properties": {
				"medicineFlag": {
					"type": "boolean"
				},
				"symptomTypeNames": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "RecommendationDto"
		},
		"RecommendationEngineResponseBody": {
			"type": "object",
			"properties": {
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AdviceForRecommendation"
					}
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosisTypeForRecommendation"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeForRecommendation"
					}
				},
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineForRecommendation"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProcedureTypeForRecommendation"
					}
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "RecommendationEngineResponseBody"
		},
		"RecommendationMedicineDto": {
			"type": "object",
			"properties": {
				"creationTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"medicine": {
					"$ref": "#/definitions/MedicinesForRecommendation"
				},
				"medicineInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypesForRecommendation"
					}
				}
			},
			"title": "RecommendationMedicineDto"
		},
		"RecommendationOrderItemDto": {
			"type": "object",
			"properties": {
				"batchId": {
					"type": "string"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticTypeInLabId": {
					"type": "integer",
					"format": "int64"
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"inventoryUnitQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isPayLater": {
					"type": "boolean"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"medicineInventoryId": {
					"type": "integer",
					"format": "int64"
				},
				"micId": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptionUnitQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"procedureId": {
					"type": "integer",
					"format": "int64"
				},
				"procedureTypePrice": {
					"type": "string"
				},
				"scheduleType": {
					"type": "string"
				},
				"settleAmount": {
					"type": "boolean"
				},
				"settleConsultationAmount": {
					"type": "boolean"
				}
			},
			"title": "RecommendationOrderItemDto"
		},
		"RecommendationPosDto": {
			"type": "object",
			"properties": {
				"addressId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"isEdit": {
					"type": "boolean"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"orderId": {
					"type": "integer",
					"format": "int64"
				},
				"orderItemConsultation": {
					"$ref": "#/definitions/RecommendationOrderItemDto"
				},
				"orderItemsDiagnostic": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationOrderItemDto"
					}
				},
				"orderItemsMedicine": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationOrderItemDto"
					}
				},
				"orderItemsProcedure": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationOrderItemDto"
					}
				},
				"payLaterForMedicine": {
					"type": "boolean"
				},
				"payNowForMedicine": {
					"type": "boolean"
				}
			},
			"title": "RecommendationPosDto"
		},
		"RecommendationProcedureTypeDto": {
			"type": "object",
			"properties": {
				"creationTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"procedureType": {
					"$ref": "#/definitions/ProcedureTypesForRecommendation"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypesForRecommendation"
					}
				}
			},
			"title": "RecommendationProcedureTypeDto"
		},
		"RecommendationSymptomTypeDto": {
			"type": "object",
			"properties": {
				"creationTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"symptomType": {
					"$ref": "#/definitions/SymptomTypesForRecommendation"
				}
			},
			"title": "RecommendationSymptomTypeDto"
		},
		"Referral": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorName": {
					"type": "string"
				},
				"doctorPhone": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"message": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Referral"
		},
		"Referrals": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"doctorName": {
					"type": "string"
				},
				"doctorPhone": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"message": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Referrals"
		},
		"ReportAndScribbleByConsultationIdDto": {
			"type": "object",
			"properties": {
				"patientHistoriesForDoctor": {
					"$ref": "#/definitions/Page«PatientHistoryForDoctor»"
				},
				"reportForDoctorAppDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ReportForDoctorAppDto"
					}
				},
				"scribbleList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ScribblewithOverlayImageDto"
					}
				}
			},
			"title": "ReportAndScribbleByConsultationIdDto"
		},
		"ReportDetailDto": {
			"type": "object",
			"properties": {
				"commentOptionsDtoList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CommentOptionsDto"
					}
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"patientAndDoctorDetailList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientAndDoctorDetailDto"
					}
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"subTitle": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"totalElements": {
					"type": "integer",
					"format": "int32"
				},
				"totalPage": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "ReportDetailDto"
		},
		"ReportDto": {
			"type": "object",
			"properties": {
				"commentOptionsDto": {
					"$ref": "#/definitions/CommentOptionsDto"
				},
				"date": {
					"$ref": "#/definitions/Timestamp"
				},
				"flag": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"patientHistoryId": {
					"type": "integer",
					"format": "int64"
				},
				"reportUrl": {
					"type": "string"
				}
			},
			"title": "ReportDto"
		},
		"ReportForDoctorAppDto": {
			"type": "object",
			"properties": {
				"date": {
					"$ref": "#/definitions/Timestamp"
				},
				"filePath": {
					"type": "string"
				},
				"testName": {
					"type": "string"
				}
			},
			"title": "ReportForDoctorAppDto"
		},
		"ResourceSupport": {
			"type": "object",
			"properties": {
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "ResourceSupport"
		},
		"Resources«Address»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Address»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Address»",
			"description": "Resources of Address"
		},
		"Resources«Advice»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Advice»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Advice»",
			"description": "Resources of Advice"
		},
		"Resources«AfterOrderPaidStatus»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«AfterOrderPaidStatus»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«AfterOrderPaidStatus»",
			"description": "Resources of AfterOrderPaidStatus",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«AllergyType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«AllergyType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«AllergyType»",
			"description": "Resources of AllergyType"
		},
		"Resources«Allergy»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Allergy»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Allergy»",
			"description": "Resources of Allergy"
		},
		"Resources«AppVersionInfo»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«AppVersionInfo»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«AppVersionInfo»",
			"description": "Resources of AppVersionInfo",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«AppointmentSummary»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«AppointmentSummary»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«AppointmentSummary»",
			"description": "Resources of AppointmentSummary",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Area»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Area»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Area»",
			"description": "Resources of Area"
		},
		"Resources«Batch»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Batch»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Batch»",
			"description": "Resources of Batch"
		},
		"Resources«Brand»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Brand»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Brand»",
			"description": "Resources of Brand"
		},
		"Resources«CentreCode»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«CentreCode»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«CentreCode»",
			"description": "Resources of CentreCode",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«City»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«City»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«City»",
			"description": "Resources of City"
		},
		"Resources«ClinicConsumable»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ClinicConsumable»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ClinicConsumable»",
			"description": "Resources of ClinicConsumable"
		},
		"Resources«ClinicDiagnosticTypeConfiguration»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ClinicDiagnosticTypeConfiguration»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ClinicDiagnosticTypeConfiguration»",
			"description": "Resources of ClinicDiagnosticTypeConfiguration",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ClinicForAdminDashboard»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ClinicForAdminDashboard»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ClinicForAdminDashboard»",
			"description": "Resources of ClinicForAdminDashboard",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ClinicsForAssistantDashboard»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ClinicsForAssistantDashboard»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ClinicsForAssistantDashboard»",
			"description": "Resources of ClinicsForAssistantDashboard",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Clinics»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Clinics»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Clinics»",
			"description": "Resources of Clinics",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Clinic»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Clinic»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Clinic»",
			"description": "Resources of Clinic"
		},
		"Resources«ClosedTimeSlot»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ClosedTimeSlot»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ClosedTimeSlot»",
			"description": "Resources of ClosedTimeSlot",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ClusterAndDiagnosticLab»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ClusterAndDiagnosticLab»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ClusterAndDiagnosticLab»",
			"description": "Resources of ClusterAndDiagnosticLab",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«CommentOnDocument»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«CommentOnDocument»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«CommentOnDocument»",
			"description": "Resources of CommentOnDocument"
		},
		"Resources«Comment»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Comment»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Comment»",
			"description": "Resources of Comment"
		},
		"Resources«ConsultationAndDoxper»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ConsultationAndDoxper»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ConsultationAndDoxper»",
			"description": "Resources of ConsultationAndDoxper"
		},
		"Resources«ConsultationForPatientSearch»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ConsultationForPatientSearch»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ConsultationForPatientSearch»",
			"description": "Resources of ConsultationForPatientSearch",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ConsultationForPrescriptionByDate»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ConsultationForPrescriptionByDate»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ConsultationForPrescriptionByDate»",
			"description": "Resources of ConsultationForPrescriptionByDate",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ConsultationHistory»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ConsultationHistory»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ConsultationHistory»",
			"description": "Resources of ConsultationHistory"
		},
		"Resources«ConsultationReason»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ConsultationReason»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ConsultationReason»",
			"description": "Resources of ConsultationReason",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Consultation»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Consultation»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Consultation»",
			"description": "Resources of Consultation",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Consumable»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Consumable»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Consumable»",
			"description": "Resources of Consumable"
		},
		"Resources«Coverage»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Coverage»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Coverage»",
			"description": "Resources of Coverage",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DateWiseAppointment»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DateWiseAppointment»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DateWiseAppointment»",
			"description": "Resources of DateWiseAppointment",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DeclineReason»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DeclineReason»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DeclineReason»",
			"description": "Resources of DeclineReason"
		},
		"Resources«Department»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Department»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Department»",
			"description": "Resources of Department",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DiagnosisTypes»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosisTypes»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosisTypes»",
			"description": "Resources of DiagnosisTypes",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DiagnosisType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosisType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosisType»",
			"description": "Resources of DiagnosisType"
		},
		"Resources«Diagnosis»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Diagnosis»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Diagnosis»",
			"description": "Resources of Diagnosis"
		},
		"Resources«DiagnosticAndPatientHistory»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticAndPatientHistory»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticAndPatientHistory»",
			"description": "Resources of DiagnosticAndPatientHistory"
		},
		"Resources«DiagnosticLabsAndZipcode»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticLabsAndZipcode»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticLabsAndZipcode»",
			"description": "Resources of DiagnosticLabsAndZipcode"
		},
		"Resources«DiagnosticLab»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticLab»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticLab»",
			"description": "Resources of DiagnosticLab"
		},
		"Resources«DiagnosticReportValue»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticReportValue»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticReportValue»",
			"description": "Resources of DiagnosticReportValue"
		},
		"Resources«DiagnosticStatusFlow»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticStatusFlow»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticStatusFlow»",
			"description": "Resources of DiagnosticStatusFlow"
		},
		"Resources«DiagnosticTypeConsumable»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticTypeConsumable»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticTypeConsumable»",
			"description": "Resources of DiagnosticTypeConsumable"
		},
		"Resources«DiagnosticTypeInLab»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticTypeInLab»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticTypeInLab»",
			"description": "Resources of DiagnosticTypeInLab"
		},
		"Resources«DiagnosticTypeItem»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticTypeItem»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticTypeItem»",
			"description": "Resources of DiagnosticTypeItem",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DiagnosticTypePrecaution»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticTypePrecaution»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticTypePrecaution»",
			"description": "Resources of DiagnosticTypePrecaution"
		},
		"Resources«DiagnosticTypeResult»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticTypeResult»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticTypeResult»",
			"description": "Resources of DiagnosticTypeResult",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DiagnosticTypeSpecimenType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticTypeSpecimenType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticTypeSpecimenType»",
			"description": "Resources of DiagnosticTypeSpecimenType"
		},
		"Resources«DiagnosticTypeStructure»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticTypeStructure»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticTypeStructure»",
			"description": "Resources of DiagnosticTypeStructure",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DiagnosticTypesForTranscription»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticTypesForTranscription»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticTypesForTranscription»",
			"description": "Resources of DiagnosticTypesForTranscription",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DiagnosticType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DiagnosticType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DiagnosticType»",
			"description": "Resources of DiagnosticType"
		},
		"Resources«Diagnostic»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Diagnostic»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Diagnostic»",
			"description": "Resources of Diagnostic"
		},
		"Resources«DoctorAdviceTag»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorAdviceTag»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorAdviceTag»",
			"description": "Resources of DoctorAdviceTag"
		},
		"Resources«DoctorInClinicClosedTimeSlot»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorInClinicClosedTimeSlot»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorInClinicClosedTimeSlot»",
			"description": "Resources of DoctorInClinicClosedTimeSlot",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DoctorInClinicConfiguration»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorInClinicConfiguration»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorInClinicConfiguration»",
			"description": "Resources of DoctorInClinicConfiguration"
		},
		"Resources«DoctorInClinicForAssistantDashboard»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorInClinicForAssistantDashboard»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorInClinicForAssistantDashboard»",
			"description": "Resources of DoctorInClinicForAssistantDashboard",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DoctorInClinicsWoConsultation»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorInClinicsWoConsultation»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorInClinicsWoConsultation»",
			"description": "Resources of DoctorInClinicsWoConsultation",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DoctorInClinics»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorInClinics»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorInClinics»",
			"description": "Resources of DoctorInClinics",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DoctorInClinic»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorInClinic»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorInClinic»",
			"description": "Resources of DoctorInClinic"
		},
		"Resources«DoctorInformation»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorInformation»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorInformation»",
			"description": "Resources of DoctorInformation",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DoctorMessageAndDoctorInClinicForMessageRouter»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorMessageAndDoctorInClinicForMessageRouter»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorMessageAndDoctorInClinicForMessageRouter»",
			"description": "Resources of DoctorMessageAndDoctorInClinicForMessageRouter",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DoctorMessageAndDoctorInClinic»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorMessageAndDoctorInClinic»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorMessageAndDoctorInClinic»",
			"description": "Resources of DoctorMessageAndDoctorInClinic"
		},
		"Resources«DoctorMessage»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorMessage»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorMessage»",
			"description": "Resources of DoctorMessage",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DoctorPatientList»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorPatientList»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorPatientList»",
			"description": "Resources of DoctorPatientList"
		},
		"Resources«DoctorTagType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorTagType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorTagType»",
			"description": "Resources of DoctorTagType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«DoctorTags»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«DoctorTags»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«DoctorTags»",
			"description": "Resources of DoctorTags",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Doctor»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Doctor»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Doctor»",
			"description": "Resources of Doctor"
		},
		"Resources«ESAdvice»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ESAdvice»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ESAdvice»",
			"description": "Resources of ESAdvice",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ESDiagnosisType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ESDiagnosisType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ESDiagnosisType»",
			"description": "Resources of ESDiagnosisType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ESDiagnosticType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ESDiagnosticType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ESDiagnosticType»",
			"description": "Resources of ESDiagnosticType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ESMedicine»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ESMedicine»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ESMedicine»",
			"description": "Resources of ESMedicine",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ESProcedureType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ESProcedureType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ESProcedureType»",
			"description": "Resources of ESProcedureType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ESSymptomType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ESSymptomType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ESSymptomType»",
			"description": "Resources of ESSymptomType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«ExistingConditionType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ExistingConditionType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ExistingConditionType»",
			"description": "Resources of ExistingConditionType"
		},
		"Resources«ExistingCondition»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ExistingCondition»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ExistingCondition»",
			"description": "Resources of ExistingCondition"
		},
		"Resources«Family»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Family»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Family»",
			"description": "Resources of Family",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«FeedbackParameter»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«FeedbackParameter»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«FeedbackParameter»",
			"description": "Resources of FeedbackParameter"
		},
		"Resources«Feedback»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Feedback»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Feedback»",
			"description": "Resources of Feedback",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«FinancialIncome»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«FinancialIncome»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«FinancialIncome»",
			"description": "Resources of FinancialIncome",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«FollowUpsForToday»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«FollowUpsForToday»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«FollowUpsForToday»",
			"description": "Resources of FollowUpsForToday",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Followup»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Followup»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Followup»",
			"description": "Resources of Followup"
		},
		"Resources«HealthProblemTagsForDoctor»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«HealthProblemTagsForDoctor»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«HealthProblemTagsForDoctor»",
			"description": "Resources of HealthProblemTagsForDoctor"
		},
		"Resources«HealthProblemTagsForSpeciality»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«HealthProblemTagsForSpeciality»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«HealthProblemTagsForSpeciality»",
			"description": "Resources of HealthProblemTagsForSpeciality"
		},
		"Resources«Issue»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Issue»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Issue»",
			"description": "Resources of Issue"
		},
		"Resources«Manufacturer»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Manufacturer»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Manufacturer»",
			"description": "Resources of Manufacturer",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«MedicalProcedure»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«MedicalProcedure»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«MedicalProcedure»",
			"description": "Resources of MedicalProcedure"
		},
		"Resources«MedicationDate»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«MedicationDate»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«MedicationDate»",
			"description": "Resources of MedicationDate"
		},
		"Resources«MedicineForTranscription»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«MedicineForTranscription»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«MedicineForTranscription»",
			"description": "Resources of MedicineForTranscription",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«MedicineGeneral»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«MedicineGeneral»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«MedicineGeneral»",
			"description": "Resources of MedicineGeneral"
		},
		"Resources«MedicineInClinic»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«MedicineInClinic»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«MedicineInClinic»",
			"description": "Resources of MedicineInClinic"
		},
		"Resources«MedicineInventory»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«MedicineInventory»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«MedicineInventory»",
			"description": "Resources of MedicineInventory"
		},
		"Resources«MedicineSalt»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«MedicineSalt»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«MedicineSalt»",
			"description": "Resources of MedicineSalt"
		},
		"Resources«MedicineSearchInTranscription»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«MedicineSearchInTranscription»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«MedicineSearchInTranscription»",
			"description": "Resources of MedicineSearchInTranscription",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Medicine»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Medicine»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Medicine»",
			"description": "Resources of Medicine"
		},
		"Resources«NetPromoterScore»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«NetPromoterScore»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«NetPromoterScore»",
			"description": "Resources of NetPromoterScore",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«NewVsReturningPatient»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«NewVsReturningPatient»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«NewVsReturningPatient»",
			"description": "Resources of NewVsReturningPatient",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PatientForNameSearch»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PatientForNameSearch»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PatientForNameSearch»",
			"description": "Resources of PatientForNameSearch",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PatientForSearchPatient»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PatientForSearchPatient»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PatientForSearchPatient»",
			"description": "Resources of PatientForSearchPatient",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PatientHistory»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PatientHistory»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PatientHistory»",
			"description": "Resources of PatientHistory",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PatientInQueue»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PatientInQueue»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PatientInQueue»",
			"description": "Resources of PatientInQueue",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PatientListDetail»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PatientListDetail»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PatientListDetail»",
			"description": "Resources of PatientListDetail",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PatientPreviousDocument»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PatientPreviousDocument»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PatientPreviousDocument»",
			"description": "Resources of PatientPreviousDocument",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PatientSymptom»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PatientSymptom»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PatientSymptom»",
			"description": "Resources of PatientSymptom",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Patient»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Patient»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Patient»",
			"description": "Resources of Patient"
		},
		"Resources«Precaution»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Precaution»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Precaution»",
			"description": "Resources of Precaution",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PrescriptionByDateAndPatient»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PrescriptionByDateAndPatient»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PrescriptionByDateAndPatient»",
			"description": "Resources of PrescriptionByDateAndPatient",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«PrescriptionByDate»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PrescriptionByDate»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PrescriptionByDate»",
			"description": "Resources of PrescriptionByDate"
		},
		"Resources«PrescriptionDescription»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«PrescriptionDescription»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«PrescriptionDescription»",
			"description": "Resources of PrescriptionDescription"
		},
		"Resources«Prescription»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Prescription»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Prescription»",
			"description": "Resources of Prescription"
		},
		"Resources«ProcedureType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«ProcedureType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«ProcedureType»",
			"description": "Resources of ProcedureType"
		},
		"Resources«Referral»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Referral»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Referral»",
			"description": "Resources of Referral"
		},
		"Resources«Salt»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Salt»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Salt»",
			"description": "Resources of Salt",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Scribble»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Scribble»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Scribble»",
			"description": "Resources of Scribble"
		},
		"Resources«SecondaryMedicine»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SecondaryMedicine»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SecondaryMedicine»",
			"description": "Resources of SecondaryMedicine",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Specialities»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Specialities»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Specialities»",
			"description": "Resources of Specialities",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«SpecialityDiagnosisType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SpecialityDiagnosisType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SpecialityDiagnosisType»",
			"description": "Resources of SpecialityDiagnosisType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«SpecialityVitalType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SpecialityVitalType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SpecialityVitalType»",
			"description": "Resources of SpecialityVitalType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Speciality»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Speciality»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Speciality»",
			"description": "Resources of Speciality"
		},
		"Resources«SpecimenTypeAndDiagnosticLab»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SpecimenTypeAndDiagnosticLab»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SpecimenTypeAndDiagnosticLab»",
			"description": "Resources of SpecimenTypeAndDiagnosticLab"
		},
		"Resources«SpecimenTypeAndVendorSample»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SpecimenTypeAndVendorSample»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SpecimenTypeAndVendorSample»",
			"description": "Resources of SpecimenTypeAndVendorSample"
		},
		"Resources«SpecimenType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SpecimenType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SpecimenType»",
			"description": "Resources of SpecimenType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«State»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«State»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«State»",
			"description": "Resources of State"
		},
		"Resources«SummeryData»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SummeryData»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SummeryData»",
			"description": "Resources of SummeryData",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«SymptomTypes»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SymptomTypes»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SymptomTypes»",
			"description": "Resources of SymptomTypes",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«SymptomType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«SymptomType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«SymptomType»",
			"description": "Resources of SymptomType"
		},
		"Resources«Symptom»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Symptom»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Symptom»",
			"description": "Resources of Symptom"
		},
		"Resources«TakenMedicine»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TakenMedicine»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TakenMedicine»",
			"description": "Resources of TakenMedicine",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Taxes»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Taxes»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Taxes»",
			"description": "Resources of Taxes",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«TestParameterMaster»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TestParameterMaster»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TestParameterMaster»",
			"description": "Resources of TestParameterMaster",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«TimeSlotGroup»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TimeSlotGroup»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TimeSlotGroup»",
			"description": "Resources of TimeSlotGroup"
		},
		"Resources«TimeSlotsGrouping»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TimeSlotsGrouping»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TimeSlotsGrouping»",
			"description": "Resources of TimeSlotsGrouping",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«TimeSlotsState»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TimeSlotsState»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TimeSlotsState»",
			"description": "Resources of TimeSlotsState",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«TimeSlotsWBooking»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TimeSlotsWBooking»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TimeSlotsWBooking»",
			"description": "Resources of TimeSlotsWBooking",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«TimeSlot»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TimeSlot»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TimeSlot»",
			"description": "Resources of TimeSlot"
		},
		"Resources«TranscriptionIssue»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TranscriptionIssue»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TranscriptionIssue»",
			"description": "Resources of TranscriptionIssue"
		},
		"Resources«TranscriptionStateFlow»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«TranscriptionStateFlow»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«TranscriptionStateFlow»",
			"description": "Resources of TranscriptionStateFlow",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Transcription»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Transcription»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Transcription»",
			"description": "Resources of Transcription"
		},
		"Resources«VisitType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«VisitType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«VisitType»",
			"description": "Resources of VisitType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«VitalType»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«VitalType»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«VitalType»",
			"description": "Resources of VitalType",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«Vital»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«Vital»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«Vital»",
			"description": "Resources of Vital"
		},
		"Resources«YourPatient»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«YourPatient»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«YourPatient»",
			"description": "Resources of YourPatient",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«long»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«long»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«long»",
			"description": "Resources of Long",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«object»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«object»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«object»",
			"description": "Resources of Object",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resources«string»": {
			"type": "object",
			"required": [
				"_embedded",
				"_links"
			],
			"properties": {
				"_embedded": {
					"$ref": "#/definitions/EmbeddedCollection«string»"
				},
				"_links": {
					"type": "object",
					"description": "Link collection",
					"additionalProperties": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resources«string»",
			"description": "Resources of String",
			"xml": {
				"name": "entities",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Address»": {
			"type": "object",
			"properties": {
				"addressTag": {
					"type": "string",
					"enum": [
						"HOME",
						"OFFICE",
						"OTHERS"
					]
				},
				"apartment": {
					"type": "string"
				},
				"area": {
					"type": "string"
				},
				"city": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"landmark": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"line": {
					"type": "string"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"locality": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"mobile": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"otherType": {
					"type": "string"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"pincode": {
					"type": "string"
				},
				"specialInstruction": {
					"type": "string"
				},
				"state": {
					"type": "string"
				}
			},
			"title": "Resource«Address»",
			"xml": {
				"name": "Resource«Address»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Advice»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"text": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Advice»",
			"xml": {
				"name": "Resource«Advice»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«AfterOrderPaidStatus»": {
			"type": "object",
			"properties": {
				"afterBatchDesc": {
					"type": "integer",
					"format": "int64"
				},
				"afterDesc": {
					"type": "integer",
					"format": "int64"
				},
				"afterInventoryDesc": {
					"type": "integer",
					"format": "int64"
				},
				"batchId": {
					"type": "integer",
					"format": "int64"
				},
				"beforeBatchDesc": {
					"type": "integer",
					"format": "int64"
				},
				"beforeDesc": {
					"type": "integer",
					"format": "int64"
				},
				"beforeInventoryDesc": {
					"type": "integer",
					"format": "int64"
				},
				"code": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"inventoryId": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicineInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"orderItemId": {
					"type": "integer",
					"format": "int64"
				},
				"quantityToDesc": {
					"type": "integer",
					"format": "int64"
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«AfterOrderPaidStatus»"
		},
		"Resource«AllergyType»": {
			"type": "object",
			"properties": {
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergy"
					}
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«AllergyType»"
		},
		"Resource«Allergy»": {
			"type": "object",
			"properties": {
				"allergyType": {
					"$ref": "#/definitions/AllergyType"
				},
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Allergy»",
			"xml": {
				"name": "Resource«Allergy»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«AppVersionInfo»": {
			"type": "object",
			"properties": {
				"appPlatform": {
					"type": "string",
					"enum": [
						"IPAD",
						"IPHONE",
						"ANDROID"
					]
				},
				"appVersion": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctor": {
					"$ref": "#/definitions/Doctor"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«AppVersionInfo»"
		},
		"Resource«Area»": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Address"
					}
				},
				"circle": {
					"type": "string"
				},
				"cluster": {
					"$ref": "#/definitions/Cluster"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"deliveryPickupState": {
					"type": "boolean"
				},
				"deliveryState": {
					"type": "boolean"
				},
				"district": {
					"type": "string"
				},
				"division": {
					"type": "string"
				},
				"headOffice": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"officeType": {
					"type": "string",
					"enum": [
						"SO",
						"HO",
						"BO"
					]
				},
				"phone": {
					"type": "string"
				},
				"pinCode": {
					"type": "string",
					"pattern": "^[1-9]{1}[0-9]{2}\\s{0,1}[0-9]{3}$"
				},
				"region": {
					"type": "string"
				},
				"state": {
					"type": "string"
				},
				"subOffice": {
					"type": "string"
				}
			},
			"title": "Resource«Area»",
			"xml": {
				"name": "Resource«Area»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Batch»": {
			"type": "object",
			"properties": {
				"barcode": {
					"type": "string"
				},
				"batchNumber": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dateOfManufacture": {
					"$ref": "#/definitions/Timestamp"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventory"
					}
				},
				"mrp": {
					"type": "number",
					"format": "double"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"sku": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Batch»"
		},
		"Resource«Brand»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"manufacturer": {
					"$ref": "#/definitions/Manufacturer"
				},
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Medicine"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Brand»"
		},
		"Resource«CentreCode»": {
			"type": "object",
			"properties": {
				"centreCode": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«CentreCode»"
		},
		"Resource«City»": {
			"type": "object",
			"properties": {
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/City"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"parent": {
					"$ref": "#/definitions/City"
				},
				"state": {
					"$ref": "#/definitions/State"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«City»",
			"xml": {
				"name": "Resource«City»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ClinicConsumable»": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"consumable": {
					"$ref": "#/definitions/Consumable"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"expectedDeliveryTime": {
					"$ref": "#/definitions/Timestamp"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"remarks": {
					"type": "string"
				},
				"status": {
					"type": "string"
				}
			},
			"title": "Resource«ClinicConsumable»",
			"xml": {
				"name": "Resource«ClinicConsumable»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ClinicDiagnosticTypeConfiguration»": {
			"type": "object",
			"properties": {
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagnosticTypeInLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«ClinicDiagnosticTypeConfiguration»"
		},
		"Resource«Clinic»": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"city": {
					"type": "string"
				},
				"clinicEmail": {
					"type": "string"
				},
				"clinicImage": {
					"type": "string"
				},
				"storeCode": {
					"type": "integer",
					"format": "int64"
				},
				"clinicManagerName": {
					"type": "string"
				},
				"clinicManagerPhone": {
					"type": "string"
				},
				"clinicPhone": {
					"type": "string"
				},
				"cluster": {
					"type": "string"
				},
				"coBrandingImage": {
					"type": "string"
				},
				"coBrandingName": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"invoiceCode": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCoBranded": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"labCode": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"logoUrl": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"mapLink": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"phoneNumber": {
					"type": "string"
				},
				"pincode": {
					"type": "integer",
					"format": "int32"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"slug": {
					"type": "string"
				},
				"username": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"warehouseCode": {
					"type": "string"
				}
			},
			"title": "Resource«Clinic»"
		},
		"Resource«ClosedTimeSlot»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinicClosedTimeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicClosedTimeSlot"
					}
				},
				"end": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"start": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«ClosedTimeSlot»"
		},
		"Resource«ClusterAndDiagnosticLab»": {
			"type": "object",
			"properties": {
				"cluster": {
					"$ref": "#/definitions/Cluster"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resource«ClusterAndDiagnosticLab»"
		},
		"Resource«Cluster»": {
			"type": "object",
			"properties": {
				"areas": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Area"
					}
				},
				"clusterAndDiagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClusterAndDiagnosticLab"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				}
			},
			"title": "Resource«Cluster»"
		},
		"Resource«CommentOnDocument»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistory"
					}
				},
				"patientPreviousDocuments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientPreviousDocument"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«CommentOnDocument»"
		},
		"Resource«CommentsByPatientDetails»": {
			"type": "object",
			"properties": {
				"comments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Comment"
					}
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"rating": {
					"type": "number",
					"format": "double"
				}
			},
			"title": "Resource«CommentsByPatientDetails»",
			"xml": {
				"name": "Resource«CommentsByPatientDetails»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Comment»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Comment"
					}
				},
				"compliments": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"description": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"parentComment": {
					"$ref": "#/definitions/Comment"
				},
				"patientHistoryForComment": {
					"$ref": "#/definitions/PatientHistory"
				},
				"rating": {
					"type": "number",
					"format": "double"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Comment»",
			"xml": {
				"name": "Resource«Comment»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ConsultationAndDoxpers»": {
			"type": "object",
			"properties": {
				"consultation": {
					"$ref": "#/definitions/ConsultationForDoxper"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForDoxper"
				},
				"doxperFilePath": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"notificationSource": {
					"type": "string",
					"enum": [
						"MEDDO",
						"DOXPER"
					]
				},
				"patientName": {
					"type": "string"
				},
				"patientPhoneNumber": {
					"type": "string"
				},
				"qrCode": {
					"type": "string"
				},
				"scribble": {
					"$ref": "#/definitions/ScribbleForDoxper"
				},
				"status": {
					"type": "string",
					"enum": [
						"START",
						"END",
						"UPDATE",
						"UPLOAD"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«ConsultationAndDoxpers»",
			"xml": {
				"name": "Resource«ConsultationAndDoxpers»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ConsultationAndDoxper»": {
			"type": "object",
			"properties": {
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"doxperFilePath": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"notificationSource": {
					"type": "string",
					"enum": [
						"MEDDO",
						"DOXPER"
					]
				},
				"patientName": {
					"type": "string"
				},
				"patientPhoneNumber": {
					"type": "string"
				},
				"qrCode": {
					"type": "string"
				},
				"scribble": {
					"$ref": "#/definitions/Scribble"
				},
				"status": {
					"type": "string",
					"enum": [
						"START",
						"END",
						"UPDATE",
						"UPLOAD"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«ConsultationAndDoxper»",
			"xml": {
				"name": "Resource«ConsultationAndDoxper»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ConsultationDoxperQrCodeBody»": {
			"type": "object",
			"properties": {
				"consultationDetailsForDoxpers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationDetailsForDoxper"
					}
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"qrCode": {
					"type": "string"
				}
			},
			"title": "Resource«ConsultationDoxperQrCodeBody»",
			"xml": {
				"name": "Resource«ConsultationDoxperQrCodeBody»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ConsultationForViewPrescription»": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForViewPrescription"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionForViewPrescription"
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribbles"
					}
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vitals"
					}
				}
			},
			"title": "Resource«ConsultationForViewPrescription»",
			"xml": {
				"name": "Resource«ConsultationForViewPrescription»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ConsultationHistory»": {
			"type": "object",
			"properties": {
				"appointmentTimeString": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"currentStatus": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"previousStatus": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«ConsultationHistory»"
		},
		"Resource«ConsultationReason»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"reason": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"OVER_ALL"
					]
				}
			},
			"title": "Resource«ConsultationReason»"
		},
		"Resource«ConsultationSummaryProgress»": {
			"type": "object",
			"properties": {
				"diagnosisForConsultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosisForConsultation"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"progress": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Progress"
					}
				},
				"sosDetails": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SosDetails"
					}
				},
				"summary": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Summary"
					}
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomType"
					}
				},
				"viewPrescription": {
					"$ref": "#/definitions/ConsultationForViewPrescription"
				}
			},
			"title": "Resource«ConsultationSummaryProgress»",
			"xml": {
				"name": "Resource«ConsultationSummaryProgress»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ConsultationsForDeclineReasonsWithPatientAndDoctorInClinic»": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicForReasonCoding"
				},
				"hasDeclineReason": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patient": {
					"$ref": "#/definitions/PatientsForClinics"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescriptions"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "Resource«ConsultationsForDeclineReasonsWithPatientAndDoctorInClinic»",
			"xml": {
				"name": "Resource«ConsultationsForDeclineReasonsWithPatientAndDoctorInClinic»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ConsultationsForDeclineReasons»": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"hasDeclineReason": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
			    "isOtpSkipped": {
					"type": "boolean"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescriptions"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				}
			},
			"title": "Resource«ConsultationsForDeclineReasons»",
			"xml": {
				"name": "Resource«ConsultationsForDeclineReasons»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ConsultationsForEPrescription»": {
			"type": "object",
			"properties": {
				"address": {
					"$ref": "#/definitions/Addresses"
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsForEPrescription"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isPrepaid": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/PatientForEPrescription"
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"isOtpSkipped": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
				    "type": "boolean"
				},
				"isUsedFreeFollowUp": {
				    "type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionForEPrescription"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribbles"
					}
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "Resource«ConsultationsForEPrescription»",
			"xml": {
				"name": "Resource«ConsultationsForEPrescription»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Consultations»": {
			"type": "object",
			"properties": {
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Advices"
					}
				},
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergies"
					}
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"clinicManagerNote": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultationHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationHistories"
					}
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnoses"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostics"
					}
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsWoConsultation"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditions"
					}
				},
				"followups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Followups"
					}
				},
				"isOtpSkipped": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isOnline": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicineTaken": {
					"type": "string"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistoriesWoPatientNdConsultation"
					}
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescriptions"
					}
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedures"
					}
				},
				"referralPhone": {
					"type": "string"
				},
				"referrals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Referrals"
					}
				},
				"referredByDoctor": {
					"type": "string"
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribbles"
					}
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"followupStatus":{
	                "type": "string",
	                    "enum": [
		                    "NOT_APPLICABLE",
		                    "APPLICABLE",
		                    "USED",
		                    "NOT_USED",
		                    "EXPIRED"
	                    ]
                },
                "followupValidTill": {
                    "$ref": "#/definitions/Timestamp"
                },
                "isFollowUp": {
					"type": "boolean"
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptoms"
					}
				},
				"takenMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TakenMedicines"
					}
				},
				"timeSlot": {
					"$ref": "#/definitions/TimeSlotsWoConsultation"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vitals"
					}
				}
			},
			"title": "Resource«Consultations»",
			"xml": {
				"name": "Resource«Consultations»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Consultation»": {
			"type": "object",
			"properties": {
				"address": {
					"$ref": "#/definitions/Address"
				},
				"advices": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Advice"
					}
				},
				"allergies": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Allergy"
					}
				},
				"appointmentDateString": {
					"type": "string"
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"clinicManagerNote": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"consultationAndDoxpers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxper"
					}
				},
				"consultationHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationHistory"
					}
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdBy": {
					"type": "string"
				},
				"dateOnly": {
					"type": "string",
					"format": "date-time"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnosis"
					}
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"doctorAdviceTag": {
					"$ref": "#/definitions/DoctorAdviceTag"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingCondition"
					}
				},
				"followups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Followup"
					}
				},
				"hasDeclineReason": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"initialPriorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"isPrepaid": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isOnline": {
					"type": "boolean"
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"isOtpSkipped": {
					"type": "boolean"
				},
				"isSubscriptionApplied": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicineTaken": {
					"type": "string"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"mostRecentFollowup": {
					"$ref": "#/definitions/Followup"
				},
				"note": {
					"type": "string"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"optOutReason": {
					"type": "string"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistory"
					}
				},
				"patientSymptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientSymptom"
					}
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"prescriptionByDates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				},
				"previousConsultationId": {
					"type": "integer",
					"format": "int64"
				},
				"priorityQueues": {
					"type": "integer",
					"format": "int64"
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedure"
					}
				},
				"qrCode": {
					"type": "string"
				},
				"referralPhone": {
					"type": "string"
				},
				"referrals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Referral"
					}
				},
				"referredByDoctor": {
					"type": "string"
				},
				"scribbles": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Scribble"
					}
				},
				"settleConsultationAmount": {
					"type": "boolean"
				},
				"onGoingTreatmentsAndMedicines" : {
				"type": "array",
					"items": {
						"$ref": "#/definitions/OnGoingTreatmentsAndMedicines"
					}
				},
				"bodyTemperature": {
				    "type": "string"
				},
				"acceptPathology": {
					"type": "boolean"
				},
				"acceptMedicine": {
					"type": "boolean"
				},
				"communicationMode": {
					"type": "string",
					"enum": [
						"AUDIO",
						"VIDEO",
						"NORMAL",
						"BOTH",
						"IN_CLINIC"
					]
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING", "OPEN",
						"CHECKED_IN",
						"NO_SHOW",
						"AWAITING",
						"PRESCRIBED",
						"VISITED",
						"TRANSCRIBING_ISSUE",
						"TRANSCRIBING",
						"TRANSCRIBED",
						"RESCHEDULED",
						"INVOICED",
						"CANCELLED",
						"DONE",
						"EDITED"
					]
				},
				"followupStatus":{
	                "type": "string",
	                    "enum": [
		                    "NOT_APPLICABLE",
		                    "APPLICABLE",
		                    "USED",
		                    "NOT_USED",
		                    "EXPIRED"
	                    ]
                },
                "followupValidTill": {
                    "$ref": "#/definitions/Timestamp"
                },
                "isFollowUp": {
					"type": "boolean"
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptom"
					}
				},
				"takenMedicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TakenMedicine"
					}
				},
				"timeSlot": {
					"$ref": "#/definitions/TimeSlot"
				},
				"transcriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Transcription"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitType": {
					"$ref": "#/definitions/VisitType"
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Vital"
					}
				}
			},
			"title": "Resource«Consultation»"
		},
		"Resource«Consumable»": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"clinicConsumables": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ClinicConsumable"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypeConsumables": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeConsumable"
					}
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "double"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"refCode": {
					"type": "string"
				},
				"sku": {
					"type": "string"
				}
			},
			"title": "Resource«Consumable»"
		},
		"Resource«DeclineReason»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				},
				"procedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedure"
					}
				},
				"rank": {
					"type": "integer",
					"format": "int64"
				},
				"reason": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DeclineReason»"
		},
		"Resource«Department»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticType"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Department»"
		},
		"Resource«DiagnosisType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"critical": {
					"type": "boolean"
				},
				"diagnoses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnosis"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosisType»"
		},
		"Resource«Diagnosis»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isAcute": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isProvisional": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Diagnosis»",
			"xml": {
				"name": "Resource«Diagnosis»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«DiagnosticAndPatientHistory»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patientHistory": {
					"$ref": "#/definitions/PatientHistory"
				}
			},
			"title": "Resource«DiagnosticAndPatientHistory»",
			"xml": {
				"name": "Resource«DiagnosticAndPatientHistory»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«DiagnosticLabsAndZipcode»": {
			"type": "object",
			"properties": {
				"clusterName": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"invoiceCode": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"labCode": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"warehouseCode": {
					"type": "string"
				},
				"zipcode": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticLabsAndZipcode»"
		},
		"Resource«DiagnosticLab»": {
			"type": "object",
			"properties": {
				"address": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"contactDetails": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"email": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"logo": {
					"type": "string"
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"routingQueue": {
					"type": "string"
				},
				"routingQueueReport": {
					"type": "string"
				},
				"orderUrl": {
					"type": "string"
				},
				"reportUrl": {
					"type": "string"
				},
				"apiKey": {
					"type": "string"
				},
				"apiUser": {
					"type": "string"
				},
				"pccCode": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"workingHours": {
					"type": "string"
				}
			},
			"title": "Resource«DiagnosticLab»"
		},
		"Resource«DiagnosticReportValue»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"description": {
					"type": "string"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"method": {
					"type": "string"
				},
				"observation": {
					"type": "string"
				},
				"observationTime": {
					"$ref": "#/definitions/Timestamp"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"referenceRange": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticReportValue»",
			"xml": {
				"name": "Resource«DiagnosticReportValue»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«DiagnosticStatusFlow»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"status": {
					"type": "string",
					"enum": [
						"FUTURE",
						"PRESENT",
						"PAST"
					]
				}
			},
			"title": "Resource«DiagnosticStatusFlow»"
		},
		"Resource«DiagnosticTypeConsumable»": {
			"type": "object",
			"properties": {
				"consumable": {
					"$ref": "#/definitions/Consumable"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"defaultQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resource«DiagnosticTypeConsumable»"
		},
		"Resource«DiagnosticTypeInLab»": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isAddressMandatory": {
					"type": "boolean"
				},
				"isPickup": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"latitude": {
					"type": "number",
					"format": "double"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"longitude": {
					"type": "number",
					"format": "double"
				},
				"margin": {
					"type": "string"
				},
				"onPremise": {
					"type": "boolean"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"processingTime": {
					"type": "string"
				},
				"procurementPrice": {
					"type": "number",
					"format": "float"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"tat": {
					"type": "string"
				},
				"taxes": {
					"$ref": "#/definitions/Taxes"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticTypeInLab»",
			"xml": {
				"name": "Resource«DiagnosticTypeInLab»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«DiagnosticTypeItem»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"diagnosticTypeResults": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeResult"
					}
				},
				"highMessage": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"lowMessage": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"normalFrom": {
					"type": "number",
					"format": "float"
				},
				"normalTo": {
					"type": "number",
					"format": "float"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticTypeItem»"
		},
		"Resource«DiagnosticTypePrecaution»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"precaution": {
					"$ref": "#/definitions/Precaution"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticTypePrecaution»",
			"xml": {
				"name": "Resource«DiagnosticTypePrecaution»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«DiagnosticTypeResult»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comment": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/Diagnostic"
				},
				"diagnosticTypeItem": {
					"$ref": "#/definitions/DiagnosticTypeItem"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"result": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticTypeResult»"
		},
		"Resource«DiagnosticTypeSpecimenType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"specimenType": {
					"$ref": "#/definitions/SpecimenType"
				},
				"specimenTypeAndDiagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecimenTypeAndDiagnosticLab"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticTypeSpecimenType»"
		},
		"Resource«DiagnosticTypeStructure»": {
			"type": "object",
			"properties": {
				"child": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"parent": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticTypeStructure»"
		},
		"Resource«DiagnosticType»": {
			"type": "object",
			"properties": {
				"abbreviation": {
					"type": "string"
				},
				"alias": {
					"type": "string"
				},
				"childStructures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeStructure"
					}
				},
				"children": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticType"
					}
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"department": {
					"$ref": "#/definitions/Department"
				},
				"description": {
					"type": "string"
				},
				"diagnosticTypeInLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeInLab"
					}
				},
				"diagnosticTypePrecautions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypePrecaution"
					}
				},
				"diagnosticTypeSpecimenTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeSpecimenType"
					}
				},
				"diagnosticTypeStatus": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"diagnostics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnostic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCamp": {
					"type": "boolean"
				},
				"isCombo": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"parent": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"parentStructures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeStructure"
					}
				},
				"popularity": {
					"type": "integer",
					"format": "int32"
				},
				"preCondition": {
					"type": "string"
				},
				"precautions": {
					"type": "string"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"sampleType": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DiagnosticType»"
		},
		"Resource«Diagnostics»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypesForTranscription"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagonsticTypeInLabsWoDiagnostics"
				},
				"diagnosticTypeInLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeInLabsForTests"
					}
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPayLater": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"scheduleType": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Diagnostics»",
			"xml": {
				"name": "Resource«Diagnostics»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Diagnostic»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comments": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"deferred": {
					"type": "boolean"
				},
				"diagnosticReportValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticReportValue"
					}
				},
				"diagnosticStatusFlows": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticStatusFlow"
					}
				},
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticType"
				},
				"diagnosticTypeInLab": {
					"$ref": "#/definitions/DiagnosticTypeInLab"
				},
				"diagnosticTypeResults": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeResult"
					}
				},
				"diagnosticsAndPatientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticAndPatientHistory"
					}
				},
				"dueBy": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isPayLater": {
					"type": "boolean"
				},
				"isPickUp": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"scheduleType": {
					"type": "string"
				},
				"state": {
					"type": "string",
					"enum": [
						"OPEN",
						"COLLECTED",
						"CLINIC_DEPOSIT",
						"ACKNOWLEADGE",
						"CENTER_DEPOSITED",
						"CENTER_AKNOWLEADGE",
						"REPORT",
						"DONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Diagnostic»"
		},
		"Resource«DoctorAdviceTag»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				}
			},
			"title": "Resource«DoctorAdviceTag»"
		},
		"Resource«DoctorInClinicClosedTimeSlot»": {
			"type": "object",
			"properties": {
				"closedTimeSlot": {
					"$ref": "#/definitions/ClosedTimeSlot"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				}
			},
			"title": "Resource«DoctorInClinicClosedTimeSlot»"
		},
		"Resource«DoctorInClinicConfiguration»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"keyName": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"value": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DoctorInClinicConfiguration»"
		},
		"Resource«DoctorInClinic»": {
			"type": "object",
			"properties": {
				"billingType": {
					"type": "string",
					"enum": [
						"SBSC",
						"SBSCWITHDOCTORPOS",
						"MBSC",
						"MBNC"
					]
				},
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"code": {
					"type": "string"
				},
				"consultationAndDoxpers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxper"
					}
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"eConsultationFee": {
					"type": "number",
					"format": "float"
				},
				"consultationServiceRevenueDisabled": {
					"type": "boolean"
				},
				"consultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Consultation"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/Doctor"
				},
				"doctorInClinicClosedTimeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicClosedTimeSlot"
					}
				},
				"doctorInClinicConfigurations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicConfiguration"
					}
				},
				"doctorMessageAndDoctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorMessageAndDoctorInClinic"
					}
				},
				"doxperUserName": {
					"type": "string"
				},
				"hasConsultation": {
					"type": "boolean"
				},
				"hasCounselling": {
					"type": "boolean"
				},
				"hasDispensing": {
					"type": "boolean"
				},
				"hasLifesytle": {
					"type": "boolean"
				},
				"hasNutrition": {
					"type": "boolean"
				},
				"hasPathology": {
					"type": "boolean"
				},
				"hasPhysiotherapy": {
					"type": "boolean"
				},
				"hasRadiology": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isListed": {
					"type": "boolean"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"locusHomeBaseId": {
					"type": "string"
				},
				"locusTeamId": {
					"type": "string"
				},
				"mapLink": {
					"type": "string"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"messageConfigurations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MessageConfiguration"
					}
				},
				"metaDescription": {
					"type": "string"
				},
				"metaKeywords": {
					"type": "string"
				},
				"metaTitle": {
					"type": "string"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"separateConsultationInvoiceEnabled": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlot"
					}
				},
				"userLatitude": {
					"type": "number",
					"format": "double"
				},
				"userLongitude": {
					"type": "number",
					"format": "double"
				},
				"usingMeddoLite": {
					"type": "boolean"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"visitEndTime": {
					"$ref": "#/definitions/Time"
				},
				"visitStartTime": {
					"$ref": "#/definitions/Time"
				}
			},
			"title": "Resource«DoctorInClinic»",
			"xml": {
				"name": "Resource«DoctorInClinic»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«DoctorMessageAndDoctorInClinic»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"doctorMessage": {
					"$ref": "#/definitions/DoctorMessage"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				}
			},
			"title": "Resource«DoctorMessageAndDoctorInClinic»"
		},
		"Resource«DoctorMessage»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorMessageAndDoctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorMessageAndDoctorInClinic"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"message": {
					"type": "string"
				},
				"unit": {
					"type": "integer",
					"format": "int64"
				},
				"userIdApprovedBy": {
					"type": "integer",
					"format": "int64"
				},
				"userIdCreatedBy": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DoctorMessage»"
		},
		"Resource«DoctorTagType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTags"
					}
				},
				"type": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DoctorTagType»"
		},
		"Resource«DoctorTags»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"description": {
					"type": "string"
				},
				"doctor": {
					"$ref": "#/definitions/Doctor"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"tagType": {
					"$ref": "#/definitions/DoctorTagType"
				},
				"title": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«DoctorTags»"
		},
		"Resource«Doctor»": {
			"type": "object",
			"properties": {
				"aboutDoctor": {
					"type": "string"
				},
				"affiliation": {
					"type": "string"
				},
				"appPlatform": {
					"type": "string",
					"enum": [
						"IPAD",
						"IPHONE",
						"ANDROID"
					]
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinic"
					}
				},
				"experience": {
					"type": "string"
				},
				"healthProblemTagsForDoctor": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/HealthProblemTagsForDoctor"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCamp": {
					"type": "boolean"
				},
				"isTest": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"popularity": {
					"type": "number",
					"format": "float"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"rating": {
					"type": "number",
					"format": "float"
				},
				"registrationNumber": {
					"type": "string"
				},
				"service": {
					"type": "string"
				},
				"slug": {
					"type": "string"
				},
				"speciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Speciality"
					}
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorTags"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Doctor»",
			"xml": {
				"name": "Resource«Doctor»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«ESAdvice»": {
			"type": "object",
			"properties": {
				"advice": {
					"$ref": "#/definitions/AdviceForRecommendation"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "Resource«ESAdvice»"
		},
		"Resource«ESDiagnosisType»": {
			"type": "object",
			"properties": {
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisTypeForRecommendation"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "Resource«ESDiagnosisType»"
		},
		"Resource«ESDiagnosticType»": {
			"type": "object",
			"properties": {
				"diagnosticType": {
					"$ref": "#/definitions/DiagnosticTypeForRecommendation"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "Resource«ESDiagnosticType»"
		},
		"Resource«ESMedicine»": {
			"type": "object",
			"properties": {
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicine": {
					"$ref": "#/definitions/MedicineForRecommendation"
				},
				"medicineInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "Resource«ESMedicine»"
		},
		"Resource«ESProcedureType»": {
			"type": "object",
			"properties": {
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"procedureType": {
					"$ref": "#/definitions/ProcedureTypeForRecommendation"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomTypeForRecommendation"
					}
				}
			},
			"title": "Resource«ESProcedureType»"
		},
		"Resource«ESSymptomType»": {
			"type": "object",
			"properties": {
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityForRecommendation"
					}
				},
				"symptomType": {
					"$ref": "#/definitions/SymptomTypeForRecommendation"
				}
			},
			"title": "Resource«ESSymptomType»"
		},
		"Resource«ExistingConditionType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingCondition"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«ExistingConditionType»"
		},
		"Resource«ExistingCondition»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"existingConditionType": {
					"$ref": "#/definitions/ExistingConditionType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«ExistingCondition»",
			"xml": {
				"name": "Resource«ExistingCondition»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Family»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"patient": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Patient"
					}
				},
				"primaryPhoneNumber": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Family»"
		},
		"Resource«FeedbackParameter»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isNPS": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"parent": {
					"$ref": "#/definitions/FeedbackParameter"
				}
			},
			"title": "Resource«FeedbackParameter»"
		},
		"Resource«Feedback»": {
			"type": "object",
			"properties": {
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"parameter": {
					"$ref": "#/definitions/FeedbackParameter"
				},
				"review": {
					"type": "string"
				}
			},
			"title": "Resource«Feedback»"
		},
		"Resource«Followup»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"followupDate": {
					"type": "string",
					"format": "date-time"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"note": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Followup»"
		},
		"Resource«HealthProblemTagsForDoctor»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctors": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Doctor"
					}
				},
				"healthIssue": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«HealthProblemTagsForDoctor»"
		},
		"Resource«HealthProblemTagsForSpeciality»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"healthIssue": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Speciality"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«HealthProblemTagsForSpeciality»",
			"xml": {
				"name": "Resource«HealthProblemTagsForSpeciality»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Issue»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"issue": {
					"type": "string"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssue"
					}
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Issue»"
		},
		"Resource«Manufacturer»": {
			"type": "object",
			"properties": {
				"brands": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Brand"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Manufacturer»"
		},
		"Resource«MedicalProcedure»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeferred": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"procedureDate": {
					"type": "string",
					"format": "date-time"
				},
				"procedureType": {
					"$ref": "#/definitions/ProcedureType"
				},
				"settleMedicalProcedure": {
					"type": "boolean"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«MedicalProcedure»",
			"xml": {
				"name": "Resource«MedicalProcedure»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«MedicationDate»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consumptionDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"prescriptionDescription": {
					"$ref": "#/definitions/PrescriptionDescription"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«MedicationDate»",
			"xml": {
				"name": "Resource«MedicationDate»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«MedicineGeneral»": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string",
					"enum": [
						"OTC",
						"ONLY_WITH_PRESCRIPTION",
						"SCHEDULE_X"
					]
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicineSalts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineSalt"
					}
				},
				"medicines": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Medicine"
					}
				},
				"name": {
					"type": "string"
				},
				"sku": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«MedicineGeneral»"
		},
		"Resource«MedicineInClinic»": {
			"type": "object",
			"properties": {
				"batchNumber": {
					"type": "string"
				},
				"boxNumber": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorPayout": {
					"type": "number",
					"format": "double"
				},
				"expiryDate": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventory"
					}
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				},
				"primaryId": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"shelfNumber": {
					"type": "string"
				},
				"sourceFrom": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«MedicineInClinic»"
		},
		"Resource«MedicineInventories»": {
			"type": "object",
			"properties": {
				"batch": {
					"$ref": "#/definitions/BatchesForPharmacy"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"unitQuantity": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«MedicineInventories»",
			"xml": {
				"name": "Resource«MedicineInventories»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«MedicineInventory»": {
			"type": "object",
			"properties": {
				"batch": {
					"$ref": "#/definitions/Batch"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinic"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"primaryId": {
					"type": "integer",
					"format": "int64"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"unitQuantity": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«MedicineInventory»"
		},
		"Resource«MedicineResponseDto»": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"length": {
					"type": "integer",
					"format": "int32"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			},
			"title": "Resource«MedicineResponseDto»",
			"xml": {
				"name": "Resource«MedicineResponseDto»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«MedicineSalt»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicineGeneral": {
					"$ref": "#/definitions/MedicineGeneral"
				},
				"salt": {
					"$ref": "#/definitions/Salt"
				},
				"strength": {
					"type": "string"
				},
				"unit": {
					"type": "string",
					"enum": [
						"NONE"
					]
				}
			},
			"title": "Resource«MedicineSalt»",
			"xml": {
				"name": "Resource«MedicineSalt»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«Medicine»": {
			"type": "object",
			"properties": {
				"batches": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Batch"
					}
				},
				"brand": {
					"type": "string"
				},
				"brandForMedicine": {
					"$ref": "#/definitions/Brand"
				},
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdBy": {
					"type": "string"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"dosageForm": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"index": {
					"type": "integer",
					"format": "int32"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isPresent": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicineGeneralForMedicine": {
					"$ref": "#/definitions/MedicineGeneral"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinic"
				},
				"medicineInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInClinic"
					}
				},
				"medicineQuantityInClinic": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"origin": {
					"type": "string",
					"enum": [
						"POS",
						"TRANSCRIPTION",
						"BACKEND",
						"WEBSITE",
						"PATIENT_APP",
						"DOCTOR_APP",
						"CLINIC_APP"
					]
				},
				"popularity": {
					"type": "integer",
					"format": "int32"
				},
				"posType": {
					"type": "string"
				},
				"prescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Prescription"
					}
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"primaryId": {
					"type": "integer",
					"format": "int64"
				},
				"procurementPrice": {
					"type": "number",
					"format": "double"
				},
				"quantity": {
					"type": "integer",
					"format": "int64"
				},
				"quantityInClinic": {
					"type": "integer",
					"format": "int64"
				},
				"secondaryMedicine": {
					"$ref": "#/definitions/SecondaryMedicine"
				},
				"serviceKeyUnit": {
					"type": "string"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Medicine»"
		},
		"Resource«NetPromoterScore»": {
			"type": "object",
			"properties": {
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinic"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"otherReason": {
					"type": "string"
				},
				"parameter": {
					"$ref": "#/definitions/FeedbackParameter"
				},
				"query": {
					"type": "string"
				},
				"rating": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«NetPromoterScore»"
		},
		"Resource«Page«ConsultationAndDoxpers»»": {
			"type": "object",
			"properties": {
				"content": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxpers"
					}
				},
				"empty": {
					"type": "boolean"
				},
				"first": {
					"type": "boolean"
				},
				"last": {
					"type": "boolean"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"number": {
					"type": "integer",
					"format": "int32"
				},
				"numberOfElements": {
					"type": "integer",
					"format": "int32"
				},
				"pageable": {
					"$ref": "#/definitions/Pageable"
				},
				"size": {
					"type": "integer",
					"format": "int32"
				},
				"sort": {
					"$ref": "#/definitions/Sort"
				},
				"totalElements": {
					"type": "integer",
					"format": "int64"
				},
				"totalPages": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Resource«Page«ConsultationAndDoxpers»»",
			"xml": {
				"name": "Resource«Page«ConsultationAndDoxpers»»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«PatientHistoryForMessageRouter»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationForMessageRouter"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"patientHistoryType": {
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				},
				"refLink": {
					"type": "string"
				},
				"vendorRefLink": {
					"type": "string"
				}
			},
			"title": "Resource«PatientHistoryForMessageRouter»",
			"xml": {
				"name": "Resource«PatientHistoryForMessageRouter»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«PatientHistoryForPushNotification»": {
			"type": "object",
			"properties": {
				"consultation": {
					"$ref": "#/definitions/ConsultationForNotification"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patient": {
					"$ref": "#/definitions/Patients"
				}
			},
			"title": "Resource«PatientHistoryForPushNotification»",
			"xml": {
				"name": "Resource«PatientHistoryForPushNotification»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«PatientHistoryForRecentActivitiesForDoctor»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"commentOnDocument": {
					"$ref": "#/definitions/CommentOnDocuments"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationForRecentPatientHistory"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnostic": {
					"$ref": "#/definitions/DiagnosticsWoConsultation"
				},
				"diagnosticAndPatientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticAndPatientHistoriesForRecentCare"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"patientHistoryType": {
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				},
				"patientSOSUsingPatientId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SosDetails"
					}
				},
				"refLink": {
					"type": "string"
				},
				"summaryByPatientId": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Summary"
					}
				},
				"vendorRefLink": {
					"type": "string"
				}
			},
			"title": "Resource«PatientHistoryForRecentActivitiesForDoctor»",
			"xml": {
				"name": "Resource«PatientHistoryForRecentActivitiesForDoctor»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«PatientHistory»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"patientHistoryType": {
					"type": "string",
					"enum": [
						"REPORT",
						"CONSULTATION",
						"UPLOAD_DOCUMENT",
						"FOLLOWUP"
					]
				},
				"rating": {
					"type": "number",
					"format": "double"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«PatientHistory»"
		},
		"Resource«PatientPreviousDocument»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"comment": {
					"type": "string"
				},
				"commentOnDocument": {
					"$ref": "#/definitions/CommentOnDocument"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"documentCreatedDate": {
					"type": "string",
					"format": "date-time"
				},
				"documentUrl": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patientDocumentType": {
					"type": "string",
					"enum": [
						"PRESCRIPTION",
						"DIAGNOSTIC_REPORT",
						"NONE"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«PatientPreviousDocument»"
		},
		"Resource«PatientSymptom»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«PatientSymptom»"
		},
		"Resource«Patient»": {
			"type": "object",
			"properties": {
				"addresses": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Address"
					}
				},
				"age": {
					"type": "integer",
					"format": "int64"
				},
				"ageType": {
					"type": "string"
				},
				"alternateNumber": {
					"type": "string"
				},
				"bloodGroup": {
					"type": "string"
				},
				"bloodPressure": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"commentOnDocuments": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/CommentOnDocument"
					}
				},
				"consultation": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Consultation"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dateofbirth": {
					"type": "string"
				},
				"diagnosticReportValues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticReportValue"
					}
				},
				"doseAlertFlag": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"family": {
					"$ref": "#/definitions/Family"
				},
				"gender": {
					"type": "string"
				},
				"height": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"optOutReason": {
					"type": "string"
				},
				"patientHistories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientHistory"
					}
				},
				"patientSymptom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PatientSymptom"
					}
				},
				"phone": {
					"type": "string"
				},
				"prescriptionByDates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				},
				"profilePic": {
					"type": "string"
				},
				"relation": {
					"type": "string"
				},
				"sourceIdentifier": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"weight": {
					"type": "string"
				}
			},
			"title": "Resource«Patient»"
		},
		"Resource«Precaution»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypePrecautions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypePrecaution"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Precaution»"
		},
		"Resource«PrescriptionByDate»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"date": {
					"$ref": "#/definitions/Timestamp"
				},
				"frequency": {
					"type": "string",
					"enum": [
						"AFTERNOON",
						"EVENING",
						"MORNING",
						"NIGHT",
						"SOS"
					]
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSos": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"patient": {
					"$ref": "#/definitions/Patient"
				},
				"prescription": {
					"$ref": "#/definitions/Prescription"
				},
				"prescriptionDescription": {
					"$ref": "#/definitions/PrescriptionDescription"
				},
				"status": {
					"type": "string",
					"enum": [
						"PENDING",
						"TAKEN",
						"SKIPPED"
					]
				}
			},
			"title": "Resource«PrescriptionByDate»",
			"xml": {
				"name": "Resource«PrescriptionByDate»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«PrescriptionDescription»": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "number",
					"format": "double"
				},
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicationDate"
					}
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "number",
					"format": "double"
				},
				"frequency": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isSos": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"morningQuantity": {
					"type": "number",
					"format": "double"
				},
				"nightQuantity": {
					"type": "number",
					"format": "double"
				},
				"otherSpecialConditionNote": {
					"type": "string"
				},
				"prescription": {
					"$ref": "#/definitions/Prescription"
				},
				"prescriptionByDate": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				},
				"quantity": {
					"type": "number",
					"format": "double"
				},
				"quantityKey": {
					"type": "string"
				},
				"secondaryMedicine": {
					"$ref": "#/definitions/SecondaryMedicine"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				},
				"specialCondition": {
					"type": "string"
				},
				"startDate": {
					"type": "string",
					"format": "date-time"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«PrescriptionDescription»"
		},
		"Resource«Prescription»": {
			"type": "object",
			"properties": {
				"afternoonQuantity": {
					"type": "number",
					"format": "double"
				},
				"code": {
					"type": "string"
				},
				"completionDay": {
					"type": "integer",
					"format": "int64"
				},
				"completionPercentage": {
					"type": "number",
					"format": "double"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"eveningQuantity": {
					"type": "number",
					"format": "double"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"internalComments": {
					"type": "string"
				},
				"isDeferred": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isDeliverable": {
					"type": "boolean"
				},
				"isInvoiced": {
					"type": "boolean"
				},
				"isSos": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"medicineGeneral": {
					"$ref": "#/definitions/MedicineGeneral"
				},
				"medicineInClinic": {
					"$ref": "#/definitions/MedicineInClinic"
				},
				"medicineInventories": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineInventory"
					}
				},
				"medicineInventory": {
					"$ref": "#/definitions/MedicineInventory"
				},
				"morningQuantity": {
					"type": "number",
					"format": "double"
				},
				"nightQuantity": {
					"type": "number",
					"format": "double"
				},
				"prescriptionByDates": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionByDate"
					}
				},
				"prescriptionDescriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PrescriptionDescription"
					}
				},
				"quantityKey": {
					"type": "string"
				},
				"secondaryMedicine": {
					"$ref": "#/definitions/SecondaryMedicine"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				},
				"specialCondition": {
					"type": "string"
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssue"
					}
				},
				"unitQuantity": {
					"type": "number",
					"format": "double"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Prescription»"
		},
		"Resource«ProcedureType»": {
			"type": "object",
			"properties": {
				"cgst": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/Clinic"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicalProcedures": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicalProcedure"
					}
				},
				"name": {
					"type": "string"
				},
				"price": {
					"type": "string"
				},
				"sgst": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«ProcedureType»"
		},
		"Resource«Referral»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorName": {
					"type": "string"
				},
				"doctorPhone": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"message": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Referral»"
		},
		"Resource«Salt»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicineSalts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineSalt"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Salt»"
		},
		"Resource«Scribble»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationAndDoxpers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxper"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"filePath": {
					"type": "string"
				},
				"fileType": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isPrescriptionPad": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"scribbleType": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"PATIENT_DOCUMENT",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Scribble»"
		},
		"Resource«SecondaryMedicine»": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdBy": {
					"type": "string"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"dosageForm": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isApproved": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"name": {
					"type": "string"
				},
				"origin": {
					"type": "string",
					"enum": [
						"POS",
						"TRANSCRIPTION",
						"BACKEND",
						"WEBSITE",
						"PATIENT_APP",
						"DOCTOR_APP",
						"CLINIC_APP"
					]
				},
				"posType": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«SecondaryMedicine»"
		},
		"Resource«SpecialityDiagnosisType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"speciality": {
					"$ref": "#/definitions/Speciality"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«SpecialityDiagnosisType»"
		},
		"Resource«SpecialityVitalType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"speciality": {
					"$ref": "#/definitions/Speciality"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"vitalType": {
					"$ref": "#/definitions/VitalType"
				}
			},
			"title": "Resource«SpecialityVitalType»"
		},
		"Resource«Speciality»": {
			"type": "object",
			"properties": {
				"active": {
					"type": "boolean"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorCount": {
					"type": "integer",
					"format": "int32"
				},
				"doctors": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Doctor"
					}
				},
				"healthProblemTagsForSpeciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/HealthProblemTagsForSpeciality"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"specialityDiagnosisTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityDiagnosisType"
					}
				},
				"specialityVitalTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityVitalType"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Speciality»"
		},
		"Resource«SpecimenTypeAndDiagnosticLab»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"diagnosticTypeSpecimenType": {
					"$ref": "#/definitions/DiagnosticTypeSpecimenType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"specimenType": {
					"$ref": "#/definitions/SpecimenType"
				},
				"vendorSampleId": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«SpecimenTypeAndDiagnosticLab»"
		},
		"Resource«SpecimenTypeAndVendorSample»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"specimenType": {
					"$ref": "#/definitions/SpecimenType"
				},
				"vendorSampleId": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«SpecimenTypeAndVendorSample»"
		},
		"Resource«SpecimenType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypeSpecimenTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeSpecimenType"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"maxStorage": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"specimenTypeAndDiagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecimenTypeAndDiagnosticLab"
					}
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«SpecimenType»"
		},
		"Resource«State»": {
			"type": "object",
			"properties": {
				"cities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/City"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«State»"
		},
		"Resource«SymptomTypes»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"critical": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«SymptomTypes»",
			"xml": {
				"name": "Resource«SymptomTypes»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«SymptomType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"critical": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptom"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«SymptomType»"
		},
		"Resource«Symptom»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isProvisional": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"symptomType": {
					"$ref": "#/definitions/SymptomType"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Symptom»",
			"xml": {
				"name": "Resource«Symptom»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«TakenMedicine»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				}
			},
			"title": "Resource«TakenMedicine»"
		},
		"Resource«Taxes»": {
			"type": "object",
			"properties": {
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypeInLab": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeInLab"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Taxes»"
		},
		"Resource«TestParameterMaster»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"department": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"labName": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"observation": {
					"type": "string"
				},
				"observationCode": {
					"type": "string"
				},
				"test": {
					"type": "string"
				},
				"testCode": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«TestParameterMaster»"
		},
		"Resource«TimeSlotGroup»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlot"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«TimeSlotGroup»"
		},
		"Resource«TimeSlot»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Consultation"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dayInterval": {
					"type": "string",
					"enum": [
						"MORNING",
						"AFTERNOON",
						"EVENING",
						"NIGHT"
					]
				},
				"dayOfWeek": {
					"type": "string",
					"enum": [
						"SUNDAY",
						"MONDAY",
						"TUESDAY",
						"WEDNESDAY",
						"THURSDAY",
						"FRIDAY",
						"SATURDAY"
					]
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinic"
					}
				},
				"end": {
					"$ref": "#/definitions/Time"
				},
				"hours": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"start": {
					"$ref": "#/definitions/Time"
				},
				"timeSlotGroup": {
					"$ref": "#/definitions/TimeSlotGroup"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«TimeSlot»",
			"xml": {
				"name": "Resource«TimeSlot»",
				"attribute": false,
				"wrapped": false
			}
		},
		"Resource«TranscriptionIssue»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdBy": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isResolved": {
					"type": "boolean"
				},
				"issue": {
					"$ref": "#/definitions/Issue"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"prescription": {
					"$ref": "#/definitions/Prescription"
				},
				"remarks": {
					"type": "string"
				},
				"transcription": {
					"$ref": "#/definitions/Transcription"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«TranscriptionIssue»"
		},
		"Resource«TranscriptionStateFlow»": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"state": {
					"type": "string",
					"enum": [
						"PENDING",
						"IN_PROGRESS",
						"COMPLETED"
					]
				},
				"transcription": {
					"$ref": "#/definitions/Transcription"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«TranscriptionStateFlow»"
		},
		"Resource«Transcription»": {
			"type": "object",
			"properties": {
				"childTranscriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Transcription"
					}
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"qaTranscription": {
					"$ref": "#/definitions/Transcription"
				},
				"state": {
					"type": "string",
					"enum": [
						"PENDING",
						"IN_PROGRESS",
						"COMPLETED"
					]
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssue"
					}
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«Transcription»"
		},
		"Resource«VisitType»": {
			"type": "object",
			"properties": {
				"active": {
					"type": "boolean"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				}
			},
			"title": "Resource«VisitType»"
		},
		"Resource«VitalType»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"name": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Resource«VitalType»"
		},
		"Resource«Vital»": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"links": {
					"type": "array",
					"xml": {
						"name": "link",
						"namespace": "http://www.w3.org/2005/Atom",
						"attribute": false,
						"wrapped": false
					},
					"items": {
						"$ref": "#/definitions/Link"
					}
				},
				"title": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"vitalType": {
					"$ref": "#/definitions/VitalType"
				}
			},
			"title": "Resource«Vital»"
		},
		"ResponseEntity": {
			"type": "object",
			"properties": {
				"body": {
					"type": "object"
				},
				"statusCode": {
					"type": "string",
					"enum": [
						"100 CONTINUE",
						"101 SWITCHING_PROTOCOLS",
						"102 PROCESSING",
						"103 CHECKPOINT",
						"200 OK",
						"201 CREATED",
						"202 ACCEPTED",
						"203 NON_AUTHORITATIVE_INFORMATION",
						"204 NO_CONTENT",
						"205 RESET_CONTENT",
						"206 PARTIAL_CONTENT",
						"207 MULTI_STATUS",
						"208 ALREADY_REPORTED",
						"226 IM_USED",
						"300 MULTIPLE_CHOICES",
						"301 MOVED_PERMANENTLY",
						"302 FOUND",
						"302 MOVED_TEMPORARILY",
						"303 SEE_OTHER",
						"304 NOT_MODIFIED",
						"305 USE_PROXY",
						"307 TEMPORARY_REDIRECT",
						"308 PERMANENT_REDIRECT",
						"400 BAD_REQUEST",
						"401 UNAUTHORIZED",
						"402 PAYMENT_REQUIRED",
						"403 FORBIDDEN",
						"404 NOT_FOUND",
						"405 METHOD_NOT_ALLOWED",
						"406 NOT_ACCEPTABLE",
						"407 PROXY_AUTHENTICATION_REQUIRED",
						"408 REQUEST_TIMEOUT",
						"409 CONFLICT",
						"410 GONE",
						"411 LENGTH_REQUIRED",
						"412 PRECONDITION_FAILED",
						"413 PAYLOAD_TOO_LARGE",
						"413 REQUEST_ENTITY_TOO_LARGE",
						"414 URI_TOO_LONG",
						"414 REQUEST_URI_TOO_LONG",
						"415 UNSUPPORTED_MEDIA_TYPE",
						"416 REQUESTED_RANGE_NOT_SATISFIABLE",
						"417 EXPECTATION_FAILED",
						"418 I_AM_A_TEAPOT",
						"419 INSUFFICIENT_SPACE_ON_RESOURCE",
						"420 METHOD_FAILURE",
						"421 DESTINATION_LOCKED",
						"422 UNPROCESSABLE_ENTITY",
						"423 LOCKED",
						"424 FAILED_DEPENDENCY",
						"426 UPGRADE_REQUIRED",
						"428 PRECONDITION_REQUIRED",
						"429 TOO_MANY_REQUESTS",
						"431 REQUEST_HEADER_FIELDS_TOO_LARGE",
						"451 UNAVAILABLE_FOR_LEGAL_REASONS",
						"500 INTERNAL_SERVER_ERROR",
						"501 NOT_IMPLEMENTED",
						"502 BAD_GATEWAY",
						"503 SERVICE_UNAVAILABLE",
						"504 GATEWAY_TIMEOUT",
						"505 HTTP_VERSION_NOT_SUPPORTED",
						"506 VARIANT_ALSO_NEGOTIATES",
						"507 INSUFFICIENT_STORAGE",
						"508 LOOP_DETECTED",
						"509 BANDWIDTH_LIMIT_EXCEEDED",
						"510 NOT_EXTENDED",
						"511 NETWORK_AUTHENTICATION_REQUIRED"
					]
				},
				"statusCodeValue": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "ResponseEntity"
		},
		"Salt": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicineSalts": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineSalt"
					}
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Salt"
		},
		"Scribble": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationAndDoxpers": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndDoxper"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"filePath": {
					"type": "string"
				},
				"fileType": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isPrescriptionPad": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scribbleType": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Scribble"
		},
		"ScribbleCreateDto": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"filePath": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"fileType": {
					"type": "string"
				},
				"scribbleType": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER"
					]
				}
			},
			"title": "ScribbleCreateDto"
		},
		"VendorPatientDocumentDto": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"filePath": {
					"type": "string"
				},
				"vendorFilePath": {
					"type": "string"
				},"vendorId":{
					"type": "integer",
					"format": "int64"
				},"vendorOrderId":{
				    "type": "string"
				},
				"scribbleType": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER",
						"PATIENT_DOCUMENT"
					]
				}
			},
			"title": "VendorPatientDocumentDto"
		},
		"ScribbleForDoxper": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationForScribble"
				},
				"filePath": {
					"type": "string"
				},
				"fileType": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scribbleType": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ScribbleForDoxper"
		},
		"Scribbles": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"filePath": {
					"type": "string"
				},
				"vendorFilePath": {
					"type": "string"
				},
				"fileType": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scribbleType": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER",
						"PATIENT_DOCUMENT"
					]
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Scribbles"
		},
		"ScribblesWithOverlayedImage": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"filePath": {
					"type": "string"
				},
				"fileType": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isPrescriptionPad": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"scribbleType": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER"
					]
				},
				"scribbleUrl": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ScribblesWithOverlayedImage"
		},
		"ScribblewithOverlayImageDto": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"filePath": {
					"type": "string"
				},
				"fileType": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"scribbleType": {
					"type": "string",
					"enum": [
						"SIGNED_UPLOAD",
						"UPLOAD",
						"CAMERA",
						"DOXPER",
						"E_PRESCRIPTION",
						"APPLE_PENCIL",
						"WACOM",
						"UPLOAD_POS",
						"SCANNER"
					]
				}
			},
			"title": "ScribblewithOverlayImageDto"
		},
		"SearchDetails": {
			"type": "object",
			"properties": {
				"childTests": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SearchDetails"
					}
				},
				"description": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"labs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticLabsWithPrice"
					}
				},
				"name": {
					"type": "string"
				},
				"preCondition": {
					"type": "string"
				},
				"specimenTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecimenTypes"
					}
				},
				"subType": {
					"type": "string",
					"enum": [
						"PATHOLOGY",
						"RADIOLOGY"
					]
				},
				"type": {
					"type": "string"
				}
			},
			"title": "SearchDetails"
		},
		"SecondaryMedicine": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdBy": {
					"type": "string"
				},
				"displayPrice": {
					"type": "number",
					"format": "float"
				},
				"dosageForm": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isApproved": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"medicine": {
					"$ref": "#/definitions/Medicine"
				},
				"name": {
					"type": "string"
				},
				"origin": {
					"type": "string",
					"enum": [
						"POS",
						"TRANSCRIPTION",
						"BACKEND",
						"WEBSITE",
						"PATIENT_APP",
						"DOCTOR_APP",
						"CLINIC_APP"
					]
				},
				"posType": {
					"type": "string"
				},
				"price": {
					"type": "number",
					"format": "float"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SecondaryMedicine"
		},
		"SecondaryMedicines": {
			"type": "object",
			"properties": {
				"category": {
					"type": "string",
					"enum": [
						"BRAND",
						"GENERIC"
					]
				},
				"createdBy": {
					"type": "string"
				},
				"dosageForm": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isApproved": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"origin": {
					"type": "string",
					"enum": [
						"POS",
						"TRANSCRIPTION",
						"BACKEND",
						"WEBSITE",
						"PATIENT_APP",
						"DOCTOR_APP",
						"CLINIC_APP"
					]
				},
				"posType": {
					"type": "string"
				}
			},
			"title": "SecondaryMedicines"
		},
		"Sort": {
			"type": "object",
			"properties": {
				"empty": {
					"type": "boolean"
				},
				"sorted": {
					"type": "boolean"
				},
				"unsorted": {
					"type": "boolean"
				}
			},
			"title": "Sort"
		},
		"SosDetails": {
			"type": "object",
			"properties": {
				"medicineName": {
					"type": "string"
				},
				"saltName": {
					"type": "string"
				},
				"otherSpecialConditionNote": {
					"type": "string"
				},
				"sosDetailsList": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SummarySOS"
					}
				},
				"specialNote": {
					"type": "string"
				}
			},
			"title": "SosDetails"
		},
		"SpecialiesForAppointment": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "SpecialiesForAppointment"
		},
		"Specialities": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"specialityDiagnosisTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityDiagnosisTypes"
					}
				},
				"specialityVitalTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityVitalTypes"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Specialities"
		},
		"SpecialitiesForPatientApp": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "SpecialitiesForPatientApp"
		},
		"SpecialitiesForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "SpecialitiesForRecommendation"
		},
		"PaginatedRecommendationAllergyTypeBody": {
			"type": "object",
			"properties": {
				"pages": {
					"type": "integer",
					"format": "int32"
				},
				"allergyTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationAllergyTypeDto"
					}
				}
			},
			"title": "PaginatedRecommendationAllergyTypeBody"
		},
		"RecommendationAllergyTypeDto": {
			"type": "object",
			"properties": {
				"creationTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"allergyType": {
					"$ref": "#/definitions/AllergyTypesForRecommendation"
				}
			},
			"title": "RecommendationAllergyTypeDto"
		},
		"AllergyTypesForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "AllergyTypesForRecommendation"
		},
		"RecommendationClinicalFindingTypeDto": {
			"type": "object",
			"properties": {
				"creationTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorInClinicId": {
					"type": "integer",
					"format": "int64"
				},
				"specialities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialitiesForRecommendation"
					}
				},
				"clinicalFindingType": {
					"$ref": "#/definitions/ClinicalFindingTypesForRecommendation"
				}
			},
			"title": "RecommendationClinicalFindingTypeDto"
		},
       "ClinicalFindingTypesForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "ClinicalFindingTypesForRecommendation"
		},
		"PaginatedRecommendationClinicalFindingTypeBody": {
			"type": "object",
			"properties": {
				"pages": {
					"type": "integer",
					"format": "int32"
				},
				"clinicalFindingTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RecommendationClinicalFindingTypeDto"
					}
				}
			},
			"title": "PaginatedRecommendationClinicalFindingTypeBody"
		},
		"Speciality": {
			"type": "object",
			"properties": {
				"active": {
					"type": "boolean"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"doctorCount": {
					"type": "integer",
					"format": "int32"
				},
				"doctors": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Doctor"
					}
				},
				"healthProblemTagsForSpeciality": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/HealthProblemTagsForSpeciality"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"specialityDiagnosisTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityDiagnosisType"
					}
				},
				"specialityVitalTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecialityVitalType"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Speciality"
		},
		"SpecialityDiagnosisType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"speciality": {
					"$ref": "#/definitions/Speciality"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecialityDiagnosisType"
		},
		"SpecialityDiagnosisTypes": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"diagnosisType": {
					"$ref": "#/definitions/DiagnosisType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecialityDiagnosisTypes"
		},
		"SpecialityDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "SpecialityDto"
		},
		"SpecialityForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "SpecialityForRecommendation"
		},
		"SpecialityVitalType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"speciality": {
					"$ref": "#/definitions/Speciality"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"vitalType": {
					"$ref": "#/definitions/VitalType"
				}
			},
			"title": "SpecialityVitalType"
		},
		"SpecialityVitalTypes": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"vitalType": {
					"$ref": "#/definitions/VitalTypes"
				}
			},
			"title": "SpecialityVitalTypes"
		},
		"SpecialityWithIdAndName": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"doctorCount": {
					"type": "integer",
					"format": "int32"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecialityWithIdAndName"
		},
		"SpecimenType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypeSpecimenTypes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeSpecimenType"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"maxStorage": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"specimenTypeAndDiagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SpecimenTypeAndDiagnosticLab"
					}
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecimenType"
		},
		"SpecimenTypeAndDiagnosticLab": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"diagnosticTypeSpecimenType": {
					"$ref": "#/definitions/DiagnosticTypeSpecimenType"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"specimenType": {
					"$ref": "#/definitions/SpecimenType"
				},
				"vendorSampleId": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecimenTypeAndDiagnosticLab"
		},
		"SpecimenTypeAndVendorSample": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticLab": {
					"$ref": "#/definitions/DiagnosticLab"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"specimenType": {
					"$ref": "#/definitions/SpecimenType"
				},
				"vendorSampleId": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecimenTypeAndVendorSample"
		},
		"SpecimenTypeAndVendorSampleDto": {
			"type": "object",
			"properties": {
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"specimenTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"vendorSampleId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecimenTypeAndVendorSampleDto"
		},
		"SpecimenTypeAndVendorSampleErrDto": {
			"type": "object",
			"properties": {
				"error": {
					"type": "string"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"specimenTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"vendorSampleId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecimenTypeAndVendorSampleErrDto"
		},
		"SpecimenTypeDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"maxStorage": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				}
			},
			"title": "SpecimenTypeDto"
		},
		"SpecimenTypes": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"maxStorage": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecimenTypes"
		},
		"SpecimenTypesForIntegration": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"maxStorage": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SpecimenTypesForIntegration"
		},
		"State": {
			"type": "object",
			"properties": {
				"cities": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/City"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "State"
		},
		"StateCity": {
			"type": "object",
			"properties": {
				"cities": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"states": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"title": "StateCity"
		},
		"StateResponseDto": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"value": {
					"type": "string"
				}
			},
			"title": "StateResponseDto"
		},
		"StringBuilder": {
			"type": "object",
			"title": "StringBuilder"
		},
		"Summary": {
			"type": "object",
			"properties": {
				"detail": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Detail"
					}
				},
				"name": {
					"type": "string"
				},
				"saltName": {
					"type": "string"
				},
				"otherSpecialConditionNote": {
					"type": "string"
				},
				"specialNote": {
					"type": "string"
				}
			},
			"title": "Summary"
		},
		"SummaryDto": {
			"type": "object",
			"properties": {
				"addressId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"diagnosticsDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"isEdit": {
					"type": "boolean"
				},
				"medicinesDiscountPercentage": {
					"type": "number",
					"format": "float"
				},
				"offerPrice": {
					"type": "number",
					"format": "float"
				},
				"payLaterForDeliveryMedicines": {
					"type": "boolean"
				},
				"payLaterForHomeCollectionOnTests": {
					"type": "boolean"
				},
				"settleConsultationAmount": {
					"type": "boolean"
				}
			},
			"title": "SummaryDto"
		},
		"SummarySOS": {
			"type": "object",
			"properties": {
				"duration": {
					"type": "integer",
					"format": "int64"
				},
				"durationKey": {
					"type": "string"
				},
				"quantityKey": {
					"type": "string"
				},
				"sosDate": {
					"type": "string",
					"format": "date-time"
				},
				"sosQuantity": {
					"type": "number",
					"format": "double"
				},
				"sosQuantityKey": {
					"type": "string"
				}
			},
			"title": "SummarySOS"
		},
		"SummeryData": {
			"type": "object",
			"properties": {
				"checkedin": {
					"type": "integer",
					"format": "int64"
				},
				"open": {
					"type": "integer",
					"format": "int64"
				},
				"visited": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SummeryData"
		},
		"Symptom": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"declineReason": {
					"$ref": "#/definitions/DeclineReason"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isProvisional": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"symptomType": {
					"$ref": "#/definitions/SymptomType"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Symptom"
		},
		"SymptomDto": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"length": {
					"type": "string"
				},
				"isProvisional": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"symptomTypeId": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SymptomDto"
		},
		"SymptomForElastic": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"symptomType": {
					"$ref": "#/definitions/SymptomTypeForElastic"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SymptomForElastic"
		},
		"SymptomForQueue": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"isCritical": {
					"type": "boolean"
				},
				"symptomTypeId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SymptomForQueue"
		},
		"SymptomType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"critical": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Symptom"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SymptomType"
		},
		"SymptomTypeForElastic": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "SymptomTypeForElastic"
		},
		"SymptomTypeForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "SymptomTypeForRecommendation"
		},
		"SymptomTypes": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"critical": {
					"type": "boolean"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "SymptomTypes"
		},
		"SymptomTypesForRecommendation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "SymptomTypesForRecommendation"
		},
		"Symptoms": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isCritical": {
					"type": "boolean"
				},
				"isDeleted": {
					"type": "boolean"
				},
				"isProvisional": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"symptomType": {
					"$ref": "#/definitions/SymptomTypes"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Symptoms"
		},
		"SymptomsDto": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				}
			},
			"title": "SymptomsDto"
		},
		"TagDetail": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"year": {
					"type": "string"
				}
			},
			"title": "TagDetail"
		},
		"TakenMedicine": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "TakenMedicine"
		},
		"TakenMedicines": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TakenMedicines"
		},
		"Taxes": {
			"type": "object",
			"properties": {
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"diagnosticTypeInLab": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticTypeInLab"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Taxes"
		},
		"TaxesBodyDto": {
			"type": "object",
			"properties": {
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "TaxesBodyDto"
		},
		"TaxesDto": {
			"type": "object",
			"properties": {
				"idsForDelete": {
					"type": "array",
					"items": {
						"type": "integer",
						"format": "int64"
					}
				},
				"taxes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TaxesBodyDto"
					}
				}
			},
			"title": "TaxesDto"
		},
		"Taxess": {
			"type": "object",
			"properties": {
				"cgst": {
					"type": "number",
					"format": "float"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"sgst": {
					"type": "number",
					"format": "float"
				}
			},
			"title": "Taxess"
		},
		"TestBookingDto": {
			"type": "object",
			"properties": {
				"diagnosticLabs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticLabsForTests"
					}
				},
				"precautions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Precautions"
					}
				}
			},
			"title": "TestBookingDto"
		},
		"TestParameterMaster": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"department": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"labName": {
					"type": "string"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"observation": {
					"type": "string"
				},
				"observationCode": {
					"type": "string"
				},
				"test": {
					"type": "string"
				},
				"testCode": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TestParameterMaster"
		},
		"Time": {
			"type": "object",
			"properties": {
				"date": {
					"type": "integer",
					"format": "int32"
				},
				"day": {
					"type": "integer",
					"format": "int32"
				},
				"hours": {
					"type": "integer",
					"format": "int32"
				},
				"minutes": {
					"type": "integer",
					"format": "int32"
				},
				"month": {
					"type": "integer",
					"format": "int32"
				},
				"seconds": {
					"type": "integer",
					"format": "int32"
				},
				"time": {
					"type": "integer",
					"format": "int64"
				},
				"timezoneOffset": {
					"type": "integer",
					"format": "int32"
				},
				"year": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Time"
		},
		"DoctorInClinicTimeSlot": {
			"type": "object",
			"properties": {
							"id": {
					"type": "integer",
					"format": "int64"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"consultationType": {
					"type": "string",
					"enum": [
						"BOTH",
						"IN_CLINIC",
						"E_CONSULTATION"
					]
				},
				"isMeddoSure": {
					"type": "boolean"
				},
				"doctorInClinic": {

						"$ref": "#/definitions/DoctorInClinic"

				},
				"timeSlot": {
					"$ref": "#/definitions/TimeSlot"
				}
				},
			"title": "DoctorInClinicTimeSlot"
		},
		"TimeSlot": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Consultation"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dayInterval": {
					"type": "string",
					"enum": [
						"MORNING",
						"AFTERNOON",
						"EVENING",
						"NIGHT"
					]
				},
				"dayOfWeek": {
					"type": "string",
					"enum": [
						"SUNDAY",
						"MONDAY",
						"TUESDAY",
						"WEDNESDAY",
						"THURSDAY",
						"FRIDAY",
						"SATURDAY"
					]
				},
				"doctorInClinics": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinic"
					}
				},
				"end": {
					"$ref": "#/definitions/Time"
				},
				"hours": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"start": {
					"$ref": "#/definitions/Time"
				},
				"timeSlotGroup": {
					"$ref": "#/definitions/TimeSlotGroup"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TimeSlot"
		},
		"TimeSlotGroup": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlot"
					}
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TimeSlotGroup"
		},
		"TimeSlotGroupsForTimeSlot": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"timeSlots": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlotsForPos"
					}
				}
			},
			"title": "TimeSlotGroupsForTimeSlot"
		},
		"TimeSlotsBookStatus": {
			"type": "object",
			"properties": {
				"booked": {
					"type": "boolean"
				},
				"isAvailableAtClinic;": {
					"type": "boolean"
				},
				"isAvailableOnline": {
					"type": "boolean"
				},
				"consultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationForTimeSlotInAppointment"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"type": {
				  "type":"string",
				  "enum": [
						"BOTH",
						"E_CONSULTATION",
						"IN_CLINIC"
					]
				},
				"dayOfWeek": {
					"type": "string",
					"enum": [
						"SUNDAY",
						"MONDAY",
						"TUESDAY",
						"WEDNESDAY",
						"THURSDAY",
						"FRIDAY",
						"SATURDAY"
					]
				},
				"end": {
					"type": "string"
				},
				"hour": {
					"type": "string"
				},
				"dicId":{
				    "type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"start": {
					"type": "string"
				}
			},
			"title": "TimeSlotsBookStatus"
		},
		"TimeSlotsForPos": {
			"type": "object",
			"properties": {
				"dayInterval": {
					"type": "string",
					"enum": [
						"MORNING",
						"AFTERNOON",
						"EVENING",
						"NIGHT"
					]
				},
				"dayOfWeek": {
					"type": "string",
					"enum": [
						"SUNDAY",
						"MONDAY",
						"TUESDAY",
						"WEDNESDAY",
						"THURSDAY",
						"FRIDAY",
						"SATURDAY"
					]
				},
				"end": {
					"$ref": "#/definitions/Time"
				},
				"hours": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"start": {
					"$ref": "#/definitions/Time"
				}
			},
			"title": "TimeSlotsForPos"
		},
		"TimeSlotsGrouping": {
			"type": "object",
			"properties": {
				"cancelled": {
					"type": "integer",
					"format": "int64"
				},
				"checked_in": {
					"type": "integer",
					"format": "int64"
				},
				"completed": {
					"type": "integer",
					"format": "int64"
				},
				"confirmed": {
					"type": "integer",
					"format": "int64"
				},
				"consultations": {
					"type": "object",
					"additionalProperties": {
						"type": "integer",
						"format": "int64"
					}
				},
				"date": {
					"type": "string"
				},
				"end": {
					"$ref": "#/definitions/Time"
				},
				"hour": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"start": {
					"$ref": "#/definitions/Time"
				},
				"totalTimeSlotsInHour": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TimeSlotsGrouping"
		},
		"TimeSlotsState": {
			"type": "object",
			"properties": {
				"date": {
					"type": "string"
				},
				"hour": {
					"type": "string"
				},
				"usingMeddoLite":{
				"type": "boolean"
				},
				"isAvailableOnline":{
				"type": "boolean"
				},
				"canCallPatient":{
				"type": "boolean"
				},
				"timeSlotState": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TimeSlotsBookStatus"
					}
				},
				"totalNoOfSlotsInHours": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TimeSlotsState"
		},
		"TimeSlotsWBooking": {
			"type": "object",
			"properties": {
				"booked": {
					"type": "boolean"
				},
				"code": {
					"type": "string"
				},
				"consultations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationForTimeSlots"
					}
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dayInterval": {
					"type": "string",
					"enum": [
						"MORNING",
						"AFTERNOON",
						"EVENING",
						"NIGHT"
					]
				},
				"dayOfWeek": {
					"type": "string",
					"enum": [
						"SUNDAY",
						"MONDAY",
						"TUESDAY",
						"WEDNESDAY",
						"THURSDAY",
						"FRIDAY",
						"SATURDAY"
					]
				},
				"end": {
					"$ref": "#/definitions/Time"
				},
				"hour": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"start": {
					"$ref": "#/definitions/Time"
				}
			},
			"title": "TimeSlotsWBooking"
		},
		"TimeSlotsWoConsultation": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"end": {
					"$ref": "#/definitions/Time"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"start": {
					"$ref": "#/definitions/Time"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TimeSlotsWoConsultation"
		},
		"Timestamp": {
			"type": "object",
			"properties": {
				"date": {
					"type": "integer",
					"format": "int32"
				},
				"day": {
					"type": "integer",
					"format": "int32"
				},
				"hours": {
					"type": "integer",
					"format": "int32"
				},
				"minutes": {
					"type": "integer",
					"format": "int32"
				},
				"month": {
					"type": "integer",
					"format": "int32"
				},
				"nanos": {
					"type": "integer",
					"format": "int32"
				},
				"seconds": {
					"type": "integer",
					"format": "int32"
				},
				"time": {
					"type": "integer",
					"format": "int64"
				},
				"timezoneOffset": {
					"type": "integer",
					"format": "int32"
				},
				"year": {
					"type": "integer",
					"format": "int32"
				}
			},
			"title": "Timestamp"
		},
		"TranscribeConsultationDto": {
			"type": "object",
			"properties": {
				"adviceDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/AdviceDto"
					}
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"diagnosisDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosisDto"
					}
				},
				"diagnosticUniverseDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DiagnosticUniverseDto"
					}
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditionForQueue"
					}
				},
				"followUps": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ConsultationAndFollowupDto"
					}
				},
				"isTranscribed": {
					"type": "boolean"
				},
				"issues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IssueDto"
					}
				},
				"medicineAndPrescriptionDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MedicineAndPrescriptionDto"
					}
				},
				"procedureDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProcedureDto"
					}
				},
				"symptomDto": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomDto"
					}
				},
				"transcriptionId": {
					"type": "integer",
					"format": "int64"
				},
				"vitals": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/VitalDto"
					}
				}
			},
			"title": "TranscribeConsultationDto"
		},
		"Transcription": {
			"type": "object",
			"properties": {
				"childTranscriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Transcription"
					}
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"qaTranscription": {
					"$ref": "#/definitions/Transcription"
				},
				"state": {
					"type": "string",
					"enum": [
						"PENDING",
						"IN_PROGRESS",
						"COMPLETED"
					]
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssue"
					}
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Transcription"
		},
		"TranscriptionAdminResponse": {
			"type": "object",
			"properties": {
				"completedTaskCount": {
					"type": "integer",
					"format": "int64"
				},
				"inProgressCount": {
					"type": "integer",
					"format": "int64"
				},
				"issueCount": {
					"type": "integer",
					"format": "int64"
				},
				"key": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				},
				"pendingTaskCount": {
					"type": "integer",
					"format": "int64"
				},
				"totalTaskCount": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TranscriptionAdminResponse"
		},
		"TranscriptionDto": {
			"type": "object",
			"properties": {
				"issues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/IssueDto"
					}
				},
				"transcriptionId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TranscriptionDto"
		},
		"TranscriptionIssue": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdBy": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isResolved": {
					"type": "boolean"
				},
				"issue": {
					"$ref": "#/definitions/Issue"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"prescription": {
					"$ref": "#/definitions/Prescription"
				},
				"remarks": {
					"type": "string"
				},
				"transcription": {
					"$ref": "#/definitions/Transcription"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TranscriptionIssue"
		},
		"TranscriptionIssues": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"issue": {
					"$ref": "#/definitions/Issues"
				}
			},
			"title": "TranscriptionIssues"
		},
		"TranscriptionIssuesForAdmin": {
			"type": "object",
			"properties": {
				"createdBy": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"issue": {
					"$ref": "#/definitions/Issues"
				},
				"transcription": {
					"$ref": "#/definitions/TranscriptionsForAdmin"
				}
			},
			"title": "TranscriptionIssuesForAdmin"
		},
		"TranscriptionStateFlow": {
			"type": "object",
			"properties": {
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModifiedAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"state": {
					"type": "string",
					"enum": [
						"PENDING",
						"IN_PROGRESS",
						"COMPLETED"
					]
				},
				"transcription": {
					"$ref": "#/definitions/Transcription"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TranscriptionStateFlow"
		},
		"Transcriptions": {
			"type": "object",
			"properties": {
				"childTranscriptions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionsWoConsultation"
					}
				},
				"consultation": {
					"$ref": "#/definitions/ConsultationsForTranscriptionRevamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"state": {
					"type": "string",
					"enum": [
						"PENDING",
						"IN_PROGRESS",
						"COMPLETED"
					]
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssues"
					}
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "Transcriptions"
		},
		"TranscriptionsForAdmin": {
			"type": "object",
			"properties": {
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"state": {
					"type": "string",
					"enum": [
						"PENDING",
						"IN_PROGRESS",
						"COMPLETED"
					]
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TranscriptionsForAdmin"
		},
		"TranscriptionsWoConsultation": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"state": {
					"type": "string",
					"enum": [
						"PENDING",
						"IN_PROGRESS",
						"COMPLETED"
					]
				},
				"transcriptionIssues": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TranscriptionIssues"
					}
				},
				"type": {
					"type": "string",
					"enum": [
						"MEDICINE",
						"DIAGNOSTIC",
						"OTHER",
						"REGISTRATION",
						"CONSULTATION",
						"QA"
					]
				},
				"userId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "TranscriptionsWoConsultation"
		},
		"UploadStatus": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"pateintId": {
					"type": "integer",
					"format": "int64"
				},
				"status": {
					"type": "string"
				}
			},
			"title": "UploadStatus"
		},
		"View": {
			"type": "object",
			"properties": {
				"contentType": {
					"type": "string"
				}
			},
			"title": "View"
		},
		"VisitPatientForDoctor": {
			"type": "object",
			"properties": {
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				},
				"doctorName": {
					"type": "string"
				},
				"existingCondition": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditionForElastic"
					}
				},
				"existingConditions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ExistingConditions"
					}
				},
				"patient": {
					"$ref": "#/definitions/PatientWoFamily"
				},
				"patients": {
					"$ref": "#/definitions/PatientForESearch"
				},
				"symptom": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/SymptomForElastic"
					}
				},
				"symptoms": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Diagnoses"
					}
				},
				"visitType": {
					"$ref": "#/definitions/VisitTypes"
				},
				"visitTypes": {
					"$ref": "#/definitions/VisitTypes"
				}
			},
			"title": "VisitPatientForDoctor"
		},
		"VisitType": {
			"type": "object",
			"properties": {
				"active": {
					"type": "boolean"
				},
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "VisitType"
		},
		"VisitTypes": {
			"type": "object",
			"properties": {
				"active": {
					"type": "boolean"
				},
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				}
			},
			"title": "VisitTypes"
		},
		"Vital": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultation": {
					"$ref": "#/definitions/Consultation"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"title": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"vitalType": {
					"$ref": "#/definitions/VitalType"
				}
			},
			"title": "Vital"
		},
		"VitalDto": {
			"type": "object",
			"properties": {
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReason"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"title": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"vitalTypeId": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "VitalDto"
		},
		"VitalType": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"name": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "VitalType"
		},
		"VitalTypes": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				}
			},
			"title": "VitalTypes"
		},
		"Vitals": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"consultationReason": {
					"$ref": "#/definitions/ConsultationReasons"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"title": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"vitalType": {
					"$ref": "#/definitions/VitalTypes"
				}
			},
			"title": "Vitals"
		},
		"YourPatient": {
			"type": "object",
			"properties": {
				"appointment": {
					"type": "integer",
					"format": "int64"
				},
				"avgSession": {
					"type": "string"
				},
				"dateWisePatient": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DateWisePatient"
					}
				},
				"growthRate": {
					"$ref": "#/definitions/GrowthRate"
				},
				"patient": {
					"type": "integer",
					"format": "int64"
				},
				"status": {
					"type": "string"
				},
				"walk_IN": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "YourPatient"
		},
		"ZipcodeAndClusterNameDto": {
			"type": "object",
			"properties": {
				"clusterName": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"invoiceCode": {
					"type": "string"
				},
				"isActive": {
					"type": "boolean"
				},
				"labCode": {
					"type": "string"
				},
				"labId": {
					"type": "integer",
					"format": "int64"
				},
				"warehouseCode": {
					"type": "string"
				},
				"zipcode": {
					"type": "integer",
					"format": "int64"
				}
			},
			"title": "ZipcodeAndClusterNameDto"
		},
		"LiteConsultations": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"source": {
					"type": "string",
					"enum": [
						"E_PRESCRIPTION",
						"DOXPER",
						"NORMAL",
						"MEDDO_LITE"
					]
				},
				"phone": {
					"type": "string"
				},
				"referredByDoctor": {
					"type": "string"
				},
				"referralPhone": {
					"type": "string"
				},
				"ePrescriptionJson": {
					"type": "string"
				},
				"doctorInClinic": {
					"$ref": "#/definitions/DoctorInClinicsWoLiteConsultation"
				},
				"declineReason": {
					"items": {
						"$ref": "#/definitions/DeclineReasonsForLiteConsultation"
					}
				},
				"liteScribbles": {
					"type": "array",
					"items": {
						"$ref": "string"
					}
				},
				"liteConsultationStatus": {
					"type": "string",
					"enum": [
						"PENDING",
						"NEW",
						"CREATING",
						"CREATED",
						"ISSUE",
						"DONE",
						"CONSULTATION_ISSUE"
					]
				},
				"visitType": {
					"type": "object",
					"items": {
						"$ref": "#/definitions/VisitTypes"
					}
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"consultationId": {
					"type": "integer",
					"format": "int64"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"isEprescription": {
					"type": "boolean"
				},
				"isVisited": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"dateOfbirth": {
					"type": "string",
					"format": "date-time"
				},
				"appointmentTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "liteConsultations"
		},
		"DoctorInClinicForOrder": {
			"type": "object",
			"properties": {
			    "isMeddoSure": {
					"type": "boolean"
				},
				"chamberIn": {
					"type": "string"
				},
				"clinic": {
					"$ref": "#/definitions/ClinicForOrderDetail"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"diagnosticsCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"doctor": {
					"$ref": "#/definitions/DoctorForOrder"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"locusHomeBaseId": {
					"type": "string"
				},
				"locusTeamId": {
					"type": "string"
				},
				"medicinesCommissionPercentage": {
					"type": "integer",
					"format": "int64"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"userLatitude": {
					"type": "number",
					"format": "double"
				},
				"userLongitude": {
					"type": "number",
					"format": "double"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"isMeddoSure": {
					"type": "boolean"
				},
				"isSmsEnabled": {
				"type": "boolean"
				},
				"isWhatsappEnabled": {
				"type": "boolean"
				}

			},
			"title": "DoctorInClinicForOrder"
		},"DoctorForOrder": {
			"type": "object",
			"properties": {
				"affiliation": {
					"type": "string"
				},
				"billingContact": {
					"type": "string"
				},
				"code": {
					"type": "string"
				},
				"experience": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"phone": {
					"type": "string"
				},
				"profilePic": {
					"type": "string"
				},
				"qualifications": {
					"type": "string"
				},
				"registrationNumber": {
					"type": "string"
				}
			},
			"title": "DoctorForOrder"
		},
		"UtmParameterDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "refType": {
                    "type": "string",
                    "enum": [
                        "CONSULTATION",
                        "SUBSCRIPTION",
                        "ORDER",
                        "USER"
                    ]
                },
                "refId": {
                    "type": "integer",
                    "format": "int32"
                },
                "utmSource": {
                    "type": "string"
                },
                "utmMedium": {
                    "type": "string"
                },
                "utmCampaign": {
                    "type": "string"
                }
            },
            "title": "UtmParameterDto"
          },
		"DoctorInClinicsWoLiteConsultation": {
			"type": "object",
			"properties": {
				"code": {
					"type": "string"
				},
				"chamberIn": {
					"type": "string"
				},
				"consultationFee": {
					"type": "number",
					"format": "float"
				},
				"doxperUserName": {
					"type": "string"
				},
				"isSmsEnabled": {
					"type": "boolean"
				},
				"isWhatsappEnabled": {
					"type": "boolean"
				},
				"consultationServiceRevenueDisabled": {
					"type": "boolean"
				},
				"hasNutrition": {
					"type": "boolean"
				},
				"hasPathology": {
					"type": "boolean"
				},
				"hasConsultation": {
					"type": "boolean"
				},
				"hasDispensing": {
					"type": "boolean"
				},
				"hasLifesytle": {
					"type": "boolean"
				},
				"hasRadiology": {
					"type": "boolean"
				},
				"locusHomeBaseId": {
					"type": "string"
				},
				"locusTeamId": {
					"type": "string"
				},
				"prescriptionPadUrl": {
					"type": "string"
				},
				"doctor": {
					"$ref": "#/definitions/Doctors"
				},
				"doctorInClinicConfigurations": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/DoctorInClinicConfigurationWoDic"
					}
				},
				"clinic": {
					"$ref": "#/definitions/ClinicsWoDoctorInClinics"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"version": {
					"type": "integer",
					"format": "int64"
				},
				"isActive": {
					"type": "boolean"
				},
				"separateConsultationInvoiceEnabled": {
					"type": "boolean"
				},
				"isReferredBy": {
					"type": "boolean"
				},
				"canCallPatient": {
					"type": "boolean"
				},
				"usingMeddoLite": {
					"type": "boolean"
				},
				"settledConsultation": {
					"type": "boolean"
				},
				"lastModified": {
					"$ref": "#/definitions/Timestamp"
				},
				"createdAt": {
					"$ref": "#/definitions/Timestamp"
				},
				"visitStartTime": {
					"type": "string",
					"format": "date-time"
				},
				"visitEndTime": {
					"type": "string",
					"format": "date-time"
				}
			},
			"title": "doctorInClinicsWoLiteConsultation"
		},
		"UtmParameterDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "refType": {
                    "type": "string",
                    "enum": [
                        "CONSULTATION",
                        "SUBSCRIPTION",
                        "ORDER",
                        "USER"
                    ]
                },
                "refId": {
                    "type": "integer",
                    "format": "int32"
                },
                "utmSource": {
                    "type": "string"
                },
                "utmMedium": {
                    "type": "string"
                },
                "utmCampaign": {
                    "type": "string"
                }
            },
            "title": "UtmParameterDetails"
        },
		"DeclineReasonsForLiteConsultation": {
			"type": "object",
			"properties": {
				"reason": {
					"type": "string"
				},
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"rank": {
					"type": "integer",
					"format": "int64"
				},
				"declineReasonType": {
					"type": "string",
					"enum": [
						"CONSULTATION",
						"LITE_CONSULTATION"
					]
				}
			},
			"title": "declineReasonsForLiteConsultation"
		}
	}
}
