version: '3'

services:
  zookeeper-1:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
#    volumes:
    networks:
      - ayush-cluster

  kafka-1:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: always
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=101
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-1:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
#    volumes:
    networks:
      - ayush-cluster

networks:
  ayush-cluster:
    driver: bridge


    environment:

     KAFKA_ADVERTISED_HOST_NAME: <host IP>

     KAFKA_PORT_NUMBER: 9092

     KAFKA_ZOOKEEPER_CONNECT: <server 1 IP>:2181,<server 2 IP> :2181,<server 3 IP>:2181

     KAFKA_ADVERTISED_LISTENERS: INSIDE://:19092,OUTSIDE://<Host IP>:9092

     KAFKA_LISTENERS: INSIDE://:19092,OUTSIDE://:9092

     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT

     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

     KAFKA_BROKER_ID: 1

docker-compose -f <docker-compose_file_name> up -d
ex : docker-compose -f zk-single-kafka-single.yml up -d

Connect to Kafka shell
=================================
docker exec -it kafka /bin/bash
Just replace kafka with the value of container_name, if youâ€™ve decided to name it differently in the docker-compose.yml file.



Create your first Kafka topic
================================
All Kafka shell scripts are located in /opt/kafka_<version>/bin





						environment:
							KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
							KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
							KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
							KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
							KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
Let's explore some of the above environment variables:

- KAFKA_ADVERTISED_LISTENERS - the list of available addresses that points to the Kafka broker. Kafka will send them to clients on their initial connection.

- KAFKA_LISTENERS - the list of addresses (0.0.0.0:9093, 0.0.0.0:9092) and listener names (INSIDE, OUTSIDE) on which Kafka broker will listen on for incoming connections.

- KAFKA_LISTENER_SECURITY_PROTOCOL_MAP - maps the defined above listener names (INSIDE, OUTSIDE) to the PLAINTEXT Kafka protocol.

- KAFKA_INTER_BROKER_LISTENER_NAME - points to a listener name that will be used for cross-broker communication.

Here we defined two listeners (INSIDE://0.0.0.0:9093, OUTSIDE://0.0.0.0:9092) for internal traffic within the Docker network and external traffic from the Docker host machine respectively. 
We specified the INSIDE listener for the cross-broker communication. 
By means of KAFKA_ADVERTISED_LISTENERS and KAFKA_LISTENER_SECURITY_PROTOCOL_MAP we instructed Kafka to send PLAINTEXT://kafka:9093 to those clients that come to it on kafka:9093 
and PLAINTEXT://localhost:9092 to those who come on localhost:9092. 