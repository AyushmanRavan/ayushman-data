https://www.freecodecamp.org/news/what-are-observables-how-they-are-different-from-promises/


var observable = Rx.Observable.create((observer: any) =>{

   observer.next(‘Hi Observable’);        
    setTimeout(()=>{
        observer.next(‘Yes, somehow understandable!’)
    }, 1000)   

   observer.next( ‘Am I understandable?’ );

})


observer.next(‘hii’);          //this can be multiple (more than one)
observer.error(‘error occurs’) // this call whenever any error occus.
Observer.complete(‘completion of delivery of all values’) // this tells the subscriptions to observable is completed. No delivery is going to take place after this statement.

var observable = new Observable( (observer: any) => {
    OR
var observable = Rx.Observable.create((observer: any) =>{
try {
        observer.next(‘Hi Observable’);                                       
        setTimeout(()=>{
            observer.next(‘Yes, somehow understandable!’)
        }, 1000)   
        observer.next( ‘Am I understandable?’ );
        observer.complete();
        observer.next(‘lAST DELIVERY?’ );  
        // above block is not going to execute as completion notification is already sent.
   } catch(err){
     observer.error(err);	
  }

})  

var subscription = observable.subscribe((val: any) => console.log(val), (error: any) => console.log("error"), () => console.log("complete")); 
subscription.unsubscribe();